
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model Bcrs
 * 
 */
export type Bcrs = $Result.DefaultSelection<Prisma.$BcrsPayload>
/**
 * Model Fundings
 * 
 */
export type Fundings = $Result.DefaultSelection<Prisma.$FundingsPayload>
/**
 * Model FundingRequirements
 * 
 */
export type FundingRequirements = $Result.DefaultSelection<Prisma.$FundingRequirementsPayload>
/**
 * Model FundingHistories
 * 
 */
export type FundingHistories = $Result.DefaultSelection<Prisma.$FundingHistoriesPayload>
/**
 * Model ReferenceData
 * 
 */
export type ReferenceData = $Result.DefaultSelection<Prisma.$ReferenceDataPayload>
/**
 * Model ReleaseNotes
 * 
 */
export type ReleaseNotes = $Result.DefaultSelection<Prisma.$ReleaseNotesPayload>
/**
 * Model SequelizeMeta
 * 
 */
export type SequelizeMeta = $Result.DefaultSelection<Prisma.$SequelizeMetaPayload>
/**
 * Model BcrConfigs
 * 
 */
export type BcrConfigs = $Result.DefaultSelection<Prisma.$BcrConfigsPayload>
/**
 * Model Users
 * 
 */
export type Users = $Result.DefaultSelection<Prisma.$UsersPayload>
/**
 * Model Session
 * 
 */
export type Session = $Result.DefaultSelection<Prisma.$SessionPayload>

/**
 * Enums
 */
export namespace $Enums {
  export const enum_Bcrs_priority: {
  low: 'low',
  medium: 'medium',
  high: 'high',
  critical: 'critical'
};

export type enum_Bcrs_priority = (typeof enum_Bcrs_priority)[keyof typeof enum_Bcrs_priority]


export const enum_Bcrs_status: {
  draft: 'draft',
  submitted: 'submitted',
  under_review: 'under_review',
  approved: 'approved',
  rejected: 'rejected',
  implemented: 'implemented'
};

export type enum_Bcrs_status = (typeof enum_Bcrs_status)[keyof typeof enum_Bcrs_status]


export const enum_ReleaseNotes_environment: {
  development: 'development',
  test: 'test',
  staging: 'staging',
  production: 'production'
};

export type enum_ReleaseNotes_environment = (typeof enum_ReleaseNotes_environment)[keyof typeof enum_ReleaseNotes_environment]


export const enum_ReleaseNotes_status: {
  planned: 'planned',
  in_progress: 'in_progress',
  completed: 'completed',
  failed: 'failed',
  cancelled: 'cancelled'
};

export type enum_ReleaseNotes_status = (typeof enum_ReleaseNotes_status)[keyof typeof enum_ReleaseNotes_status]


export const enum_Users_role: {
  admin: 'admin',
  business: 'business'
};

export type enum_Users_role = (typeof enum_Users_role)[keyof typeof enum_Users_role]

}

export type enum_Bcrs_priority = $Enums.enum_Bcrs_priority

export const enum_Bcrs_priority: typeof $Enums.enum_Bcrs_priority

export type enum_Bcrs_status = $Enums.enum_Bcrs_status

export const enum_Bcrs_status: typeof $Enums.enum_Bcrs_status

export type enum_ReleaseNotes_environment = $Enums.enum_ReleaseNotes_environment

export const enum_ReleaseNotes_environment: typeof $Enums.enum_ReleaseNotes_environment

export type enum_ReleaseNotes_status = $Enums.enum_ReleaseNotes_status

export const enum_ReleaseNotes_status: typeof $Enums.enum_ReleaseNotes_status

export type enum_Users_role = $Enums.enum_Users_role

export const enum_Users_role: typeof $Enums.enum_Users_role

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Bcrs
 * const bcrs = await prisma.bcrs.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Bcrs
   * const bcrs = await prisma.bcrs.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.bcrs`: Exposes CRUD operations for the **Bcrs** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Bcrs
    * const bcrs = await prisma.bcrs.findMany()
    * ```
    */
  get bcrs(): Prisma.BcrsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.fundings`: Exposes CRUD operations for the **Fundings** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Fundings
    * const fundings = await prisma.fundings.findMany()
    * ```
    */
  get fundings(): Prisma.FundingsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.fundingRequirements`: Exposes CRUD operations for the **FundingRequirements** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more FundingRequirements
    * const fundingRequirements = await prisma.fundingRequirements.findMany()
    * ```
    */
  get fundingRequirements(): Prisma.FundingRequirementsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.fundingHistories`: Exposes CRUD operations for the **FundingHistories** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more FundingHistories
    * const fundingHistories = await prisma.fundingHistories.findMany()
    * ```
    */
  get fundingHistories(): Prisma.FundingHistoriesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.referenceData`: Exposes CRUD operations for the **ReferenceData** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ReferenceData
    * const referenceData = await prisma.referenceData.findMany()
    * ```
    */
  get referenceData(): Prisma.ReferenceDataDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.releaseNotes`: Exposes CRUD operations for the **ReleaseNotes** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ReleaseNotes
    * const releaseNotes = await prisma.releaseNotes.findMany()
    * ```
    */
  get releaseNotes(): Prisma.ReleaseNotesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.sequelizeMeta`: Exposes CRUD operations for the **SequelizeMeta** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more SequelizeMetas
    * const sequelizeMetas = await prisma.sequelizeMeta.findMany()
    * ```
    */
  get sequelizeMeta(): Prisma.SequelizeMetaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.bcrConfigs`: Exposes CRUD operations for the **BcrConfigs** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more BcrConfigs
    * const bcrConfigs = await prisma.bcrConfigs.findMany()
    * ```
    */
  get bcrConfigs(): Prisma.BcrConfigsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.users`: Exposes CRUD operations for the **Users** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.users.findMany()
    * ```
    */
  get users(): Prisma.UsersDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.session`: Exposes CRUD operations for the **Session** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sessions
    * const sessions = await prisma.session.findMany()
    * ```
    */
  get session(): Prisma.SessionDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.7.0
   * Query Engine version: 3cff47a7f5d65c3ea74883f1d736e41d68ce91ed
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    Bcrs: 'Bcrs',
    Fundings: 'Fundings',
    FundingRequirements: 'FundingRequirements',
    FundingHistories: 'FundingHistories',
    ReferenceData: 'ReferenceData',
    ReleaseNotes: 'ReleaseNotes',
    SequelizeMeta: 'SequelizeMeta',
    BcrConfigs: 'BcrConfigs',
    Users: 'Users',
    Session: 'Session'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "bcrs" | "fundings" | "fundingRequirements" | "fundingHistories" | "referenceData" | "releaseNotes" | "sequelizeMeta" | "bcrConfigs" | "users" | "session"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      Bcrs: {
        payload: Prisma.$BcrsPayload<ExtArgs>
        fields: Prisma.BcrsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.BcrsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BcrsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.BcrsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BcrsPayload>
          }
          findFirst: {
            args: Prisma.BcrsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BcrsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.BcrsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BcrsPayload>
          }
          findMany: {
            args: Prisma.BcrsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BcrsPayload>[]
          }
          create: {
            args: Prisma.BcrsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BcrsPayload>
          }
          createMany: {
            args: Prisma.BcrsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.BcrsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BcrsPayload>[]
          }
          delete: {
            args: Prisma.BcrsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BcrsPayload>
          }
          update: {
            args: Prisma.BcrsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BcrsPayload>
          }
          deleteMany: {
            args: Prisma.BcrsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.BcrsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.BcrsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BcrsPayload>[]
          }
          upsert: {
            args: Prisma.BcrsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BcrsPayload>
          }
          aggregate: {
            args: Prisma.BcrsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateBcrs>
          }
          groupBy: {
            args: Prisma.BcrsGroupByArgs<ExtArgs>
            result: $Utils.Optional<BcrsGroupByOutputType>[]
          }
          count: {
            args: Prisma.BcrsCountArgs<ExtArgs>
            result: $Utils.Optional<BcrsCountAggregateOutputType> | number
          }
        }
      }
      Fundings: {
        payload: Prisma.$FundingsPayload<ExtArgs>
        fields: Prisma.FundingsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.FundingsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FundingsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.FundingsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FundingsPayload>
          }
          findFirst: {
            args: Prisma.FundingsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FundingsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.FundingsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FundingsPayload>
          }
          findMany: {
            args: Prisma.FundingsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FundingsPayload>[]
          }
          create: {
            args: Prisma.FundingsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FundingsPayload>
          }
          createMany: {
            args: Prisma.FundingsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.FundingsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FundingsPayload>[]
          }
          delete: {
            args: Prisma.FundingsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FundingsPayload>
          }
          update: {
            args: Prisma.FundingsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FundingsPayload>
          }
          deleteMany: {
            args: Prisma.FundingsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.FundingsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.FundingsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FundingsPayload>[]
          }
          upsert: {
            args: Prisma.FundingsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FundingsPayload>
          }
          aggregate: {
            args: Prisma.FundingsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFundings>
          }
          groupBy: {
            args: Prisma.FundingsGroupByArgs<ExtArgs>
            result: $Utils.Optional<FundingsGroupByOutputType>[]
          }
          count: {
            args: Prisma.FundingsCountArgs<ExtArgs>
            result: $Utils.Optional<FundingsCountAggregateOutputType> | number
          }
        }
      }
      FundingRequirements: {
        payload: Prisma.$FundingRequirementsPayload<ExtArgs>
        fields: Prisma.FundingRequirementsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.FundingRequirementsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FundingRequirementsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.FundingRequirementsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FundingRequirementsPayload>
          }
          findFirst: {
            args: Prisma.FundingRequirementsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FundingRequirementsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.FundingRequirementsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FundingRequirementsPayload>
          }
          findMany: {
            args: Prisma.FundingRequirementsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FundingRequirementsPayload>[]
          }
          create: {
            args: Prisma.FundingRequirementsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FundingRequirementsPayload>
          }
          createMany: {
            args: Prisma.FundingRequirementsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.FundingRequirementsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FundingRequirementsPayload>[]
          }
          delete: {
            args: Prisma.FundingRequirementsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FundingRequirementsPayload>
          }
          update: {
            args: Prisma.FundingRequirementsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FundingRequirementsPayload>
          }
          deleteMany: {
            args: Prisma.FundingRequirementsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.FundingRequirementsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.FundingRequirementsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FundingRequirementsPayload>[]
          }
          upsert: {
            args: Prisma.FundingRequirementsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FundingRequirementsPayload>
          }
          aggregate: {
            args: Prisma.FundingRequirementsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFundingRequirements>
          }
          groupBy: {
            args: Prisma.FundingRequirementsGroupByArgs<ExtArgs>
            result: $Utils.Optional<FundingRequirementsGroupByOutputType>[]
          }
          count: {
            args: Prisma.FundingRequirementsCountArgs<ExtArgs>
            result: $Utils.Optional<FundingRequirementsCountAggregateOutputType> | number
          }
        }
      }
      FundingHistories: {
        payload: Prisma.$FundingHistoriesPayload<ExtArgs>
        fields: Prisma.FundingHistoriesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.FundingHistoriesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FundingHistoriesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.FundingHistoriesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FundingHistoriesPayload>
          }
          findFirst: {
            args: Prisma.FundingHistoriesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FundingHistoriesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.FundingHistoriesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FundingHistoriesPayload>
          }
          findMany: {
            args: Prisma.FundingHistoriesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FundingHistoriesPayload>[]
          }
          create: {
            args: Prisma.FundingHistoriesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FundingHistoriesPayload>
          }
          createMany: {
            args: Prisma.FundingHistoriesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.FundingHistoriesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FundingHistoriesPayload>[]
          }
          delete: {
            args: Prisma.FundingHistoriesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FundingHistoriesPayload>
          }
          update: {
            args: Prisma.FundingHistoriesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FundingHistoriesPayload>
          }
          deleteMany: {
            args: Prisma.FundingHistoriesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.FundingHistoriesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.FundingHistoriesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FundingHistoriesPayload>[]
          }
          upsert: {
            args: Prisma.FundingHistoriesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FundingHistoriesPayload>
          }
          aggregate: {
            args: Prisma.FundingHistoriesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFundingHistories>
          }
          groupBy: {
            args: Prisma.FundingHistoriesGroupByArgs<ExtArgs>
            result: $Utils.Optional<FundingHistoriesGroupByOutputType>[]
          }
          count: {
            args: Prisma.FundingHistoriesCountArgs<ExtArgs>
            result: $Utils.Optional<FundingHistoriesCountAggregateOutputType> | number
          }
        }
      }
      ReferenceData: {
        payload: Prisma.$ReferenceDataPayload<ExtArgs>
        fields: Prisma.ReferenceDataFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ReferenceDataFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReferenceDataPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ReferenceDataFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReferenceDataPayload>
          }
          findFirst: {
            args: Prisma.ReferenceDataFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReferenceDataPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ReferenceDataFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReferenceDataPayload>
          }
          findMany: {
            args: Prisma.ReferenceDataFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReferenceDataPayload>[]
          }
          create: {
            args: Prisma.ReferenceDataCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReferenceDataPayload>
          }
          createMany: {
            args: Prisma.ReferenceDataCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ReferenceDataCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReferenceDataPayload>[]
          }
          delete: {
            args: Prisma.ReferenceDataDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReferenceDataPayload>
          }
          update: {
            args: Prisma.ReferenceDataUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReferenceDataPayload>
          }
          deleteMany: {
            args: Prisma.ReferenceDataDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ReferenceDataUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ReferenceDataUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReferenceDataPayload>[]
          }
          upsert: {
            args: Prisma.ReferenceDataUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReferenceDataPayload>
          }
          aggregate: {
            args: Prisma.ReferenceDataAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateReferenceData>
          }
          groupBy: {
            args: Prisma.ReferenceDataGroupByArgs<ExtArgs>
            result: $Utils.Optional<ReferenceDataGroupByOutputType>[]
          }
          count: {
            args: Prisma.ReferenceDataCountArgs<ExtArgs>
            result: $Utils.Optional<ReferenceDataCountAggregateOutputType> | number
          }
        }
      }
      ReleaseNotes: {
        payload: Prisma.$ReleaseNotesPayload<ExtArgs>
        fields: Prisma.ReleaseNotesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ReleaseNotesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReleaseNotesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ReleaseNotesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReleaseNotesPayload>
          }
          findFirst: {
            args: Prisma.ReleaseNotesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReleaseNotesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ReleaseNotesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReleaseNotesPayload>
          }
          findMany: {
            args: Prisma.ReleaseNotesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReleaseNotesPayload>[]
          }
          create: {
            args: Prisma.ReleaseNotesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReleaseNotesPayload>
          }
          createMany: {
            args: Prisma.ReleaseNotesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ReleaseNotesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReleaseNotesPayload>[]
          }
          delete: {
            args: Prisma.ReleaseNotesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReleaseNotesPayload>
          }
          update: {
            args: Prisma.ReleaseNotesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReleaseNotesPayload>
          }
          deleteMany: {
            args: Prisma.ReleaseNotesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ReleaseNotesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ReleaseNotesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReleaseNotesPayload>[]
          }
          upsert: {
            args: Prisma.ReleaseNotesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReleaseNotesPayload>
          }
          aggregate: {
            args: Prisma.ReleaseNotesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateReleaseNotes>
          }
          groupBy: {
            args: Prisma.ReleaseNotesGroupByArgs<ExtArgs>
            result: $Utils.Optional<ReleaseNotesGroupByOutputType>[]
          }
          count: {
            args: Prisma.ReleaseNotesCountArgs<ExtArgs>
            result: $Utils.Optional<ReleaseNotesCountAggregateOutputType> | number
          }
        }
      }
      SequelizeMeta: {
        payload: Prisma.$SequelizeMetaPayload<ExtArgs>
        fields: Prisma.SequelizeMetaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SequelizeMetaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SequelizeMetaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SequelizeMetaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SequelizeMetaPayload>
          }
          findFirst: {
            args: Prisma.SequelizeMetaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SequelizeMetaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SequelizeMetaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SequelizeMetaPayload>
          }
          findMany: {
            args: Prisma.SequelizeMetaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SequelizeMetaPayload>[]
          }
          create: {
            args: Prisma.SequelizeMetaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SequelizeMetaPayload>
          }
          createMany: {
            args: Prisma.SequelizeMetaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.SequelizeMetaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SequelizeMetaPayload>[]
          }
          delete: {
            args: Prisma.SequelizeMetaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SequelizeMetaPayload>
          }
          update: {
            args: Prisma.SequelizeMetaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SequelizeMetaPayload>
          }
          deleteMany: {
            args: Prisma.SequelizeMetaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SequelizeMetaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.SequelizeMetaUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SequelizeMetaPayload>[]
          }
          upsert: {
            args: Prisma.SequelizeMetaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SequelizeMetaPayload>
          }
          aggregate: {
            args: Prisma.SequelizeMetaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSequelizeMeta>
          }
          groupBy: {
            args: Prisma.SequelizeMetaGroupByArgs<ExtArgs>
            result: $Utils.Optional<SequelizeMetaGroupByOutputType>[]
          }
          count: {
            args: Prisma.SequelizeMetaCountArgs<ExtArgs>
            result: $Utils.Optional<SequelizeMetaCountAggregateOutputType> | number
          }
        }
      }
      BcrConfigs: {
        payload: Prisma.$BcrConfigsPayload<ExtArgs>
        fields: Prisma.BcrConfigsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.BcrConfigsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BcrConfigsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.BcrConfigsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BcrConfigsPayload>
          }
          findFirst: {
            args: Prisma.BcrConfigsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BcrConfigsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.BcrConfigsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BcrConfigsPayload>
          }
          findMany: {
            args: Prisma.BcrConfigsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BcrConfigsPayload>[]
          }
          create: {
            args: Prisma.BcrConfigsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BcrConfigsPayload>
          }
          createMany: {
            args: Prisma.BcrConfigsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.BcrConfigsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BcrConfigsPayload>[]
          }
          delete: {
            args: Prisma.BcrConfigsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BcrConfigsPayload>
          }
          update: {
            args: Prisma.BcrConfigsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BcrConfigsPayload>
          }
          deleteMany: {
            args: Prisma.BcrConfigsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.BcrConfigsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.BcrConfigsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BcrConfigsPayload>[]
          }
          upsert: {
            args: Prisma.BcrConfigsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BcrConfigsPayload>
          }
          aggregate: {
            args: Prisma.BcrConfigsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateBcrConfigs>
          }
          groupBy: {
            args: Prisma.BcrConfigsGroupByArgs<ExtArgs>
            result: $Utils.Optional<BcrConfigsGroupByOutputType>[]
          }
          count: {
            args: Prisma.BcrConfigsCountArgs<ExtArgs>
            result: $Utils.Optional<BcrConfigsCountAggregateOutputType> | number
          }
        }
      }
      Users: {
        payload: Prisma.$UsersPayload<ExtArgs>
        fields: Prisma.UsersFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UsersFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsersPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UsersFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsersPayload>
          }
          findFirst: {
            args: Prisma.UsersFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsersPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UsersFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsersPayload>
          }
          findMany: {
            args: Prisma.UsersFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsersPayload>[]
          }
          create: {
            args: Prisma.UsersCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsersPayload>
          }
          createMany: {
            args: Prisma.UsersCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UsersCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsersPayload>[]
          }
          delete: {
            args: Prisma.UsersDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsersPayload>
          }
          update: {
            args: Prisma.UsersUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsersPayload>
          }
          deleteMany: {
            args: Prisma.UsersDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UsersUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.UsersUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsersPayload>[]
          }
          upsert: {
            args: Prisma.UsersUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsersPayload>
          }
          aggregate: {
            args: Prisma.UsersAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUsers>
          }
          groupBy: {
            args: Prisma.UsersGroupByArgs<ExtArgs>
            result: $Utils.Optional<UsersGroupByOutputType>[]
          }
          count: {
            args: Prisma.UsersCountArgs<ExtArgs>
            result: $Utils.Optional<UsersCountAggregateOutputType> | number
          }
        }
      }
      Session: {
        payload: Prisma.$SessionPayload<ExtArgs>
        fields: Prisma.SessionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SessionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SessionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>
          }
          findFirst: {
            args: Prisma.SessionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SessionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>
          }
          findMany: {
            args: Prisma.SessionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>[]
          }
          create: {
            args: Prisma.SessionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>
          }
          createMany: {
            args: Prisma.SessionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.SessionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>[]
          }
          delete: {
            args: Prisma.SessionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>
          }
          update: {
            args: Prisma.SessionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>
          }
          deleteMany: {
            args: Prisma.SessionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SessionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.SessionUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>[]
          }
          upsert: {
            args: Prisma.SessionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>
          }
          aggregate: {
            args: Prisma.SessionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSession>
          }
          groupBy: {
            args: Prisma.SessionGroupByArgs<ExtArgs>
            result: $Utils.Optional<SessionGroupByOutputType>[]
          }
          count: {
            args: Prisma.SessionCountArgs<ExtArgs>
            result: $Utils.Optional<SessionCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    bcrs?: BcrsOmit
    fundings?: FundingsOmit
    fundingRequirements?: FundingRequirementsOmit
    fundingHistories?: FundingHistoriesOmit
    referenceData?: ReferenceDataOmit
    releaseNotes?: ReleaseNotesOmit
    sequelizeMeta?: SequelizeMetaOmit
    bcrConfigs?: BcrConfigsOmit
    users?: UsersOmit
    session?: SessionOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type UsersCountOutputType
   */

  export type UsersCountOutputType = {
    Bcrs_Bcrs_assignedToToUsers: number
    Bcrs_Bcrs_requestedByToUsers: number
    Fundings_Fundings_createdByToUsers: number
    Fundings_Fundings_lastUpdatedByToUsers: number
    FundingRequirements_createdBy: number
    FundingRequirements_lastUpdatedBy: number
    FundingHistories_createdBy: number
    ReferenceData_ReferenceData_createdByToUsers: number
    ReferenceData_ReferenceData_lastUpdatedByToUsers: number
    ReleaseNotes_ReleaseNotes_approvedByToUsers: number
    ReleaseNotes_ReleaseNotes_createdByToUsers: number
  }

  export type UsersCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Bcrs_Bcrs_assignedToToUsers?: boolean | UsersCountOutputTypeCountBcrs_Bcrs_assignedToToUsersArgs
    Bcrs_Bcrs_requestedByToUsers?: boolean | UsersCountOutputTypeCountBcrs_Bcrs_requestedByToUsersArgs
    Fundings_Fundings_createdByToUsers?: boolean | UsersCountOutputTypeCountFundings_Fundings_createdByToUsersArgs
    Fundings_Fundings_lastUpdatedByToUsers?: boolean | UsersCountOutputTypeCountFundings_Fundings_lastUpdatedByToUsersArgs
    FundingRequirements_createdBy?: boolean | UsersCountOutputTypeCountFundingRequirements_createdByArgs
    FundingRequirements_lastUpdatedBy?: boolean | UsersCountOutputTypeCountFundingRequirements_lastUpdatedByArgs
    FundingHistories_createdBy?: boolean | UsersCountOutputTypeCountFundingHistories_createdByArgs
    ReferenceData_ReferenceData_createdByToUsers?: boolean | UsersCountOutputTypeCountReferenceData_ReferenceData_createdByToUsersArgs
    ReferenceData_ReferenceData_lastUpdatedByToUsers?: boolean | UsersCountOutputTypeCountReferenceData_ReferenceData_lastUpdatedByToUsersArgs
    ReleaseNotes_ReleaseNotes_approvedByToUsers?: boolean | UsersCountOutputTypeCountReleaseNotes_ReleaseNotes_approvedByToUsersArgs
    ReleaseNotes_ReleaseNotes_createdByToUsers?: boolean | UsersCountOutputTypeCountReleaseNotes_ReleaseNotes_createdByToUsersArgs
  }

  // Custom InputTypes
  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsersCountOutputType
     */
    select?: UsersCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountBcrs_Bcrs_assignedToToUsersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BcrsWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountBcrs_Bcrs_requestedByToUsersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BcrsWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountFundings_Fundings_createdByToUsersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FundingsWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountFundings_Fundings_lastUpdatedByToUsersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FundingsWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountFundingRequirements_createdByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FundingRequirementsWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountFundingRequirements_lastUpdatedByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FundingRequirementsWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountFundingHistories_createdByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FundingHistoriesWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountReferenceData_ReferenceData_createdByToUsersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReferenceDataWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountReferenceData_ReferenceData_lastUpdatedByToUsersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReferenceDataWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountReleaseNotes_ReleaseNotes_approvedByToUsersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReleaseNotesWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountReleaseNotes_ReleaseNotes_createdByToUsersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReleaseNotesWhereInput
  }


  /**
   * Models
   */

  /**
   * Model Bcrs
   */

  export type AggregateBcrs = {
    _count: BcrsCountAggregateOutputType | null
    _min: BcrsMinAggregateOutputType | null
    _max: BcrsMaxAggregateOutputType | null
  }

  export type BcrsMinAggregateOutputType = {
    id: string | null
    bcrNumber: string | null
    title: string | null
    description: string | null
    status: $Enums.enum_Bcrs_status | null
    priority: $Enums.enum_Bcrs_priority | null
    impact: string | null
    requestedBy: string | null
    assignedTo: string | null
    targetDate: Date | null
    implementationDate: Date | null
    notes: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type BcrsMaxAggregateOutputType = {
    id: string | null
    bcrNumber: string | null
    title: string | null
    description: string | null
    status: $Enums.enum_Bcrs_status | null
    priority: $Enums.enum_Bcrs_priority | null
    impact: string | null
    requestedBy: string | null
    assignedTo: string | null
    targetDate: Date | null
    implementationDate: Date | null
    notes: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type BcrsCountAggregateOutputType = {
    id: number
    bcrNumber: number
    title: number
    description: number
    status: number
    priority: number
    impact: number
    requestedBy: number
    assignedTo: number
    targetDate: number
    implementationDate: number
    notes: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type BcrsMinAggregateInputType = {
    id?: true
    bcrNumber?: true
    title?: true
    description?: true
    status?: true
    priority?: true
    impact?: true
    requestedBy?: true
    assignedTo?: true
    targetDate?: true
    implementationDate?: true
    notes?: true
    createdAt?: true
    updatedAt?: true
  }

  export type BcrsMaxAggregateInputType = {
    id?: true
    bcrNumber?: true
    title?: true
    description?: true
    status?: true
    priority?: true
    impact?: true
    requestedBy?: true
    assignedTo?: true
    targetDate?: true
    implementationDate?: true
    notes?: true
    createdAt?: true
    updatedAt?: true
  }

  export type BcrsCountAggregateInputType = {
    id?: true
    bcrNumber?: true
    title?: true
    description?: true
    status?: true
    priority?: true
    impact?: true
    requestedBy?: true
    assignedTo?: true
    targetDate?: true
    implementationDate?: true
    notes?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type BcrsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Bcrs to aggregate.
     */
    where?: BcrsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Bcrs to fetch.
     */
    orderBy?: BcrsOrderByWithRelationInput | BcrsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: BcrsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Bcrs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Bcrs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Bcrs
    **/
    _count?: true | BcrsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: BcrsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: BcrsMaxAggregateInputType
  }

  export type GetBcrsAggregateType<T extends BcrsAggregateArgs> = {
        [P in keyof T & keyof AggregateBcrs]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateBcrs[P]>
      : GetScalarType<T[P], AggregateBcrs[P]>
  }




  export type BcrsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BcrsWhereInput
    orderBy?: BcrsOrderByWithAggregationInput | BcrsOrderByWithAggregationInput[]
    by: BcrsScalarFieldEnum[] | BcrsScalarFieldEnum
    having?: BcrsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: BcrsCountAggregateInputType | true
    _min?: BcrsMinAggregateInputType
    _max?: BcrsMaxAggregateInputType
  }

  export type BcrsGroupByOutputType = {
    id: string
    bcrNumber: string | null
    title: string
    description: string
    status: $Enums.enum_Bcrs_status
    priority: $Enums.enum_Bcrs_priority
    impact: string | null
    requestedBy: string
    assignedTo: string | null
    targetDate: Date | null
    implementationDate: Date | null
    notes: string | null
    createdAt: Date
    updatedAt: Date
    _count: BcrsCountAggregateOutputType | null
    _min: BcrsMinAggregateOutputType | null
    _max: BcrsMaxAggregateOutputType | null
  }

  type GetBcrsGroupByPayload<T extends BcrsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<BcrsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof BcrsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], BcrsGroupByOutputType[P]>
            : GetScalarType<T[P], BcrsGroupByOutputType[P]>
        }
      >
    >


  export type BcrsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    bcrNumber?: boolean
    title?: boolean
    description?: boolean
    status?: boolean
    priority?: boolean
    impact?: boolean
    requestedBy?: boolean
    assignedTo?: boolean
    targetDate?: boolean
    implementationDate?: boolean
    notes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    Users_Bcrs_assignedToToUsers?: boolean | Bcrs$Users_Bcrs_assignedToToUsersArgs<ExtArgs>
    Users_Bcrs_requestedByToUsers?: boolean | UsersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["bcrs"]>

  export type BcrsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    bcrNumber?: boolean
    title?: boolean
    description?: boolean
    status?: boolean
    priority?: boolean
    impact?: boolean
    requestedBy?: boolean
    assignedTo?: boolean
    targetDate?: boolean
    implementationDate?: boolean
    notes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    Users_Bcrs_assignedToToUsers?: boolean | Bcrs$Users_Bcrs_assignedToToUsersArgs<ExtArgs>
    Users_Bcrs_requestedByToUsers?: boolean | UsersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["bcrs"]>

  export type BcrsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    bcrNumber?: boolean
    title?: boolean
    description?: boolean
    status?: boolean
    priority?: boolean
    impact?: boolean
    requestedBy?: boolean
    assignedTo?: boolean
    targetDate?: boolean
    implementationDate?: boolean
    notes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    Users_Bcrs_assignedToToUsers?: boolean | Bcrs$Users_Bcrs_assignedToToUsersArgs<ExtArgs>
    Users_Bcrs_requestedByToUsers?: boolean | UsersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["bcrs"]>

  export type BcrsSelectScalar = {
    id?: boolean
    bcrNumber?: boolean
    title?: boolean
    description?: boolean
    status?: boolean
    priority?: boolean
    impact?: boolean
    requestedBy?: boolean
    assignedTo?: boolean
    targetDate?: boolean
    implementationDate?: boolean
    notes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type BcrsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "bcrNumber" | "title" | "description" | "status" | "priority" | "impact" | "requestedBy" | "assignedTo" | "targetDate" | "implementationDate" | "notes" | "createdAt" | "updatedAt", ExtArgs["result"]["bcrs"]>
  export type BcrsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Users_Bcrs_assignedToToUsers?: boolean | Bcrs$Users_Bcrs_assignedToToUsersArgs<ExtArgs>
    Users_Bcrs_requestedByToUsers?: boolean | UsersDefaultArgs<ExtArgs>
  }
  export type BcrsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Users_Bcrs_assignedToToUsers?: boolean | Bcrs$Users_Bcrs_assignedToToUsersArgs<ExtArgs>
    Users_Bcrs_requestedByToUsers?: boolean | UsersDefaultArgs<ExtArgs>
  }
  export type BcrsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Users_Bcrs_assignedToToUsers?: boolean | Bcrs$Users_Bcrs_assignedToToUsersArgs<ExtArgs>
    Users_Bcrs_requestedByToUsers?: boolean | UsersDefaultArgs<ExtArgs>
  }

  export type $BcrsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Bcrs"
    objects: {
      Users_Bcrs_assignedToToUsers: Prisma.$UsersPayload<ExtArgs> | null
      Users_Bcrs_requestedByToUsers: Prisma.$UsersPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      bcrNumber: string | null
      title: string
      description: string
      status: $Enums.enum_Bcrs_status
      priority: $Enums.enum_Bcrs_priority
      impact: string | null
      requestedBy: string
      assignedTo: string | null
      targetDate: Date | null
      implementationDate: Date | null
      notes: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["bcrs"]>
    composites: {}
  }

  type BcrsGetPayload<S extends boolean | null | undefined | BcrsDefaultArgs> = $Result.GetResult<Prisma.$BcrsPayload, S>

  type BcrsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<BcrsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: BcrsCountAggregateInputType | true
    }

  export interface BcrsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Bcrs'], meta: { name: 'Bcrs' } }
    /**
     * Find zero or one Bcrs that matches the filter.
     * @param {BcrsFindUniqueArgs} args - Arguments to find a Bcrs
     * @example
     * // Get one Bcrs
     * const bcrs = await prisma.bcrs.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends BcrsFindUniqueArgs>(args: SelectSubset<T, BcrsFindUniqueArgs<ExtArgs>>): Prisma__BcrsClient<$Result.GetResult<Prisma.$BcrsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Bcrs that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {BcrsFindUniqueOrThrowArgs} args - Arguments to find a Bcrs
     * @example
     * // Get one Bcrs
     * const bcrs = await prisma.bcrs.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends BcrsFindUniqueOrThrowArgs>(args: SelectSubset<T, BcrsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__BcrsClient<$Result.GetResult<Prisma.$BcrsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Bcrs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BcrsFindFirstArgs} args - Arguments to find a Bcrs
     * @example
     * // Get one Bcrs
     * const bcrs = await prisma.bcrs.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends BcrsFindFirstArgs>(args?: SelectSubset<T, BcrsFindFirstArgs<ExtArgs>>): Prisma__BcrsClient<$Result.GetResult<Prisma.$BcrsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Bcrs that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BcrsFindFirstOrThrowArgs} args - Arguments to find a Bcrs
     * @example
     * // Get one Bcrs
     * const bcrs = await prisma.bcrs.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends BcrsFindFirstOrThrowArgs>(args?: SelectSubset<T, BcrsFindFirstOrThrowArgs<ExtArgs>>): Prisma__BcrsClient<$Result.GetResult<Prisma.$BcrsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Bcrs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BcrsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Bcrs
     * const bcrs = await prisma.bcrs.findMany()
     * 
     * // Get first 10 Bcrs
     * const bcrs = await prisma.bcrs.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const bcrsWithIdOnly = await prisma.bcrs.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends BcrsFindManyArgs>(args?: SelectSubset<T, BcrsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BcrsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Bcrs.
     * @param {BcrsCreateArgs} args - Arguments to create a Bcrs.
     * @example
     * // Create one Bcrs
     * const Bcrs = await prisma.bcrs.create({
     *   data: {
     *     // ... data to create a Bcrs
     *   }
     * })
     * 
     */
    create<T extends BcrsCreateArgs>(args: SelectSubset<T, BcrsCreateArgs<ExtArgs>>): Prisma__BcrsClient<$Result.GetResult<Prisma.$BcrsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Bcrs.
     * @param {BcrsCreateManyArgs} args - Arguments to create many Bcrs.
     * @example
     * // Create many Bcrs
     * const bcrs = await prisma.bcrs.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends BcrsCreateManyArgs>(args?: SelectSubset<T, BcrsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Bcrs and returns the data saved in the database.
     * @param {BcrsCreateManyAndReturnArgs} args - Arguments to create many Bcrs.
     * @example
     * // Create many Bcrs
     * const bcrs = await prisma.bcrs.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Bcrs and only return the `id`
     * const bcrsWithIdOnly = await prisma.bcrs.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends BcrsCreateManyAndReturnArgs>(args?: SelectSubset<T, BcrsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BcrsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Bcrs.
     * @param {BcrsDeleteArgs} args - Arguments to delete one Bcrs.
     * @example
     * // Delete one Bcrs
     * const Bcrs = await prisma.bcrs.delete({
     *   where: {
     *     // ... filter to delete one Bcrs
     *   }
     * })
     * 
     */
    delete<T extends BcrsDeleteArgs>(args: SelectSubset<T, BcrsDeleteArgs<ExtArgs>>): Prisma__BcrsClient<$Result.GetResult<Prisma.$BcrsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Bcrs.
     * @param {BcrsUpdateArgs} args - Arguments to update one Bcrs.
     * @example
     * // Update one Bcrs
     * const bcrs = await prisma.bcrs.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends BcrsUpdateArgs>(args: SelectSubset<T, BcrsUpdateArgs<ExtArgs>>): Prisma__BcrsClient<$Result.GetResult<Prisma.$BcrsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Bcrs.
     * @param {BcrsDeleteManyArgs} args - Arguments to filter Bcrs to delete.
     * @example
     * // Delete a few Bcrs
     * const { count } = await prisma.bcrs.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends BcrsDeleteManyArgs>(args?: SelectSubset<T, BcrsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Bcrs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BcrsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Bcrs
     * const bcrs = await prisma.bcrs.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends BcrsUpdateManyArgs>(args: SelectSubset<T, BcrsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Bcrs and returns the data updated in the database.
     * @param {BcrsUpdateManyAndReturnArgs} args - Arguments to update many Bcrs.
     * @example
     * // Update many Bcrs
     * const bcrs = await prisma.bcrs.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Bcrs and only return the `id`
     * const bcrsWithIdOnly = await prisma.bcrs.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends BcrsUpdateManyAndReturnArgs>(args: SelectSubset<T, BcrsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BcrsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Bcrs.
     * @param {BcrsUpsertArgs} args - Arguments to update or create a Bcrs.
     * @example
     * // Update or create a Bcrs
     * const bcrs = await prisma.bcrs.upsert({
     *   create: {
     *     // ... data to create a Bcrs
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Bcrs we want to update
     *   }
     * })
     */
    upsert<T extends BcrsUpsertArgs>(args: SelectSubset<T, BcrsUpsertArgs<ExtArgs>>): Prisma__BcrsClient<$Result.GetResult<Prisma.$BcrsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Bcrs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BcrsCountArgs} args - Arguments to filter Bcrs to count.
     * @example
     * // Count the number of Bcrs
     * const count = await prisma.bcrs.count({
     *   where: {
     *     // ... the filter for the Bcrs we want to count
     *   }
     * })
    **/
    count<T extends BcrsCountArgs>(
      args?: Subset<T, BcrsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], BcrsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Bcrs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BcrsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends BcrsAggregateArgs>(args: Subset<T, BcrsAggregateArgs>): Prisma.PrismaPromise<GetBcrsAggregateType<T>>

    /**
     * Group by Bcrs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BcrsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends BcrsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: BcrsGroupByArgs['orderBy'] }
        : { orderBy?: BcrsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, BcrsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetBcrsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Bcrs model
   */
  readonly fields: BcrsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Bcrs.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__BcrsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Users_Bcrs_assignedToToUsers<T extends Bcrs$Users_Bcrs_assignedToToUsersArgs<ExtArgs> = {}>(args?: Subset<T, Bcrs$Users_Bcrs_assignedToToUsersArgs<ExtArgs>>): Prisma__UsersClient<$Result.GetResult<Prisma.$UsersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    Users_Bcrs_requestedByToUsers<T extends UsersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UsersDefaultArgs<ExtArgs>>): Prisma__UsersClient<$Result.GetResult<Prisma.$UsersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Bcrs model
   */
  interface BcrsFieldRefs {
    readonly id: FieldRef<"Bcrs", 'String'>
    readonly bcrNumber: FieldRef<"Bcrs", 'String'>
    readonly title: FieldRef<"Bcrs", 'String'>
    readonly description: FieldRef<"Bcrs", 'String'>
    readonly status: FieldRef<"Bcrs", 'enum_Bcrs_status'>
    readonly priority: FieldRef<"Bcrs", 'enum_Bcrs_priority'>
    readonly impact: FieldRef<"Bcrs", 'String'>
    readonly requestedBy: FieldRef<"Bcrs", 'String'>
    readonly assignedTo: FieldRef<"Bcrs", 'String'>
    readonly targetDate: FieldRef<"Bcrs", 'DateTime'>
    readonly implementationDate: FieldRef<"Bcrs", 'DateTime'>
    readonly notes: FieldRef<"Bcrs", 'String'>
    readonly createdAt: FieldRef<"Bcrs", 'DateTime'>
    readonly updatedAt: FieldRef<"Bcrs", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Bcrs findUnique
   */
  export type BcrsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Bcrs
     */
    select?: BcrsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Bcrs
     */
    omit?: BcrsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BcrsInclude<ExtArgs> | null
    /**
     * Filter, which Bcrs to fetch.
     */
    where: BcrsWhereUniqueInput
  }

  /**
   * Bcrs findUniqueOrThrow
   */
  export type BcrsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Bcrs
     */
    select?: BcrsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Bcrs
     */
    omit?: BcrsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BcrsInclude<ExtArgs> | null
    /**
     * Filter, which Bcrs to fetch.
     */
    where: BcrsWhereUniqueInput
  }

  /**
   * Bcrs findFirst
   */
  export type BcrsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Bcrs
     */
    select?: BcrsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Bcrs
     */
    omit?: BcrsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BcrsInclude<ExtArgs> | null
    /**
     * Filter, which Bcrs to fetch.
     */
    where?: BcrsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Bcrs to fetch.
     */
    orderBy?: BcrsOrderByWithRelationInput | BcrsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Bcrs.
     */
    cursor?: BcrsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Bcrs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Bcrs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Bcrs.
     */
    distinct?: BcrsScalarFieldEnum | BcrsScalarFieldEnum[]
  }

  /**
   * Bcrs findFirstOrThrow
   */
  export type BcrsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Bcrs
     */
    select?: BcrsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Bcrs
     */
    omit?: BcrsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BcrsInclude<ExtArgs> | null
    /**
     * Filter, which Bcrs to fetch.
     */
    where?: BcrsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Bcrs to fetch.
     */
    orderBy?: BcrsOrderByWithRelationInput | BcrsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Bcrs.
     */
    cursor?: BcrsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Bcrs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Bcrs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Bcrs.
     */
    distinct?: BcrsScalarFieldEnum | BcrsScalarFieldEnum[]
  }

  /**
   * Bcrs findMany
   */
  export type BcrsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Bcrs
     */
    select?: BcrsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Bcrs
     */
    omit?: BcrsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BcrsInclude<ExtArgs> | null
    /**
     * Filter, which Bcrs to fetch.
     */
    where?: BcrsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Bcrs to fetch.
     */
    orderBy?: BcrsOrderByWithRelationInput | BcrsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Bcrs.
     */
    cursor?: BcrsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Bcrs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Bcrs.
     */
    skip?: number
    distinct?: BcrsScalarFieldEnum | BcrsScalarFieldEnum[]
  }

  /**
   * Bcrs create
   */
  export type BcrsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Bcrs
     */
    select?: BcrsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Bcrs
     */
    omit?: BcrsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BcrsInclude<ExtArgs> | null
    /**
     * The data needed to create a Bcrs.
     */
    data: XOR<BcrsCreateInput, BcrsUncheckedCreateInput>
  }

  /**
   * Bcrs createMany
   */
  export type BcrsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Bcrs.
     */
    data: BcrsCreateManyInput | BcrsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Bcrs createManyAndReturn
   */
  export type BcrsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Bcrs
     */
    select?: BcrsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Bcrs
     */
    omit?: BcrsOmit<ExtArgs> | null
    /**
     * The data used to create many Bcrs.
     */
    data: BcrsCreateManyInput | BcrsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BcrsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Bcrs update
   */
  export type BcrsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Bcrs
     */
    select?: BcrsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Bcrs
     */
    omit?: BcrsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BcrsInclude<ExtArgs> | null
    /**
     * The data needed to update a Bcrs.
     */
    data: XOR<BcrsUpdateInput, BcrsUncheckedUpdateInput>
    /**
     * Choose, which Bcrs to update.
     */
    where: BcrsWhereUniqueInput
  }

  /**
   * Bcrs updateMany
   */
  export type BcrsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Bcrs.
     */
    data: XOR<BcrsUpdateManyMutationInput, BcrsUncheckedUpdateManyInput>
    /**
     * Filter which Bcrs to update
     */
    where?: BcrsWhereInput
    /**
     * Limit how many Bcrs to update.
     */
    limit?: number
  }

  /**
   * Bcrs updateManyAndReturn
   */
  export type BcrsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Bcrs
     */
    select?: BcrsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Bcrs
     */
    omit?: BcrsOmit<ExtArgs> | null
    /**
     * The data used to update Bcrs.
     */
    data: XOR<BcrsUpdateManyMutationInput, BcrsUncheckedUpdateManyInput>
    /**
     * Filter which Bcrs to update
     */
    where?: BcrsWhereInput
    /**
     * Limit how many Bcrs to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BcrsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Bcrs upsert
   */
  export type BcrsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Bcrs
     */
    select?: BcrsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Bcrs
     */
    omit?: BcrsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BcrsInclude<ExtArgs> | null
    /**
     * The filter to search for the Bcrs to update in case it exists.
     */
    where: BcrsWhereUniqueInput
    /**
     * In case the Bcrs found by the `where` argument doesn't exist, create a new Bcrs with this data.
     */
    create: XOR<BcrsCreateInput, BcrsUncheckedCreateInput>
    /**
     * In case the Bcrs was found with the provided `where` argument, update it with this data.
     */
    update: XOR<BcrsUpdateInput, BcrsUncheckedUpdateInput>
  }

  /**
   * Bcrs delete
   */
  export type BcrsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Bcrs
     */
    select?: BcrsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Bcrs
     */
    omit?: BcrsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BcrsInclude<ExtArgs> | null
    /**
     * Filter which Bcrs to delete.
     */
    where: BcrsWhereUniqueInput
  }

  /**
   * Bcrs deleteMany
   */
  export type BcrsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Bcrs to delete
     */
    where?: BcrsWhereInput
    /**
     * Limit how many Bcrs to delete.
     */
    limit?: number
  }

  /**
   * Bcrs.Users_Bcrs_assignedToToUsers
   */
  export type Bcrs$Users_Bcrs_assignedToToUsersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Users
     */
    select?: UsersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Users
     */
    omit?: UsersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsersInclude<ExtArgs> | null
    where?: UsersWhereInput
  }

  /**
   * Bcrs without action
   */
  export type BcrsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Bcrs
     */
    select?: BcrsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Bcrs
     */
    omit?: BcrsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BcrsInclude<ExtArgs> | null
  }


  /**
   * Model Fundings
   */

  export type AggregateFundings = {
    _count: FundingsCountAggregateOutputType | null
    _avg: FundingsAvgAggregateOutputType | null
    _sum: FundingsSumAggregateOutputType | null
    _min: FundingsMinAggregateOutputType | null
    _max: FundingsMaxAggregateOutputType | null
  }

  export type FundingsAvgAggregateOutputType = {
    fundingAmount: Decimal | null
  }

  export type FundingsSumAggregateOutputType = {
    fundingAmount: Decimal | null
  }

  export type FundingsMinAggregateOutputType = {
    id: string | null
    trainingRoute: string | null
    academicYear: string | null
    fundingAmount: Decimal | null
    fundingType: string | null
    description: string | null
    isActive: boolean | null
    effectiveDate: Date | null
    expiryDate: Date | null
    createdBy: string | null
    lastUpdatedBy: string | null
    notes: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type FundingsMaxAggregateOutputType = {
    id: string | null
    trainingRoute: string | null
    academicYear: string | null
    fundingAmount: Decimal | null
    fundingType: string | null
    description: string | null
    isActive: boolean | null
    effectiveDate: Date | null
    expiryDate: Date | null
    createdBy: string | null
    lastUpdatedBy: string | null
    notes: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type FundingsCountAggregateOutputType = {
    id: number
    trainingRoute: number
    academicYear: number
    fundingAmount: number
    fundingType: number
    description: number
    isActive: number
    effectiveDate: number
    expiryDate: number
    createdBy: number
    lastUpdatedBy: number
    notes: number
    metadata: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type FundingsAvgAggregateInputType = {
    fundingAmount?: true
  }

  export type FundingsSumAggregateInputType = {
    fundingAmount?: true
  }

  export type FundingsMinAggregateInputType = {
    id?: true
    trainingRoute?: true
    academicYear?: true
    fundingAmount?: true
    fundingType?: true
    description?: true
    isActive?: true
    effectiveDate?: true
    expiryDate?: true
    createdBy?: true
    lastUpdatedBy?: true
    notes?: true
    createdAt?: true
    updatedAt?: true
  }

  export type FundingsMaxAggregateInputType = {
    id?: true
    trainingRoute?: true
    academicYear?: true
    fundingAmount?: true
    fundingType?: true
    description?: true
    isActive?: true
    effectiveDate?: true
    expiryDate?: true
    createdBy?: true
    lastUpdatedBy?: true
    notes?: true
    createdAt?: true
    updatedAt?: true
  }

  export type FundingsCountAggregateInputType = {
    id?: true
    trainingRoute?: true
    academicYear?: true
    fundingAmount?: true
    fundingType?: true
    description?: true
    isActive?: true
    effectiveDate?: true
    expiryDate?: true
    createdBy?: true
    lastUpdatedBy?: true
    notes?: true
    metadata?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type FundingsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Fundings to aggregate.
     */
    where?: FundingsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Fundings to fetch.
     */
    orderBy?: FundingsOrderByWithRelationInput | FundingsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: FundingsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Fundings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Fundings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Fundings
    **/
    _count?: true | FundingsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: FundingsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: FundingsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: FundingsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: FundingsMaxAggregateInputType
  }

  export type GetFundingsAggregateType<T extends FundingsAggregateArgs> = {
        [P in keyof T & keyof AggregateFundings]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFundings[P]>
      : GetScalarType<T[P], AggregateFundings[P]>
  }




  export type FundingsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FundingsWhereInput
    orderBy?: FundingsOrderByWithAggregationInput | FundingsOrderByWithAggregationInput[]
    by: FundingsScalarFieldEnum[] | FundingsScalarFieldEnum
    having?: FundingsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: FundingsCountAggregateInputType | true
    _avg?: FundingsAvgAggregateInputType
    _sum?: FundingsSumAggregateInputType
    _min?: FundingsMinAggregateInputType
    _max?: FundingsMaxAggregateInputType
  }

  export type FundingsGroupByOutputType = {
    id: string
    trainingRoute: string
    academicYear: string
    fundingAmount: Decimal
    fundingType: string
    description: string | null
    isActive: boolean
    effectiveDate: Date
    expiryDate: Date | null
    createdBy: string
    lastUpdatedBy: string | null
    notes: string | null
    metadata: JsonValue | null
    createdAt: Date
    updatedAt: Date
    _count: FundingsCountAggregateOutputType | null
    _avg: FundingsAvgAggregateOutputType | null
    _sum: FundingsSumAggregateOutputType | null
    _min: FundingsMinAggregateOutputType | null
    _max: FundingsMaxAggregateOutputType | null
  }

  type GetFundingsGroupByPayload<T extends FundingsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<FundingsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof FundingsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], FundingsGroupByOutputType[P]>
            : GetScalarType<T[P], FundingsGroupByOutputType[P]>
        }
      >
    >


  export type FundingsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    trainingRoute?: boolean
    academicYear?: boolean
    fundingAmount?: boolean
    fundingType?: boolean
    description?: boolean
    isActive?: boolean
    effectiveDate?: boolean
    expiryDate?: boolean
    createdBy?: boolean
    lastUpdatedBy?: boolean
    notes?: boolean
    metadata?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    Users_Fundings_createdByToUsers?: boolean | UsersDefaultArgs<ExtArgs>
    Users_Fundings_lastUpdatedByToUsers?: boolean | Fundings$Users_Fundings_lastUpdatedByToUsersArgs<ExtArgs>
  }, ExtArgs["result"]["fundings"]>

  export type FundingsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    trainingRoute?: boolean
    academicYear?: boolean
    fundingAmount?: boolean
    fundingType?: boolean
    description?: boolean
    isActive?: boolean
    effectiveDate?: boolean
    expiryDate?: boolean
    createdBy?: boolean
    lastUpdatedBy?: boolean
    notes?: boolean
    metadata?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    Users_Fundings_createdByToUsers?: boolean | UsersDefaultArgs<ExtArgs>
    Users_Fundings_lastUpdatedByToUsers?: boolean | Fundings$Users_Fundings_lastUpdatedByToUsersArgs<ExtArgs>
  }, ExtArgs["result"]["fundings"]>

  export type FundingsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    trainingRoute?: boolean
    academicYear?: boolean
    fundingAmount?: boolean
    fundingType?: boolean
    description?: boolean
    isActive?: boolean
    effectiveDate?: boolean
    expiryDate?: boolean
    createdBy?: boolean
    lastUpdatedBy?: boolean
    notes?: boolean
    metadata?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    Users_Fundings_createdByToUsers?: boolean | UsersDefaultArgs<ExtArgs>
    Users_Fundings_lastUpdatedByToUsers?: boolean | Fundings$Users_Fundings_lastUpdatedByToUsersArgs<ExtArgs>
  }, ExtArgs["result"]["fundings"]>

  export type FundingsSelectScalar = {
    id?: boolean
    trainingRoute?: boolean
    academicYear?: boolean
    fundingAmount?: boolean
    fundingType?: boolean
    description?: boolean
    isActive?: boolean
    effectiveDate?: boolean
    expiryDate?: boolean
    createdBy?: boolean
    lastUpdatedBy?: boolean
    notes?: boolean
    metadata?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type FundingsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "trainingRoute" | "academicYear" | "fundingAmount" | "fundingType" | "description" | "isActive" | "effectiveDate" | "expiryDate" | "createdBy" | "lastUpdatedBy" | "notes" | "metadata" | "createdAt" | "updatedAt", ExtArgs["result"]["fundings"]>
  export type FundingsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Users_Fundings_createdByToUsers?: boolean | UsersDefaultArgs<ExtArgs>
    Users_Fundings_lastUpdatedByToUsers?: boolean | Fundings$Users_Fundings_lastUpdatedByToUsersArgs<ExtArgs>
  }
  export type FundingsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Users_Fundings_createdByToUsers?: boolean | UsersDefaultArgs<ExtArgs>
    Users_Fundings_lastUpdatedByToUsers?: boolean | Fundings$Users_Fundings_lastUpdatedByToUsersArgs<ExtArgs>
  }
  export type FundingsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Users_Fundings_createdByToUsers?: boolean | UsersDefaultArgs<ExtArgs>
    Users_Fundings_lastUpdatedByToUsers?: boolean | Fundings$Users_Fundings_lastUpdatedByToUsersArgs<ExtArgs>
  }

  export type $FundingsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Fundings"
    objects: {
      Users_Fundings_createdByToUsers: Prisma.$UsersPayload<ExtArgs>
      Users_Fundings_lastUpdatedByToUsers: Prisma.$UsersPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      trainingRoute: string
      academicYear: string
      fundingAmount: Prisma.Decimal
      fundingType: string
      description: string | null
      isActive: boolean
      effectiveDate: Date
      expiryDate: Date | null
      createdBy: string
      lastUpdatedBy: string | null
      notes: string | null
      metadata: Prisma.JsonValue | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["fundings"]>
    composites: {}
  }

  type FundingsGetPayload<S extends boolean | null | undefined | FundingsDefaultArgs> = $Result.GetResult<Prisma.$FundingsPayload, S>

  type FundingsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<FundingsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: FundingsCountAggregateInputType | true
    }

  export interface FundingsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Fundings'], meta: { name: 'Fundings' } }
    /**
     * Find zero or one Fundings that matches the filter.
     * @param {FundingsFindUniqueArgs} args - Arguments to find a Fundings
     * @example
     * // Get one Fundings
     * const fundings = await prisma.fundings.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends FundingsFindUniqueArgs>(args: SelectSubset<T, FundingsFindUniqueArgs<ExtArgs>>): Prisma__FundingsClient<$Result.GetResult<Prisma.$FundingsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Fundings that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {FundingsFindUniqueOrThrowArgs} args - Arguments to find a Fundings
     * @example
     * // Get one Fundings
     * const fundings = await prisma.fundings.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends FundingsFindUniqueOrThrowArgs>(args: SelectSubset<T, FundingsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__FundingsClient<$Result.GetResult<Prisma.$FundingsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Fundings that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FundingsFindFirstArgs} args - Arguments to find a Fundings
     * @example
     * // Get one Fundings
     * const fundings = await prisma.fundings.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends FundingsFindFirstArgs>(args?: SelectSubset<T, FundingsFindFirstArgs<ExtArgs>>): Prisma__FundingsClient<$Result.GetResult<Prisma.$FundingsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Fundings that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FundingsFindFirstOrThrowArgs} args - Arguments to find a Fundings
     * @example
     * // Get one Fundings
     * const fundings = await prisma.fundings.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends FundingsFindFirstOrThrowArgs>(args?: SelectSubset<T, FundingsFindFirstOrThrowArgs<ExtArgs>>): Prisma__FundingsClient<$Result.GetResult<Prisma.$FundingsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Fundings that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FundingsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Fundings
     * const fundings = await prisma.fundings.findMany()
     * 
     * // Get first 10 Fundings
     * const fundings = await prisma.fundings.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const fundingsWithIdOnly = await prisma.fundings.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends FundingsFindManyArgs>(args?: SelectSubset<T, FundingsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FundingsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Fundings.
     * @param {FundingsCreateArgs} args - Arguments to create a Fundings.
     * @example
     * // Create one Fundings
     * const Fundings = await prisma.fundings.create({
     *   data: {
     *     // ... data to create a Fundings
     *   }
     * })
     * 
     */
    create<T extends FundingsCreateArgs>(args: SelectSubset<T, FundingsCreateArgs<ExtArgs>>): Prisma__FundingsClient<$Result.GetResult<Prisma.$FundingsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Fundings.
     * @param {FundingsCreateManyArgs} args - Arguments to create many Fundings.
     * @example
     * // Create many Fundings
     * const fundings = await prisma.fundings.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends FundingsCreateManyArgs>(args?: SelectSubset<T, FundingsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Fundings and returns the data saved in the database.
     * @param {FundingsCreateManyAndReturnArgs} args - Arguments to create many Fundings.
     * @example
     * // Create many Fundings
     * const fundings = await prisma.fundings.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Fundings and only return the `id`
     * const fundingsWithIdOnly = await prisma.fundings.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends FundingsCreateManyAndReturnArgs>(args?: SelectSubset<T, FundingsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FundingsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Fundings.
     * @param {FundingsDeleteArgs} args - Arguments to delete one Fundings.
     * @example
     * // Delete one Fundings
     * const Fundings = await prisma.fundings.delete({
     *   where: {
     *     // ... filter to delete one Fundings
     *   }
     * })
     * 
     */
    delete<T extends FundingsDeleteArgs>(args: SelectSubset<T, FundingsDeleteArgs<ExtArgs>>): Prisma__FundingsClient<$Result.GetResult<Prisma.$FundingsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Fundings.
     * @param {FundingsUpdateArgs} args - Arguments to update one Fundings.
     * @example
     * // Update one Fundings
     * const fundings = await prisma.fundings.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends FundingsUpdateArgs>(args: SelectSubset<T, FundingsUpdateArgs<ExtArgs>>): Prisma__FundingsClient<$Result.GetResult<Prisma.$FundingsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Fundings.
     * @param {FundingsDeleteManyArgs} args - Arguments to filter Fundings to delete.
     * @example
     * // Delete a few Fundings
     * const { count } = await prisma.fundings.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends FundingsDeleteManyArgs>(args?: SelectSubset<T, FundingsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Fundings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FundingsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Fundings
     * const fundings = await prisma.fundings.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends FundingsUpdateManyArgs>(args: SelectSubset<T, FundingsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Fundings and returns the data updated in the database.
     * @param {FundingsUpdateManyAndReturnArgs} args - Arguments to update many Fundings.
     * @example
     * // Update many Fundings
     * const fundings = await prisma.fundings.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Fundings and only return the `id`
     * const fundingsWithIdOnly = await prisma.fundings.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends FundingsUpdateManyAndReturnArgs>(args: SelectSubset<T, FundingsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FundingsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Fundings.
     * @param {FundingsUpsertArgs} args - Arguments to update or create a Fundings.
     * @example
     * // Update or create a Fundings
     * const fundings = await prisma.fundings.upsert({
     *   create: {
     *     // ... data to create a Fundings
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Fundings we want to update
     *   }
     * })
     */
    upsert<T extends FundingsUpsertArgs>(args: SelectSubset<T, FundingsUpsertArgs<ExtArgs>>): Prisma__FundingsClient<$Result.GetResult<Prisma.$FundingsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Fundings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FundingsCountArgs} args - Arguments to filter Fundings to count.
     * @example
     * // Count the number of Fundings
     * const count = await prisma.fundings.count({
     *   where: {
     *     // ... the filter for the Fundings we want to count
     *   }
     * })
    **/
    count<T extends FundingsCountArgs>(
      args?: Subset<T, FundingsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], FundingsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Fundings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FundingsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends FundingsAggregateArgs>(args: Subset<T, FundingsAggregateArgs>): Prisma.PrismaPromise<GetFundingsAggregateType<T>>

    /**
     * Group by Fundings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FundingsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends FundingsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: FundingsGroupByArgs['orderBy'] }
        : { orderBy?: FundingsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, FundingsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFundingsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Fundings model
   */
  readonly fields: FundingsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Fundings.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__FundingsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Users_Fundings_createdByToUsers<T extends UsersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UsersDefaultArgs<ExtArgs>>): Prisma__UsersClient<$Result.GetResult<Prisma.$UsersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    Users_Fundings_lastUpdatedByToUsers<T extends Fundings$Users_Fundings_lastUpdatedByToUsersArgs<ExtArgs> = {}>(args?: Subset<T, Fundings$Users_Fundings_lastUpdatedByToUsersArgs<ExtArgs>>): Prisma__UsersClient<$Result.GetResult<Prisma.$UsersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Fundings model
   */
  interface FundingsFieldRefs {
    readonly id: FieldRef<"Fundings", 'String'>
    readonly trainingRoute: FieldRef<"Fundings", 'String'>
    readonly academicYear: FieldRef<"Fundings", 'String'>
    readonly fundingAmount: FieldRef<"Fundings", 'Decimal'>
    readonly fundingType: FieldRef<"Fundings", 'String'>
    readonly description: FieldRef<"Fundings", 'String'>
    readonly isActive: FieldRef<"Fundings", 'Boolean'>
    readonly effectiveDate: FieldRef<"Fundings", 'DateTime'>
    readonly expiryDate: FieldRef<"Fundings", 'DateTime'>
    readonly createdBy: FieldRef<"Fundings", 'String'>
    readonly lastUpdatedBy: FieldRef<"Fundings", 'String'>
    readonly notes: FieldRef<"Fundings", 'String'>
    readonly metadata: FieldRef<"Fundings", 'Json'>
    readonly createdAt: FieldRef<"Fundings", 'DateTime'>
    readonly updatedAt: FieldRef<"Fundings", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Fundings findUnique
   */
  export type FundingsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Fundings
     */
    select?: FundingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Fundings
     */
    omit?: FundingsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FundingsInclude<ExtArgs> | null
    /**
     * Filter, which Fundings to fetch.
     */
    where: FundingsWhereUniqueInput
  }

  /**
   * Fundings findUniqueOrThrow
   */
  export type FundingsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Fundings
     */
    select?: FundingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Fundings
     */
    omit?: FundingsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FundingsInclude<ExtArgs> | null
    /**
     * Filter, which Fundings to fetch.
     */
    where: FundingsWhereUniqueInput
  }

  /**
   * Fundings findFirst
   */
  export type FundingsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Fundings
     */
    select?: FundingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Fundings
     */
    omit?: FundingsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FundingsInclude<ExtArgs> | null
    /**
     * Filter, which Fundings to fetch.
     */
    where?: FundingsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Fundings to fetch.
     */
    orderBy?: FundingsOrderByWithRelationInput | FundingsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Fundings.
     */
    cursor?: FundingsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Fundings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Fundings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Fundings.
     */
    distinct?: FundingsScalarFieldEnum | FundingsScalarFieldEnum[]
  }

  /**
   * Fundings findFirstOrThrow
   */
  export type FundingsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Fundings
     */
    select?: FundingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Fundings
     */
    omit?: FundingsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FundingsInclude<ExtArgs> | null
    /**
     * Filter, which Fundings to fetch.
     */
    where?: FundingsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Fundings to fetch.
     */
    orderBy?: FundingsOrderByWithRelationInput | FundingsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Fundings.
     */
    cursor?: FundingsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Fundings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Fundings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Fundings.
     */
    distinct?: FundingsScalarFieldEnum | FundingsScalarFieldEnum[]
  }

  /**
   * Fundings findMany
   */
  export type FundingsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Fundings
     */
    select?: FundingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Fundings
     */
    omit?: FundingsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FundingsInclude<ExtArgs> | null
    /**
     * Filter, which Fundings to fetch.
     */
    where?: FundingsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Fundings to fetch.
     */
    orderBy?: FundingsOrderByWithRelationInput | FundingsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Fundings.
     */
    cursor?: FundingsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Fundings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Fundings.
     */
    skip?: number
    distinct?: FundingsScalarFieldEnum | FundingsScalarFieldEnum[]
  }

  /**
   * Fundings create
   */
  export type FundingsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Fundings
     */
    select?: FundingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Fundings
     */
    omit?: FundingsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FundingsInclude<ExtArgs> | null
    /**
     * The data needed to create a Fundings.
     */
    data: XOR<FundingsCreateInput, FundingsUncheckedCreateInput>
  }

  /**
   * Fundings createMany
   */
  export type FundingsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Fundings.
     */
    data: FundingsCreateManyInput | FundingsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Fundings createManyAndReturn
   */
  export type FundingsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Fundings
     */
    select?: FundingsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Fundings
     */
    omit?: FundingsOmit<ExtArgs> | null
    /**
     * The data used to create many Fundings.
     */
    data: FundingsCreateManyInput | FundingsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FundingsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Fundings update
   */
  export type FundingsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Fundings
     */
    select?: FundingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Fundings
     */
    omit?: FundingsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FundingsInclude<ExtArgs> | null
    /**
     * The data needed to update a Fundings.
     */
    data: XOR<FundingsUpdateInput, FundingsUncheckedUpdateInput>
    /**
     * Choose, which Fundings to update.
     */
    where: FundingsWhereUniqueInput
  }

  /**
   * Fundings updateMany
   */
  export type FundingsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Fundings.
     */
    data: XOR<FundingsUpdateManyMutationInput, FundingsUncheckedUpdateManyInput>
    /**
     * Filter which Fundings to update
     */
    where?: FundingsWhereInput
    /**
     * Limit how many Fundings to update.
     */
    limit?: number
  }

  /**
   * Fundings updateManyAndReturn
   */
  export type FundingsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Fundings
     */
    select?: FundingsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Fundings
     */
    omit?: FundingsOmit<ExtArgs> | null
    /**
     * The data used to update Fundings.
     */
    data: XOR<FundingsUpdateManyMutationInput, FundingsUncheckedUpdateManyInput>
    /**
     * Filter which Fundings to update
     */
    where?: FundingsWhereInput
    /**
     * Limit how many Fundings to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FundingsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Fundings upsert
   */
  export type FundingsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Fundings
     */
    select?: FundingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Fundings
     */
    omit?: FundingsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FundingsInclude<ExtArgs> | null
    /**
     * The filter to search for the Fundings to update in case it exists.
     */
    where: FundingsWhereUniqueInput
    /**
     * In case the Fundings found by the `where` argument doesn't exist, create a new Fundings with this data.
     */
    create: XOR<FundingsCreateInput, FundingsUncheckedCreateInput>
    /**
     * In case the Fundings was found with the provided `where` argument, update it with this data.
     */
    update: XOR<FundingsUpdateInput, FundingsUncheckedUpdateInput>
  }

  /**
   * Fundings delete
   */
  export type FundingsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Fundings
     */
    select?: FundingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Fundings
     */
    omit?: FundingsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FundingsInclude<ExtArgs> | null
    /**
     * Filter which Fundings to delete.
     */
    where: FundingsWhereUniqueInput
  }

  /**
   * Fundings deleteMany
   */
  export type FundingsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Fundings to delete
     */
    where?: FundingsWhereInput
    /**
     * Limit how many Fundings to delete.
     */
    limit?: number
  }

  /**
   * Fundings.Users_Fundings_lastUpdatedByToUsers
   */
  export type Fundings$Users_Fundings_lastUpdatedByToUsersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Users
     */
    select?: UsersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Users
     */
    omit?: UsersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsersInclude<ExtArgs> | null
    where?: UsersWhereInput
  }

  /**
   * Fundings without action
   */
  export type FundingsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Fundings
     */
    select?: FundingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Fundings
     */
    omit?: FundingsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FundingsInclude<ExtArgs> | null
  }


  /**
   * Model FundingRequirements
   */

  export type AggregateFundingRequirements = {
    _count: FundingRequirementsCountAggregateOutputType | null
    _avg: FundingRequirementsAvgAggregateOutputType | null
    _sum: FundingRequirementsSumAggregateOutputType | null
    _min: FundingRequirementsMinAggregateOutputType | null
    _max: FundingRequirementsMaxAggregateOutputType | null
  }

  export type FundingRequirementsAvgAggregateOutputType = {
    year: number | null
    amount: Decimal | null
  }

  export type FundingRequirementsSumAggregateOutputType = {
    year: number | null
    amount: Decimal | null
  }

  export type FundingRequirementsMinAggregateOutputType = {
    id: string | null
    route: string | null
    year: number | null
    amount: Decimal | null
    description: string | null
    createdBy: string | null
    lastUpdatedBy: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type FundingRequirementsMaxAggregateOutputType = {
    id: string | null
    route: string | null
    year: number | null
    amount: Decimal | null
    description: string | null
    createdBy: string | null
    lastUpdatedBy: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type FundingRequirementsCountAggregateOutputType = {
    id: number
    route: number
    year: number
    amount: number
    description: number
    createdBy: number
    lastUpdatedBy: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type FundingRequirementsAvgAggregateInputType = {
    year?: true
    amount?: true
  }

  export type FundingRequirementsSumAggregateInputType = {
    year?: true
    amount?: true
  }

  export type FundingRequirementsMinAggregateInputType = {
    id?: true
    route?: true
    year?: true
    amount?: true
    description?: true
    createdBy?: true
    lastUpdatedBy?: true
    createdAt?: true
    updatedAt?: true
  }

  export type FundingRequirementsMaxAggregateInputType = {
    id?: true
    route?: true
    year?: true
    amount?: true
    description?: true
    createdBy?: true
    lastUpdatedBy?: true
    createdAt?: true
    updatedAt?: true
  }

  export type FundingRequirementsCountAggregateInputType = {
    id?: true
    route?: true
    year?: true
    amount?: true
    description?: true
    createdBy?: true
    lastUpdatedBy?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type FundingRequirementsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which FundingRequirements to aggregate.
     */
    where?: FundingRequirementsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FundingRequirements to fetch.
     */
    orderBy?: FundingRequirementsOrderByWithRelationInput | FundingRequirementsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: FundingRequirementsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FundingRequirements from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FundingRequirements.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned FundingRequirements
    **/
    _count?: true | FundingRequirementsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: FundingRequirementsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: FundingRequirementsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: FundingRequirementsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: FundingRequirementsMaxAggregateInputType
  }

  export type GetFundingRequirementsAggregateType<T extends FundingRequirementsAggregateArgs> = {
        [P in keyof T & keyof AggregateFundingRequirements]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFundingRequirements[P]>
      : GetScalarType<T[P], AggregateFundingRequirements[P]>
  }




  export type FundingRequirementsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FundingRequirementsWhereInput
    orderBy?: FundingRequirementsOrderByWithAggregationInput | FundingRequirementsOrderByWithAggregationInput[]
    by: FundingRequirementsScalarFieldEnum[] | FundingRequirementsScalarFieldEnum
    having?: FundingRequirementsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: FundingRequirementsCountAggregateInputType | true
    _avg?: FundingRequirementsAvgAggregateInputType
    _sum?: FundingRequirementsSumAggregateInputType
    _min?: FundingRequirementsMinAggregateInputType
    _max?: FundingRequirementsMaxAggregateInputType
  }

  export type FundingRequirementsGroupByOutputType = {
    id: string
    route: string
    year: number
    amount: Decimal
    description: string | null
    createdBy: string
    lastUpdatedBy: string | null
    createdAt: Date
    updatedAt: Date
    _count: FundingRequirementsCountAggregateOutputType | null
    _avg: FundingRequirementsAvgAggregateOutputType | null
    _sum: FundingRequirementsSumAggregateOutputType | null
    _min: FundingRequirementsMinAggregateOutputType | null
    _max: FundingRequirementsMaxAggregateOutputType | null
  }

  type GetFundingRequirementsGroupByPayload<T extends FundingRequirementsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<FundingRequirementsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof FundingRequirementsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], FundingRequirementsGroupByOutputType[P]>
            : GetScalarType<T[P], FundingRequirementsGroupByOutputType[P]>
        }
      >
    >


  export type FundingRequirementsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    route?: boolean
    year?: boolean
    amount?: boolean
    description?: boolean
    createdBy?: boolean
    lastUpdatedBy?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    creator?: boolean | UsersDefaultArgs<ExtArgs>
    updater?: boolean | FundingRequirements$updaterArgs<ExtArgs>
  }, ExtArgs["result"]["fundingRequirements"]>

  export type FundingRequirementsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    route?: boolean
    year?: boolean
    amount?: boolean
    description?: boolean
    createdBy?: boolean
    lastUpdatedBy?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    creator?: boolean | UsersDefaultArgs<ExtArgs>
    updater?: boolean | FundingRequirements$updaterArgs<ExtArgs>
  }, ExtArgs["result"]["fundingRequirements"]>

  export type FundingRequirementsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    route?: boolean
    year?: boolean
    amount?: boolean
    description?: boolean
    createdBy?: boolean
    lastUpdatedBy?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    creator?: boolean | UsersDefaultArgs<ExtArgs>
    updater?: boolean | FundingRequirements$updaterArgs<ExtArgs>
  }, ExtArgs["result"]["fundingRequirements"]>

  export type FundingRequirementsSelectScalar = {
    id?: boolean
    route?: boolean
    year?: boolean
    amount?: boolean
    description?: boolean
    createdBy?: boolean
    lastUpdatedBy?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type FundingRequirementsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "route" | "year" | "amount" | "description" | "createdBy" | "lastUpdatedBy" | "createdAt" | "updatedAt", ExtArgs["result"]["fundingRequirements"]>
  export type FundingRequirementsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    creator?: boolean | UsersDefaultArgs<ExtArgs>
    updater?: boolean | FundingRequirements$updaterArgs<ExtArgs>
  }
  export type FundingRequirementsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    creator?: boolean | UsersDefaultArgs<ExtArgs>
    updater?: boolean | FundingRequirements$updaterArgs<ExtArgs>
  }
  export type FundingRequirementsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    creator?: boolean | UsersDefaultArgs<ExtArgs>
    updater?: boolean | FundingRequirements$updaterArgs<ExtArgs>
  }

  export type $FundingRequirementsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "FundingRequirements"
    objects: {
      creator: Prisma.$UsersPayload<ExtArgs>
      updater: Prisma.$UsersPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      route: string
      year: number
      amount: Prisma.Decimal
      description: string | null
      createdBy: string
      lastUpdatedBy: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["fundingRequirements"]>
    composites: {}
  }

  type FundingRequirementsGetPayload<S extends boolean | null | undefined | FundingRequirementsDefaultArgs> = $Result.GetResult<Prisma.$FundingRequirementsPayload, S>

  type FundingRequirementsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<FundingRequirementsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: FundingRequirementsCountAggregateInputType | true
    }

  export interface FundingRequirementsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['FundingRequirements'], meta: { name: 'FundingRequirements' } }
    /**
     * Find zero or one FundingRequirements that matches the filter.
     * @param {FundingRequirementsFindUniqueArgs} args - Arguments to find a FundingRequirements
     * @example
     * // Get one FundingRequirements
     * const fundingRequirements = await prisma.fundingRequirements.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends FundingRequirementsFindUniqueArgs>(args: SelectSubset<T, FundingRequirementsFindUniqueArgs<ExtArgs>>): Prisma__FundingRequirementsClient<$Result.GetResult<Prisma.$FundingRequirementsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one FundingRequirements that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {FundingRequirementsFindUniqueOrThrowArgs} args - Arguments to find a FundingRequirements
     * @example
     * // Get one FundingRequirements
     * const fundingRequirements = await prisma.fundingRequirements.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends FundingRequirementsFindUniqueOrThrowArgs>(args: SelectSubset<T, FundingRequirementsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__FundingRequirementsClient<$Result.GetResult<Prisma.$FundingRequirementsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first FundingRequirements that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FundingRequirementsFindFirstArgs} args - Arguments to find a FundingRequirements
     * @example
     * // Get one FundingRequirements
     * const fundingRequirements = await prisma.fundingRequirements.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends FundingRequirementsFindFirstArgs>(args?: SelectSubset<T, FundingRequirementsFindFirstArgs<ExtArgs>>): Prisma__FundingRequirementsClient<$Result.GetResult<Prisma.$FundingRequirementsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first FundingRequirements that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FundingRequirementsFindFirstOrThrowArgs} args - Arguments to find a FundingRequirements
     * @example
     * // Get one FundingRequirements
     * const fundingRequirements = await prisma.fundingRequirements.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends FundingRequirementsFindFirstOrThrowArgs>(args?: SelectSubset<T, FundingRequirementsFindFirstOrThrowArgs<ExtArgs>>): Prisma__FundingRequirementsClient<$Result.GetResult<Prisma.$FundingRequirementsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more FundingRequirements that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FundingRequirementsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all FundingRequirements
     * const fundingRequirements = await prisma.fundingRequirements.findMany()
     * 
     * // Get first 10 FundingRequirements
     * const fundingRequirements = await prisma.fundingRequirements.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const fundingRequirementsWithIdOnly = await prisma.fundingRequirements.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends FundingRequirementsFindManyArgs>(args?: SelectSubset<T, FundingRequirementsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FundingRequirementsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a FundingRequirements.
     * @param {FundingRequirementsCreateArgs} args - Arguments to create a FundingRequirements.
     * @example
     * // Create one FundingRequirements
     * const FundingRequirements = await prisma.fundingRequirements.create({
     *   data: {
     *     // ... data to create a FundingRequirements
     *   }
     * })
     * 
     */
    create<T extends FundingRequirementsCreateArgs>(args: SelectSubset<T, FundingRequirementsCreateArgs<ExtArgs>>): Prisma__FundingRequirementsClient<$Result.GetResult<Prisma.$FundingRequirementsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many FundingRequirements.
     * @param {FundingRequirementsCreateManyArgs} args - Arguments to create many FundingRequirements.
     * @example
     * // Create many FundingRequirements
     * const fundingRequirements = await prisma.fundingRequirements.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends FundingRequirementsCreateManyArgs>(args?: SelectSubset<T, FundingRequirementsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many FundingRequirements and returns the data saved in the database.
     * @param {FundingRequirementsCreateManyAndReturnArgs} args - Arguments to create many FundingRequirements.
     * @example
     * // Create many FundingRequirements
     * const fundingRequirements = await prisma.fundingRequirements.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many FundingRequirements and only return the `id`
     * const fundingRequirementsWithIdOnly = await prisma.fundingRequirements.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends FundingRequirementsCreateManyAndReturnArgs>(args?: SelectSubset<T, FundingRequirementsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FundingRequirementsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a FundingRequirements.
     * @param {FundingRequirementsDeleteArgs} args - Arguments to delete one FundingRequirements.
     * @example
     * // Delete one FundingRequirements
     * const FundingRequirements = await prisma.fundingRequirements.delete({
     *   where: {
     *     // ... filter to delete one FundingRequirements
     *   }
     * })
     * 
     */
    delete<T extends FundingRequirementsDeleteArgs>(args: SelectSubset<T, FundingRequirementsDeleteArgs<ExtArgs>>): Prisma__FundingRequirementsClient<$Result.GetResult<Prisma.$FundingRequirementsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one FundingRequirements.
     * @param {FundingRequirementsUpdateArgs} args - Arguments to update one FundingRequirements.
     * @example
     * // Update one FundingRequirements
     * const fundingRequirements = await prisma.fundingRequirements.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends FundingRequirementsUpdateArgs>(args: SelectSubset<T, FundingRequirementsUpdateArgs<ExtArgs>>): Prisma__FundingRequirementsClient<$Result.GetResult<Prisma.$FundingRequirementsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more FundingRequirements.
     * @param {FundingRequirementsDeleteManyArgs} args - Arguments to filter FundingRequirements to delete.
     * @example
     * // Delete a few FundingRequirements
     * const { count } = await prisma.fundingRequirements.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends FundingRequirementsDeleteManyArgs>(args?: SelectSubset<T, FundingRequirementsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more FundingRequirements.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FundingRequirementsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many FundingRequirements
     * const fundingRequirements = await prisma.fundingRequirements.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends FundingRequirementsUpdateManyArgs>(args: SelectSubset<T, FundingRequirementsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more FundingRequirements and returns the data updated in the database.
     * @param {FundingRequirementsUpdateManyAndReturnArgs} args - Arguments to update many FundingRequirements.
     * @example
     * // Update many FundingRequirements
     * const fundingRequirements = await prisma.fundingRequirements.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more FundingRequirements and only return the `id`
     * const fundingRequirementsWithIdOnly = await prisma.fundingRequirements.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends FundingRequirementsUpdateManyAndReturnArgs>(args: SelectSubset<T, FundingRequirementsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FundingRequirementsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one FundingRequirements.
     * @param {FundingRequirementsUpsertArgs} args - Arguments to update or create a FundingRequirements.
     * @example
     * // Update or create a FundingRequirements
     * const fundingRequirements = await prisma.fundingRequirements.upsert({
     *   create: {
     *     // ... data to create a FundingRequirements
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the FundingRequirements we want to update
     *   }
     * })
     */
    upsert<T extends FundingRequirementsUpsertArgs>(args: SelectSubset<T, FundingRequirementsUpsertArgs<ExtArgs>>): Prisma__FundingRequirementsClient<$Result.GetResult<Prisma.$FundingRequirementsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of FundingRequirements.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FundingRequirementsCountArgs} args - Arguments to filter FundingRequirements to count.
     * @example
     * // Count the number of FundingRequirements
     * const count = await prisma.fundingRequirements.count({
     *   where: {
     *     // ... the filter for the FundingRequirements we want to count
     *   }
     * })
    **/
    count<T extends FundingRequirementsCountArgs>(
      args?: Subset<T, FundingRequirementsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], FundingRequirementsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a FundingRequirements.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FundingRequirementsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends FundingRequirementsAggregateArgs>(args: Subset<T, FundingRequirementsAggregateArgs>): Prisma.PrismaPromise<GetFundingRequirementsAggregateType<T>>

    /**
     * Group by FundingRequirements.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FundingRequirementsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends FundingRequirementsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: FundingRequirementsGroupByArgs['orderBy'] }
        : { orderBy?: FundingRequirementsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, FundingRequirementsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFundingRequirementsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the FundingRequirements model
   */
  readonly fields: FundingRequirementsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for FundingRequirements.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__FundingRequirementsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    creator<T extends UsersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UsersDefaultArgs<ExtArgs>>): Prisma__UsersClient<$Result.GetResult<Prisma.$UsersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    updater<T extends FundingRequirements$updaterArgs<ExtArgs> = {}>(args?: Subset<T, FundingRequirements$updaterArgs<ExtArgs>>): Prisma__UsersClient<$Result.GetResult<Prisma.$UsersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the FundingRequirements model
   */
  interface FundingRequirementsFieldRefs {
    readonly id: FieldRef<"FundingRequirements", 'String'>
    readonly route: FieldRef<"FundingRequirements", 'String'>
    readonly year: FieldRef<"FundingRequirements", 'Int'>
    readonly amount: FieldRef<"FundingRequirements", 'Decimal'>
    readonly description: FieldRef<"FundingRequirements", 'String'>
    readonly createdBy: FieldRef<"FundingRequirements", 'String'>
    readonly lastUpdatedBy: FieldRef<"FundingRequirements", 'String'>
    readonly createdAt: FieldRef<"FundingRequirements", 'DateTime'>
    readonly updatedAt: FieldRef<"FundingRequirements", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * FundingRequirements findUnique
   */
  export type FundingRequirementsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FundingRequirements
     */
    select?: FundingRequirementsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FundingRequirements
     */
    omit?: FundingRequirementsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FundingRequirementsInclude<ExtArgs> | null
    /**
     * Filter, which FundingRequirements to fetch.
     */
    where: FundingRequirementsWhereUniqueInput
  }

  /**
   * FundingRequirements findUniqueOrThrow
   */
  export type FundingRequirementsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FundingRequirements
     */
    select?: FundingRequirementsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FundingRequirements
     */
    omit?: FundingRequirementsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FundingRequirementsInclude<ExtArgs> | null
    /**
     * Filter, which FundingRequirements to fetch.
     */
    where: FundingRequirementsWhereUniqueInput
  }

  /**
   * FundingRequirements findFirst
   */
  export type FundingRequirementsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FundingRequirements
     */
    select?: FundingRequirementsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FundingRequirements
     */
    omit?: FundingRequirementsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FundingRequirementsInclude<ExtArgs> | null
    /**
     * Filter, which FundingRequirements to fetch.
     */
    where?: FundingRequirementsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FundingRequirements to fetch.
     */
    orderBy?: FundingRequirementsOrderByWithRelationInput | FundingRequirementsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for FundingRequirements.
     */
    cursor?: FundingRequirementsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FundingRequirements from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FundingRequirements.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of FundingRequirements.
     */
    distinct?: FundingRequirementsScalarFieldEnum | FundingRequirementsScalarFieldEnum[]
  }

  /**
   * FundingRequirements findFirstOrThrow
   */
  export type FundingRequirementsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FundingRequirements
     */
    select?: FundingRequirementsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FundingRequirements
     */
    omit?: FundingRequirementsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FundingRequirementsInclude<ExtArgs> | null
    /**
     * Filter, which FundingRequirements to fetch.
     */
    where?: FundingRequirementsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FundingRequirements to fetch.
     */
    orderBy?: FundingRequirementsOrderByWithRelationInput | FundingRequirementsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for FundingRequirements.
     */
    cursor?: FundingRequirementsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FundingRequirements from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FundingRequirements.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of FundingRequirements.
     */
    distinct?: FundingRequirementsScalarFieldEnum | FundingRequirementsScalarFieldEnum[]
  }

  /**
   * FundingRequirements findMany
   */
  export type FundingRequirementsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FundingRequirements
     */
    select?: FundingRequirementsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FundingRequirements
     */
    omit?: FundingRequirementsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FundingRequirementsInclude<ExtArgs> | null
    /**
     * Filter, which FundingRequirements to fetch.
     */
    where?: FundingRequirementsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FundingRequirements to fetch.
     */
    orderBy?: FundingRequirementsOrderByWithRelationInput | FundingRequirementsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing FundingRequirements.
     */
    cursor?: FundingRequirementsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FundingRequirements from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FundingRequirements.
     */
    skip?: number
    distinct?: FundingRequirementsScalarFieldEnum | FundingRequirementsScalarFieldEnum[]
  }

  /**
   * FundingRequirements create
   */
  export type FundingRequirementsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FundingRequirements
     */
    select?: FundingRequirementsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FundingRequirements
     */
    omit?: FundingRequirementsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FundingRequirementsInclude<ExtArgs> | null
    /**
     * The data needed to create a FundingRequirements.
     */
    data: XOR<FundingRequirementsCreateInput, FundingRequirementsUncheckedCreateInput>
  }

  /**
   * FundingRequirements createMany
   */
  export type FundingRequirementsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many FundingRequirements.
     */
    data: FundingRequirementsCreateManyInput | FundingRequirementsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * FundingRequirements createManyAndReturn
   */
  export type FundingRequirementsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FundingRequirements
     */
    select?: FundingRequirementsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the FundingRequirements
     */
    omit?: FundingRequirementsOmit<ExtArgs> | null
    /**
     * The data used to create many FundingRequirements.
     */
    data: FundingRequirementsCreateManyInput | FundingRequirementsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FundingRequirementsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * FundingRequirements update
   */
  export type FundingRequirementsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FundingRequirements
     */
    select?: FundingRequirementsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FundingRequirements
     */
    omit?: FundingRequirementsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FundingRequirementsInclude<ExtArgs> | null
    /**
     * The data needed to update a FundingRequirements.
     */
    data: XOR<FundingRequirementsUpdateInput, FundingRequirementsUncheckedUpdateInput>
    /**
     * Choose, which FundingRequirements to update.
     */
    where: FundingRequirementsWhereUniqueInput
  }

  /**
   * FundingRequirements updateMany
   */
  export type FundingRequirementsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update FundingRequirements.
     */
    data: XOR<FundingRequirementsUpdateManyMutationInput, FundingRequirementsUncheckedUpdateManyInput>
    /**
     * Filter which FundingRequirements to update
     */
    where?: FundingRequirementsWhereInput
    /**
     * Limit how many FundingRequirements to update.
     */
    limit?: number
  }

  /**
   * FundingRequirements updateManyAndReturn
   */
  export type FundingRequirementsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FundingRequirements
     */
    select?: FundingRequirementsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the FundingRequirements
     */
    omit?: FundingRequirementsOmit<ExtArgs> | null
    /**
     * The data used to update FundingRequirements.
     */
    data: XOR<FundingRequirementsUpdateManyMutationInput, FundingRequirementsUncheckedUpdateManyInput>
    /**
     * Filter which FundingRequirements to update
     */
    where?: FundingRequirementsWhereInput
    /**
     * Limit how many FundingRequirements to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FundingRequirementsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * FundingRequirements upsert
   */
  export type FundingRequirementsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FundingRequirements
     */
    select?: FundingRequirementsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FundingRequirements
     */
    omit?: FundingRequirementsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FundingRequirementsInclude<ExtArgs> | null
    /**
     * The filter to search for the FundingRequirements to update in case it exists.
     */
    where: FundingRequirementsWhereUniqueInput
    /**
     * In case the FundingRequirements found by the `where` argument doesn't exist, create a new FundingRequirements with this data.
     */
    create: XOR<FundingRequirementsCreateInput, FundingRequirementsUncheckedCreateInput>
    /**
     * In case the FundingRequirements was found with the provided `where` argument, update it with this data.
     */
    update: XOR<FundingRequirementsUpdateInput, FundingRequirementsUncheckedUpdateInput>
  }

  /**
   * FundingRequirements delete
   */
  export type FundingRequirementsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FundingRequirements
     */
    select?: FundingRequirementsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FundingRequirements
     */
    omit?: FundingRequirementsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FundingRequirementsInclude<ExtArgs> | null
    /**
     * Filter which FundingRequirements to delete.
     */
    where: FundingRequirementsWhereUniqueInput
  }

  /**
   * FundingRequirements deleteMany
   */
  export type FundingRequirementsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which FundingRequirements to delete
     */
    where?: FundingRequirementsWhereInput
    /**
     * Limit how many FundingRequirements to delete.
     */
    limit?: number
  }

  /**
   * FundingRequirements.updater
   */
  export type FundingRequirements$updaterArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Users
     */
    select?: UsersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Users
     */
    omit?: UsersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsersInclude<ExtArgs> | null
    where?: UsersWhereInput
  }

  /**
   * FundingRequirements without action
   */
  export type FundingRequirementsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FundingRequirements
     */
    select?: FundingRequirementsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FundingRequirements
     */
    omit?: FundingRequirementsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FundingRequirementsInclude<ExtArgs> | null
  }


  /**
   * Model FundingHistories
   */

  export type AggregateFundingHistories = {
    _count: FundingHistoriesCountAggregateOutputType | null
    _avg: FundingHistoriesAvgAggregateOutputType | null
    _sum: FundingHistoriesSumAggregateOutputType | null
    _min: FundingHistoriesMinAggregateOutputType | null
    _max: FundingHistoriesMaxAggregateOutputType | null
  }

  export type FundingHistoriesAvgAggregateOutputType = {
    year: number | null
    amount: Decimal | null
  }

  export type FundingHistoriesSumAggregateOutputType = {
    year: number | null
    amount: Decimal | null
  }

  export type FundingHistoriesMinAggregateOutputType = {
    id: string | null
    year: number | null
    route: string | null
    change: string | null
    amount: Decimal | null
    reason: string | null
    createdBy: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type FundingHistoriesMaxAggregateOutputType = {
    id: string | null
    year: number | null
    route: string | null
    change: string | null
    amount: Decimal | null
    reason: string | null
    createdBy: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type FundingHistoriesCountAggregateOutputType = {
    id: number
    year: number
    route: number
    change: number
    amount: number
    reason: number
    createdBy: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type FundingHistoriesAvgAggregateInputType = {
    year?: true
    amount?: true
  }

  export type FundingHistoriesSumAggregateInputType = {
    year?: true
    amount?: true
  }

  export type FundingHistoriesMinAggregateInputType = {
    id?: true
    year?: true
    route?: true
    change?: true
    amount?: true
    reason?: true
    createdBy?: true
    createdAt?: true
    updatedAt?: true
  }

  export type FundingHistoriesMaxAggregateInputType = {
    id?: true
    year?: true
    route?: true
    change?: true
    amount?: true
    reason?: true
    createdBy?: true
    createdAt?: true
    updatedAt?: true
  }

  export type FundingHistoriesCountAggregateInputType = {
    id?: true
    year?: true
    route?: true
    change?: true
    amount?: true
    reason?: true
    createdBy?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type FundingHistoriesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which FundingHistories to aggregate.
     */
    where?: FundingHistoriesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FundingHistories to fetch.
     */
    orderBy?: FundingHistoriesOrderByWithRelationInput | FundingHistoriesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: FundingHistoriesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FundingHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FundingHistories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned FundingHistories
    **/
    _count?: true | FundingHistoriesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: FundingHistoriesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: FundingHistoriesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: FundingHistoriesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: FundingHistoriesMaxAggregateInputType
  }

  export type GetFundingHistoriesAggregateType<T extends FundingHistoriesAggregateArgs> = {
        [P in keyof T & keyof AggregateFundingHistories]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFundingHistories[P]>
      : GetScalarType<T[P], AggregateFundingHistories[P]>
  }




  export type FundingHistoriesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FundingHistoriesWhereInput
    orderBy?: FundingHistoriesOrderByWithAggregationInput | FundingHistoriesOrderByWithAggregationInput[]
    by: FundingHistoriesScalarFieldEnum[] | FundingHistoriesScalarFieldEnum
    having?: FundingHistoriesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: FundingHistoriesCountAggregateInputType | true
    _avg?: FundingHistoriesAvgAggregateInputType
    _sum?: FundingHistoriesSumAggregateInputType
    _min?: FundingHistoriesMinAggregateInputType
    _max?: FundingHistoriesMaxAggregateInputType
  }

  export type FundingHistoriesGroupByOutputType = {
    id: string
    year: number
    route: string
    change: string
    amount: Decimal
    reason: string | null
    createdBy: string
    createdAt: Date
    updatedAt: Date
    _count: FundingHistoriesCountAggregateOutputType | null
    _avg: FundingHistoriesAvgAggregateOutputType | null
    _sum: FundingHistoriesSumAggregateOutputType | null
    _min: FundingHistoriesMinAggregateOutputType | null
    _max: FundingHistoriesMaxAggregateOutputType | null
  }

  type GetFundingHistoriesGroupByPayload<T extends FundingHistoriesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<FundingHistoriesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof FundingHistoriesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], FundingHistoriesGroupByOutputType[P]>
            : GetScalarType<T[P], FundingHistoriesGroupByOutputType[P]>
        }
      >
    >


  export type FundingHistoriesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    year?: boolean
    route?: boolean
    change?: boolean
    amount?: boolean
    reason?: boolean
    createdBy?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    creator?: boolean | UsersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["fundingHistories"]>

  export type FundingHistoriesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    year?: boolean
    route?: boolean
    change?: boolean
    amount?: boolean
    reason?: boolean
    createdBy?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    creator?: boolean | UsersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["fundingHistories"]>

  export type FundingHistoriesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    year?: boolean
    route?: boolean
    change?: boolean
    amount?: boolean
    reason?: boolean
    createdBy?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    creator?: boolean | UsersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["fundingHistories"]>

  export type FundingHistoriesSelectScalar = {
    id?: boolean
    year?: boolean
    route?: boolean
    change?: boolean
    amount?: boolean
    reason?: boolean
    createdBy?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type FundingHistoriesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "year" | "route" | "change" | "amount" | "reason" | "createdBy" | "createdAt" | "updatedAt", ExtArgs["result"]["fundingHistories"]>
  export type FundingHistoriesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    creator?: boolean | UsersDefaultArgs<ExtArgs>
  }
  export type FundingHistoriesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    creator?: boolean | UsersDefaultArgs<ExtArgs>
  }
  export type FundingHistoriesIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    creator?: boolean | UsersDefaultArgs<ExtArgs>
  }

  export type $FundingHistoriesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "FundingHistories"
    objects: {
      creator: Prisma.$UsersPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      year: number
      route: string
      change: string
      amount: Prisma.Decimal
      reason: string | null
      createdBy: string
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["fundingHistories"]>
    composites: {}
  }

  type FundingHistoriesGetPayload<S extends boolean | null | undefined | FundingHistoriesDefaultArgs> = $Result.GetResult<Prisma.$FundingHistoriesPayload, S>

  type FundingHistoriesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<FundingHistoriesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: FundingHistoriesCountAggregateInputType | true
    }

  export interface FundingHistoriesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['FundingHistories'], meta: { name: 'FundingHistories' } }
    /**
     * Find zero or one FundingHistories that matches the filter.
     * @param {FundingHistoriesFindUniqueArgs} args - Arguments to find a FundingHistories
     * @example
     * // Get one FundingHistories
     * const fundingHistories = await prisma.fundingHistories.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends FundingHistoriesFindUniqueArgs>(args: SelectSubset<T, FundingHistoriesFindUniqueArgs<ExtArgs>>): Prisma__FundingHistoriesClient<$Result.GetResult<Prisma.$FundingHistoriesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one FundingHistories that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {FundingHistoriesFindUniqueOrThrowArgs} args - Arguments to find a FundingHistories
     * @example
     * // Get one FundingHistories
     * const fundingHistories = await prisma.fundingHistories.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends FundingHistoriesFindUniqueOrThrowArgs>(args: SelectSubset<T, FundingHistoriesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__FundingHistoriesClient<$Result.GetResult<Prisma.$FundingHistoriesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first FundingHistories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FundingHistoriesFindFirstArgs} args - Arguments to find a FundingHistories
     * @example
     * // Get one FundingHistories
     * const fundingHistories = await prisma.fundingHistories.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends FundingHistoriesFindFirstArgs>(args?: SelectSubset<T, FundingHistoriesFindFirstArgs<ExtArgs>>): Prisma__FundingHistoriesClient<$Result.GetResult<Prisma.$FundingHistoriesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first FundingHistories that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FundingHistoriesFindFirstOrThrowArgs} args - Arguments to find a FundingHistories
     * @example
     * // Get one FundingHistories
     * const fundingHistories = await prisma.fundingHistories.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends FundingHistoriesFindFirstOrThrowArgs>(args?: SelectSubset<T, FundingHistoriesFindFirstOrThrowArgs<ExtArgs>>): Prisma__FundingHistoriesClient<$Result.GetResult<Prisma.$FundingHistoriesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more FundingHistories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FundingHistoriesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all FundingHistories
     * const fundingHistories = await prisma.fundingHistories.findMany()
     * 
     * // Get first 10 FundingHistories
     * const fundingHistories = await prisma.fundingHistories.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const fundingHistoriesWithIdOnly = await prisma.fundingHistories.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends FundingHistoriesFindManyArgs>(args?: SelectSubset<T, FundingHistoriesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FundingHistoriesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a FundingHistories.
     * @param {FundingHistoriesCreateArgs} args - Arguments to create a FundingHistories.
     * @example
     * // Create one FundingHistories
     * const FundingHistories = await prisma.fundingHistories.create({
     *   data: {
     *     // ... data to create a FundingHistories
     *   }
     * })
     * 
     */
    create<T extends FundingHistoriesCreateArgs>(args: SelectSubset<T, FundingHistoriesCreateArgs<ExtArgs>>): Prisma__FundingHistoriesClient<$Result.GetResult<Prisma.$FundingHistoriesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many FundingHistories.
     * @param {FundingHistoriesCreateManyArgs} args - Arguments to create many FundingHistories.
     * @example
     * // Create many FundingHistories
     * const fundingHistories = await prisma.fundingHistories.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends FundingHistoriesCreateManyArgs>(args?: SelectSubset<T, FundingHistoriesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many FundingHistories and returns the data saved in the database.
     * @param {FundingHistoriesCreateManyAndReturnArgs} args - Arguments to create many FundingHistories.
     * @example
     * // Create many FundingHistories
     * const fundingHistories = await prisma.fundingHistories.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many FundingHistories and only return the `id`
     * const fundingHistoriesWithIdOnly = await prisma.fundingHistories.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends FundingHistoriesCreateManyAndReturnArgs>(args?: SelectSubset<T, FundingHistoriesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FundingHistoriesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a FundingHistories.
     * @param {FundingHistoriesDeleteArgs} args - Arguments to delete one FundingHistories.
     * @example
     * // Delete one FundingHistories
     * const FundingHistories = await prisma.fundingHistories.delete({
     *   where: {
     *     // ... filter to delete one FundingHistories
     *   }
     * })
     * 
     */
    delete<T extends FundingHistoriesDeleteArgs>(args: SelectSubset<T, FundingHistoriesDeleteArgs<ExtArgs>>): Prisma__FundingHistoriesClient<$Result.GetResult<Prisma.$FundingHistoriesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one FundingHistories.
     * @param {FundingHistoriesUpdateArgs} args - Arguments to update one FundingHistories.
     * @example
     * // Update one FundingHistories
     * const fundingHistories = await prisma.fundingHistories.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends FundingHistoriesUpdateArgs>(args: SelectSubset<T, FundingHistoriesUpdateArgs<ExtArgs>>): Prisma__FundingHistoriesClient<$Result.GetResult<Prisma.$FundingHistoriesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more FundingHistories.
     * @param {FundingHistoriesDeleteManyArgs} args - Arguments to filter FundingHistories to delete.
     * @example
     * // Delete a few FundingHistories
     * const { count } = await prisma.fundingHistories.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends FundingHistoriesDeleteManyArgs>(args?: SelectSubset<T, FundingHistoriesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more FundingHistories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FundingHistoriesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many FundingHistories
     * const fundingHistories = await prisma.fundingHistories.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends FundingHistoriesUpdateManyArgs>(args: SelectSubset<T, FundingHistoriesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more FundingHistories and returns the data updated in the database.
     * @param {FundingHistoriesUpdateManyAndReturnArgs} args - Arguments to update many FundingHistories.
     * @example
     * // Update many FundingHistories
     * const fundingHistories = await prisma.fundingHistories.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more FundingHistories and only return the `id`
     * const fundingHistoriesWithIdOnly = await prisma.fundingHistories.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends FundingHistoriesUpdateManyAndReturnArgs>(args: SelectSubset<T, FundingHistoriesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FundingHistoriesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one FundingHistories.
     * @param {FundingHistoriesUpsertArgs} args - Arguments to update or create a FundingHistories.
     * @example
     * // Update or create a FundingHistories
     * const fundingHistories = await prisma.fundingHistories.upsert({
     *   create: {
     *     // ... data to create a FundingHistories
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the FundingHistories we want to update
     *   }
     * })
     */
    upsert<T extends FundingHistoriesUpsertArgs>(args: SelectSubset<T, FundingHistoriesUpsertArgs<ExtArgs>>): Prisma__FundingHistoriesClient<$Result.GetResult<Prisma.$FundingHistoriesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of FundingHistories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FundingHistoriesCountArgs} args - Arguments to filter FundingHistories to count.
     * @example
     * // Count the number of FundingHistories
     * const count = await prisma.fundingHistories.count({
     *   where: {
     *     // ... the filter for the FundingHistories we want to count
     *   }
     * })
    **/
    count<T extends FundingHistoriesCountArgs>(
      args?: Subset<T, FundingHistoriesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], FundingHistoriesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a FundingHistories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FundingHistoriesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends FundingHistoriesAggregateArgs>(args: Subset<T, FundingHistoriesAggregateArgs>): Prisma.PrismaPromise<GetFundingHistoriesAggregateType<T>>

    /**
     * Group by FundingHistories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FundingHistoriesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends FundingHistoriesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: FundingHistoriesGroupByArgs['orderBy'] }
        : { orderBy?: FundingHistoriesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, FundingHistoriesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFundingHistoriesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the FundingHistories model
   */
  readonly fields: FundingHistoriesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for FundingHistories.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__FundingHistoriesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    creator<T extends UsersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UsersDefaultArgs<ExtArgs>>): Prisma__UsersClient<$Result.GetResult<Prisma.$UsersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the FundingHistories model
   */
  interface FundingHistoriesFieldRefs {
    readonly id: FieldRef<"FundingHistories", 'String'>
    readonly year: FieldRef<"FundingHistories", 'Int'>
    readonly route: FieldRef<"FundingHistories", 'String'>
    readonly change: FieldRef<"FundingHistories", 'String'>
    readonly amount: FieldRef<"FundingHistories", 'Decimal'>
    readonly reason: FieldRef<"FundingHistories", 'String'>
    readonly createdBy: FieldRef<"FundingHistories", 'String'>
    readonly createdAt: FieldRef<"FundingHistories", 'DateTime'>
    readonly updatedAt: FieldRef<"FundingHistories", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * FundingHistories findUnique
   */
  export type FundingHistoriesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FundingHistories
     */
    select?: FundingHistoriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FundingHistories
     */
    omit?: FundingHistoriesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FundingHistoriesInclude<ExtArgs> | null
    /**
     * Filter, which FundingHistories to fetch.
     */
    where: FundingHistoriesWhereUniqueInput
  }

  /**
   * FundingHistories findUniqueOrThrow
   */
  export type FundingHistoriesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FundingHistories
     */
    select?: FundingHistoriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FundingHistories
     */
    omit?: FundingHistoriesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FundingHistoriesInclude<ExtArgs> | null
    /**
     * Filter, which FundingHistories to fetch.
     */
    where: FundingHistoriesWhereUniqueInput
  }

  /**
   * FundingHistories findFirst
   */
  export type FundingHistoriesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FundingHistories
     */
    select?: FundingHistoriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FundingHistories
     */
    omit?: FundingHistoriesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FundingHistoriesInclude<ExtArgs> | null
    /**
     * Filter, which FundingHistories to fetch.
     */
    where?: FundingHistoriesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FundingHistories to fetch.
     */
    orderBy?: FundingHistoriesOrderByWithRelationInput | FundingHistoriesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for FundingHistories.
     */
    cursor?: FundingHistoriesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FundingHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FundingHistories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of FundingHistories.
     */
    distinct?: FundingHistoriesScalarFieldEnum | FundingHistoriesScalarFieldEnum[]
  }

  /**
   * FundingHistories findFirstOrThrow
   */
  export type FundingHistoriesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FundingHistories
     */
    select?: FundingHistoriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FundingHistories
     */
    omit?: FundingHistoriesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FundingHistoriesInclude<ExtArgs> | null
    /**
     * Filter, which FundingHistories to fetch.
     */
    where?: FundingHistoriesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FundingHistories to fetch.
     */
    orderBy?: FundingHistoriesOrderByWithRelationInput | FundingHistoriesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for FundingHistories.
     */
    cursor?: FundingHistoriesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FundingHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FundingHistories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of FundingHistories.
     */
    distinct?: FundingHistoriesScalarFieldEnum | FundingHistoriesScalarFieldEnum[]
  }

  /**
   * FundingHistories findMany
   */
  export type FundingHistoriesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FundingHistories
     */
    select?: FundingHistoriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FundingHistories
     */
    omit?: FundingHistoriesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FundingHistoriesInclude<ExtArgs> | null
    /**
     * Filter, which FundingHistories to fetch.
     */
    where?: FundingHistoriesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FundingHistories to fetch.
     */
    orderBy?: FundingHistoriesOrderByWithRelationInput | FundingHistoriesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing FundingHistories.
     */
    cursor?: FundingHistoriesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FundingHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FundingHistories.
     */
    skip?: number
    distinct?: FundingHistoriesScalarFieldEnum | FundingHistoriesScalarFieldEnum[]
  }

  /**
   * FundingHistories create
   */
  export type FundingHistoriesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FundingHistories
     */
    select?: FundingHistoriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FundingHistories
     */
    omit?: FundingHistoriesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FundingHistoriesInclude<ExtArgs> | null
    /**
     * The data needed to create a FundingHistories.
     */
    data: XOR<FundingHistoriesCreateInput, FundingHistoriesUncheckedCreateInput>
  }

  /**
   * FundingHistories createMany
   */
  export type FundingHistoriesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many FundingHistories.
     */
    data: FundingHistoriesCreateManyInput | FundingHistoriesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * FundingHistories createManyAndReturn
   */
  export type FundingHistoriesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FundingHistories
     */
    select?: FundingHistoriesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the FundingHistories
     */
    omit?: FundingHistoriesOmit<ExtArgs> | null
    /**
     * The data used to create many FundingHistories.
     */
    data: FundingHistoriesCreateManyInput | FundingHistoriesCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FundingHistoriesIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * FundingHistories update
   */
  export type FundingHistoriesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FundingHistories
     */
    select?: FundingHistoriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FundingHistories
     */
    omit?: FundingHistoriesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FundingHistoriesInclude<ExtArgs> | null
    /**
     * The data needed to update a FundingHistories.
     */
    data: XOR<FundingHistoriesUpdateInput, FundingHistoriesUncheckedUpdateInput>
    /**
     * Choose, which FundingHistories to update.
     */
    where: FundingHistoriesWhereUniqueInput
  }

  /**
   * FundingHistories updateMany
   */
  export type FundingHistoriesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update FundingHistories.
     */
    data: XOR<FundingHistoriesUpdateManyMutationInput, FundingHistoriesUncheckedUpdateManyInput>
    /**
     * Filter which FundingHistories to update
     */
    where?: FundingHistoriesWhereInput
    /**
     * Limit how many FundingHistories to update.
     */
    limit?: number
  }

  /**
   * FundingHistories updateManyAndReturn
   */
  export type FundingHistoriesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FundingHistories
     */
    select?: FundingHistoriesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the FundingHistories
     */
    omit?: FundingHistoriesOmit<ExtArgs> | null
    /**
     * The data used to update FundingHistories.
     */
    data: XOR<FundingHistoriesUpdateManyMutationInput, FundingHistoriesUncheckedUpdateManyInput>
    /**
     * Filter which FundingHistories to update
     */
    where?: FundingHistoriesWhereInput
    /**
     * Limit how many FundingHistories to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FundingHistoriesIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * FundingHistories upsert
   */
  export type FundingHistoriesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FundingHistories
     */
    select?: FundingHistoriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FundingHistories
     */
    omit?: FundingHistoriesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FundingHistoriesInclude<ExtArgs> | null
    /**
     * The filter to search for the FundingHistories to update in case it exists.
     */
    where: FundingHistoriesWhereUniqueInput
    /**
     * In case the FundingHistories found by the `where` argument doesn't exist, create a new FundingHistories with this data.
     */
    create: XOR<FundingHistoriesCreateInput, FundingHistoriesUncheckedCreateInput>
    /**
     * In case the FundingHistories was found with the provided `where` argument, update it with this data.
     */
    update: XOR<FundingHistoriesUpdateInput, FundingHistoriesUncheckedUpdateInput>
  }

  /**
   * FundingHistories delete
   */
  export type FundingHistoriesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FundingHistories
     */
    select?: FundingHistoriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FundingHistories
     */
    omit?: FundingHistoriesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FundingHistoriesInclude<ExtArgs> | null
    /**
     * Filter which FundingHistories to delete.
     */
    where: FundingHistoriesWhereUniqueInput
  }

  /**
   * FundingHistories deleteMany
   */
  export type FundingHistoriesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which FundingHistories to delete
     */
    where?: FundingHistoriesWhereInput
    /**
     * Limit how many FundingHistories to delete.
     */
    limit?: number
  }

  /**
   * FundingHistories without action
   */
  export type FundingHistoriesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FundingHistories
     */
    select?: FundingHistoriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FundingHistories
     */
    omit?: FundingHistoriesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FundingHistoriesInclude<ExtArgs> | null
  }


  /**
   * Model ReferenceData
   */

  export type AggregateReferenceData = {
    _count: ReferenceDataCountAggregateOutputType | null
    _avg: ReferenceDataAvgAggregateOutputType | null
    _sum: ReferenceDataSumAggregateOutputType | null
    _min: ReferenceDataMinAggregateOutputType | null
    _max: ReferenceDataMaxAggregateOutputType | null
  }

  export type ReferenceDataAvgAggregateOutputType = {
    version: number | null
  }

  export type ReferenceDataSumAggregateOutputType = {
    version: number | null
  }

  export type ReferenceDataMinAggregateOutputType = {
    id: string | null
    name: string | null
    code: string | null
    category: string | null
    description: string | null
    isActive: boolean | null
    validFrom: Date | null
    validTo: Date | null
    createdBy: string | null
    lastUpdatedBy: string | null
    version: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ReferenceDataMaxAggregateOutputType = {
    id: string | null
    name: string | null
    code: string | null
    category: string | null
    description: string | null
    isActive: boolean | null
    validFrom: Date | null
    validTo: Date | null
    createdBy: string | null
    lastUpdatedBy: string | null
    version: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ReferenceDataCountAggregateOutputType = {
    id: number
    name: number
    code: number
    category: number
    description: number
    isActive: number
    validFrom: number
    validTo: number
    createdBy: number
    lastUpdatedBy: number
    version: number
    metadata: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type ReferenceDataAvgAggregateInputType = {
    version?: true
  }

  export type ReferenceDataSumAggregateInputType = {
    version?: true
  }

  export type ReferenceDataMinAggregateInputType = {
    id?: true
    name?: true
    code?: true
    category?: true
    description?: true
    isActive?: true
    validFrom?: true
    validTo?: true
    createdBy?: true
    lastUpdatedBy?: true
    version?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ReferenceDataMaxAggregateInputType = {
    id?: true
    name?: true
    code?: true
    category?: true
    description?: true
    isActive?: true
    validFrom?: true
    validTo?: true
    createdBy?: true
    lastUpdatedBy?: true
    version?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ReferenceDataCountAggregateInputType = {
    id?: true
    name?: true
    code?: true
    category?: true
    description?: true
    isActive?: true
    validFrom?: true
    validTo?: true
    createdBy?: true
    lastUpdatedBy?: true
    version?: true
    metadata?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type ReferenceDataAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ReferenceData to aggregate.
     */
    where?: ReferenceDataWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ReferenceData to fetch.
     */
    orderBy?: ReferenceDataOrderByWithRelationInput | ReferenceDataOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ReferenceDataWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ReferenceData from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ReferenceData.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ReferenceData
    **/
    _count?: true | ReferenceDataCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ReferenceDataAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ReferenceDataSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ReferenceDataMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ReferenceDataMaxAggregateInputType
  }

  export type GetReferenceDataAggregateType<T extends ReferenceDataAggregateArgs> = {
        [P in keyof T & keyof AggregateReferenceData]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateReferenceData[P]>
      : GetScalarType<T[P], AggregateReferenceData[P]>
  }




  export type ReferenceDataGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReferenceDataWhereInput
    orderBy?: ReferenceDataOrderByWithAggregationInput | ReferenceDataOrderByWithAggregationInput[]
    by: ReferenceDataScalarFieldEnum[] | ReferenceDataScalarFieldEnum
    having?: ReferenceDataScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ReferenceDataCountAggregateInputType | true
    _avg?: ReferenceDataAvgAggregateInputType
    _sum?: ReferenceDataSumAggregateInputType
    _min?: ReferenceDataMinAggregateInputType
    _max?: ReferenceDataMaxAggregateInputType
  }

  export type ReferenceDataGroupByOutputType = {
    id: string
    name: string
    code: string
    category: string
    description: string | null
    isActive: boolean
    validFrom: Date | null
    validTo: Date | null
    createdBy: string
    lastUpdatedBy: string | null
    version: number
    metadata: JsonValue | null
    createdAt: Date
    updatedAt: Date
    _count: ReferenceDataCountAggregateOutputType | null
    _avg: ReferenceDataAvgAggregateOutputType | null
    _sum: ReferenceDataSumAggregateOutputType | null
    _min: ReferenceDataMinAggregateOutputType | null
    _max: ReferenceDataMaxAggregateOutputType | null
  }

  type GetReferenceDataGroupByPayload<T extends ReferenceDataGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ReferenceDataGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ReferenceDataGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ReferenceDataGroupByOutputType[P]>
            : GetScalarType<T[P], ReferenceDataGroupByOutputType[P]>
        }
      >
    >


  export type ReferenceDataSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    code?: boolean
    category?: boolean
    description?: boolean
    isActive?: boolean
    validFrom?: boolean
    validTo?: boolean
    createdBy?: boolean
    lastUpdatedBy?: boolean
    version?: boolean
    metadata?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    Users_ReferenceData_createdByToUsers?: boolean | UsersDefaultArgs<ExtArgs>
    Users_ReferenceData_lastUpdatedByToUsers?: boolean | ReferenceData$Users_ReferenceData_lastUpdatedByToUsersArgs<ExtArgs>
  }, ExtArgs["result"]["referenceData"]>

  export type ReferenceDataSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    code?: boolean
    category?: boolean
    description?: boolean
    isActive?: boolean
    validFrom?: boolean
    validTo?: boolean
    createdBy?: boolean
    lastUpdatedBy?: boolean
    version?: boolean
    metadata?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    Users_ReferenceData_createdByToUsers?: boolean | UsersDefaultArgs<ExtArgs>
    Users_ReferenceData_lastUpdatedByToUsers?: boolean | ReferenceData$Users_ReferenceData_lastUpdatedByToUsersArgs<ExtArgs>
  }, ExtArgs["result"]["referenceData"]>

  export type ReferenceDataSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    code?: boolean
    category?: boolean
    description?: boolean
    isActive?: boolean
    validFrom?: boolean
    validTo?: boolean
    createdBy?: boolean
    lastUpdatedBy?: boolean
    version?: boolean
    metadata?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    Users_ReferenceData_createdByToUsers?: boolean | UsersDefaultArgs<ExtArgs>
    Users_ReferenceData_lastUpdatedByToUsers?: boolean | ReferenceData$Users_ReferenceData_lastUpdatedByToUsersArgs<ExtArgs>
  }, ExtArgs["result"]["referenceData"]>

  export type ReferenceDataSelectScalar = {
    id?: boolean
    name?: boolean
    code?: boolean
    category?: boolean
    description?: boolean
    isActive?: boolean
    validFrom?: boolean
    validTo?: boolean
    createdBy?: boolean
    lastUpdatedBy?: boolean
    version?: boolean
    metadata?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type ReferenceDataOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "code" | "category" | "description" | "isActive" | "validFrom" | "validTo" | "createdBy" | "lastUpdatedBy" | "version" | "metadata" | "createdAt" | "updatedAt", ExtArgs["result"]["referenceData"]>
  export type ReferenceDataInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Users_ReferenceData_createdByToUsers?: boolean | UsersDefaultArgs<ExtArgs>
    Users_ReferenceData_lastUpdatedByToUsers?: boolean | ReferenceData$Users_ReferenceData_lastUpdatedByToUsersArgs<ExtArgs>
  }
  export type ReferenceDataIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Users_ReferenceData_createdByToUsers?: boolean | UsersDefaultArgs<ExtArgs>
    Users_ReferenceData_lastUpdatedByToUsers?: boolean | ReferenceData$Users_ReferenceData_lastUpdatedByToUsersArgs<ExtArgs>
  }
  export type ReferenceDataIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Users_ReferenceData_createdByToUsers?: boolean | UsersDefaultArgs<ExtArgs>
    Users_ReferenceData_lastUpdatedByToUsers?: boolean | ReferenceData$Users_ReferenceData_lastUpdatedByToUsersArgs<ExtArgs>
  }

  export type $ReferenceDataPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ReferenceData"
    objects: {
      Users_ReferenceData_createdByToUsers: Prisma.$UsersPayload<ExtArgs>
      Users_ReferenceData_lastUpdatedByToUsers: Prisma.$UsersPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      code: string
      category: string
      description: string | null
      isActive: boolean
      validFrom: Date | null
      validTo: Date | null
      createdBy: string
      lastUpdatedBy: string | null
      version: number
      metadata: Prisma.JsonValue | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["referenceData"]>
    composites: {}
  }

  type ReferenceDataGetPayload<S extends boolean | null | undefined | ReferenceDataDefaultArgs> = $Result.GetResult<Prisma.$ReferenceDataPayload, S>

  type ReferenceDataCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ReferenceDataFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ReferenceDataCountAggregateInputType | true
    }

  export interface ReferenceDataDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ReferenceData'], meta: { name: 'ReferenceData' } }
    /**
     * Find zero or one ReferenceData that matches the filter.
     * @param {ReferenceDataFindUniqueArgs} args - Arguments to find a ReferenceData
     * @example
     * // Get one ReferenceData
     * const referenceData = await prisma.referenceData.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ReferenceDataFindUniqueArgs>(args: SelectSubset<T, ReferenceDataFindUniqueArgs<ExtArgs>>): Prisma__ReferenceDataClient<$Result.GetResult<Prisma.$ReferenceDataPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ReferenceData that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ReferenceDataFindUniqueOrThrowArgs} args - Arguments to find a ReferenceData
     * @example
     * // Get one ReferenceData
     * const referenceData = await prisma.referenceData.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ReferenceDataFindUniqueOrThrowArgs>(args: SelectSubset<T, ReferenceDataFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ReferenceDataClient<$Result.GetResult<Prisma.$ReferenceDataPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ReferenceData that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReferenceDataFindFirstArgs} args - Arguments to find a ReferenceData
     * @example
     * // Get one ReferenceData
     * const referenceData = await prisma.referenceData.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ReferenceDataFindFirstArgs>(args?: SelectSubset<T, ReferenceDataFindFirstArgs<ExtArgs>>): Prisma__ReferenceDataClient<$Result.GetResult<Prisma.$ReferenceDataPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ReferenceData that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReferenceDataFindFirstOrThrowArgs} args - Arguments to find a ReferenceData
     * @example
     * // Get one ReferenceData
     * const referenceData = await prisma.referenceData.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ReferenceDataFindFirstOrThrowArgs>(args?: SelectSubset<T, ReferenceDataFindFirstOrThrowArgs<ExtArgs>>): Prisma__ReferenceDataClient<$Result.GetResult<Prisma.$ReferenceDataPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ReferenceData that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReferenceDataFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ReferenceData
     * const referenceData = await prisma.referenceData.findMany()
     * 
     * // Get first 10 ReferenceData
     * const referenceData = await prisma.referenceData.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const referenceDataWithIdOnly = await prisma.referenceData.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ReferenceDataFindManyArgs>(args?: SelectSubset<T, ReferenceDataFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReferenceDataPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ReferenceData.
     * @param {ReferenceDataCreateArgs} args - Arguments to create a ReferenceData.
     * @example
     * // Create one ReferenceData
     * const ReferenceData = await prisma.referenceData.create({
     *   data: {
     *     // ... data to create a ReferenceData
     *   }
     * })
     * 
     */
    create<T extends ReferenceDataCreateArgs>(args: SelectSubset<T, ReferenceDataCreateArgs<ExtArgs>>): Prisma__ReferenceDataClient<$Result.GetResult<Prisma.$ReferenceDataPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ReferenceData.
     * @param {ReferenceDataCreateManyArgs} args - Arguments to create many ReferenceData.
     * @example
     * // Create many ReferenceData
     * const referenceData = await prisma.referenceData.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ReferenceDataCreateManyArgs>(args?: SelectSubset<T, ReferenceDataCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ReferenceData and returns the data saved in the database.
     * @param {ReferenceDataCreateManyAndReturnArgs} args - Arguments to create many ReferenceData.
     * @example
     * // Create many ReferenceData
     * const referenceData = await prisma.referenceData.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ReferenceData and only return the `id`
     * const referenceDataWithIdOnly = await prisma.referenceData.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ReferenceDataCreateManyAndReturnArgs>(args?: SelectSubset<T, ReferenceDataCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReferenceDataPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ReferenceData.
     * @param {ReferenceDataDeleteArgs} args - Arguments to delete one ReferenceData.
     * @example
     * // Delete one ReferenceData
     * const ReferenceData = await prisma.referenceData.delete({
     *   where: {
     *     // ... filter to delete one ReferenceData
     *   }
     * })
     * 
     */
    delete<T extends ReferenceDataDeleteArgs>(args: SelectSubset<T, ReferenceDataDeleteArgs<ExtArgs>>): Prisma__ReferenceDataClient<$Result.GetResult<Prisma.$ReferenceDataPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ReferenceData.
     * @param {ReferenceDataUpdateArgs} args - Arguments to update one ReferenceData.
     * @example
     * // Update one ReferenceData
     * const referenceData = await prisma.referenceData.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ReferenceDataUpdateArgs>(args: SelectSubset<T, ReferenceDataUpdateArgs<ExtArgs>>): Prisma__ReferenceDataClient<$Result.GetResult<Prisma.$ReferenceDataPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ReferenceData.
     * @param {ReferenceDataDeleteManyArgs} args - Arguments to filter ReferenceData to delete.
     * @example
     * // Delete a few ReferenceData
     * const { count } = await prisma.referenceData.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ReferenceDataDeleteManyArgs>(args?: SelectSubset<T, ReferenceDataDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ReferenceData.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReferenceDataUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ReferenceData
     * const referenceData = await prisma.referenceData.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ReferenceDataUpdateManyArgs>(args: SelectSubset<T, ReferenceDataUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ReferenceData and returns the data updated in the database.
     * @param {ReferenceDataUpdateManyAndReturnArgs} args - Arguments to update many ReferenceData.
     * @example
     * // Update many ReferenceData
     * const referenceData = await prisma.referenceData.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ReferenceData and only return the `id`
     * const referenceDataWithIdOnly = await prisma.referenceData.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ReferenceDataUpdateManyAndReturnArgs>(args: SelectSubset<T, ReferenceDataUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReferenceDataPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ReferenceData.
     * @param {ReferenceDataUpsertArgs} args - Arguments to update or create a ReferenceData.
     * @example
     * // Update or create a ReferenceData
     * const referenceData = await prisma.referenceData.upsert({
     *   create: {
     *     // ... data to create a ReferenceData
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ReferenceData we want to update
     *   }
     * })
     */
    upsert<T extends ReferenceDataUpsertArgs>(args: SelectSubset<T, ReferenceDataUpsertArgs<ExtArgs>>): Prisma__ReferenceDataClient<$Result.GetResult<Prisma.$ReferenceDataPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ReferenceData.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReferenceDataCountArgs} args - Arguments to filter ReferenceData to count.
     * @example
     * // Count the number of ReferenceData
     * const count = await prisma.referenceData.count({
     *   where: {
     *     // ... the filter for the ReferenceData we want to count
     *   }
     * })
    **/
    count<T extends ReferenceDataCountArgs>(
      args?: Subset<T, ReferenceDataCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ReferenceDataCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ReferenceData.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReferenceDataAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ReferenceDataAggregateArgs>(args: Subset<T, ReferenceDataAggregateArgs>): Prisma.PrismaPromise<GetReferenceDataAggregateType<T>>

    /**
     * Group by ReferenceData.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReferenceDataGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ReferenceDataGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ReferenceDataGroupByArgs['orderBy'] }
        : { orderBy?: ReferenceDataGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ReferenceDataGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetReferenceDataGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ReferenceData model
   */
  readonly fields: ReferenceDataFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ReferenceData.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ReferenceDataClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Users_ReferenceData_createdByToUsers<T extends UsersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UsersDefaultArgs<ExtArgs>>): Prisma__UsersClient<$Result.GetResult<Prisma.$UsersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    Users_ReferenceData_lastUpdatedByToUsers<T extends ReferenceData$Users_ReferenceData_lastUpdatedByToUsersArgs<ExtArgs> = {}>(args?: Subset<T, ReferenceData$Users_ReferenceData_lastUpdatedByToUsersArgs<ExtArgs>>): Prisma__UsersClient<$Result.GetResult<Prisma.$UsersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ReferenceData model
   */
  interface ReferenceDataFieldRefs {
    readonly id: FieldRef<"ReferenceData", 'String'>
    readonly name: FieldRef<"ReferenceData", 'String'>
    readonly code: FieldRef<"ReferenceData", 'String'>
    readonly category: FieldRef<"ReferenceData", 'String'>
    readonly description: FieldRef<"ReferenceData", 'String'>
    readonly isActive: FieldRef<"ReferenceData", 'Boolean'>
    readonly validFrom: FieldRef<"ReferenceData", 'DateTime'>
    readonly validTo: FieldRef<"ReferenceData", 'DateTime'>
    readonly createdBy: FieldRef<"ReferenceData", 'String'>
    readonly lastUpdatedBy: FieldRef<"ReferenceData", 'String'>
    readonly version: FieldRef<"ReferenceData", 'Int'>
    readonly metadata: FieldRef<"ReferenceData", 'Json'>
    readonly createdAt: FieldRef<"ReferenceData", 'DateTime'>
    readonly updatedAt: FieldRef<"ReferenceData", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * ReferenceData findUnique
   */
  export type ReferenceDataFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReferenceData
     */
    select?: ReferenceDataSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReferenceData
     */
    omit?: ReferenceDataOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReferenceDataInclude<ExtArgs> | null
    /**
     * Filter, which ReferenceData to fetch.
     */
    where: ReferenceDataWhereUniqueInput
  }

  /**
   * ReferenceData findUniqueOrThrow
   */
  export type ReferenceDataFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReferenceData
     */
    select?: ReferenceDataSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReferenceData
     */
    omit?: ReferenceDataOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReferenceDataInclude<ExtArgs> | null
    /**
     * Filter, which ReferenceData to fetch.
     */
    where: ReferenceDataWhereUniqueInput
  }

  /**
   * ReferenceData findFirst
   */
  export type ReferenceDataFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReferenceData
     */
    select?: ReferenceDataSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReferenceData
     */
    omit?: ReferenceDataOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReferenceDataInclude<ExtArgs> | null
    /**
     * Filter, which ReferenceData to fetch.
     */
    where?: ReferenceDataWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ReferenceData to fetch.
     */
    orderBy?: ReferenceDataOrderByWithRelationInput | ReferenceDataOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ReferenceData.
     */
    cursor?: ReferenceDataWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ReferenceData from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ReferenceData.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ReferenceData.
     */
    distinct?: ReferenceDataScalarFieldEnum | ReferenceDataScalarFieldEnum[]
  }

  /**
   * ReferenceData findFirstOrThrow
   */
  export type ReferenceDataFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReferenceData
     */
    select?: ReferenceDataSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReferenceData
     */
    omit?: ReferenceDataOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReferenceDataInclude<ExtArgs> | null
    /**
     * Filter, which ReferenceData to fetch.
     */
    where?: ReferenceDataWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ReferenceData to fetch.
     */
    orderBy?: ReferenceDataOrderByWithRelationInput | ReferenceDataOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ReferenceData.
     */
    cursor?: ReferenceDataWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ReferenceData from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ReferenceData.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ReferenceData.
     */
    distinct?: ReferenceDataScalarFieldEnum | ReferenceDataScalarFieldEnum[]
  }

  /**
   * ReferenceData findMany
   */
  export type ReferenceDataFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReferenceData
     */
    select?: ReferenceDataSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReferenceData
     */
    omit?: ReferenceDataOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReferenceDataInclude<ExtArgs> | null
    /**
     * Filter, which ReferenceData to fetch.
     */
    where?: ReferenceDataWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ReferenceData to fetch.
     */
    orderBy?: ReferenceDataOrderByWithRelationInput | ReferenceDataOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ReferenceData.
     */
    cursor?: ReferenceDataWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ReferenceData from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ReferenceData.
     */
    skip?: number
    distinct?: ReferenceDataScalarFieldEnum | ReferenceDataScalarFieldEnum[]
  }

  /**
   * ReferenceData create
   */
  export type ReferenceDataCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReferenceData
     */
    select?: ReferenceDataSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReferenceData
     */
    omit?: ReferenceDataOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReferenceDataInclude<ExtArgs> | null
    /**
     * The data needed to create a ReferenceData.
     */
    data: XOR<ReferenceDataCreateInput, ReferenceDataUncheckedCreateInput>
  }

  /**
   * ReferenceData createMany
   */
  export type ReferenceDataCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ReferenceData.
     */
    data: ReferenceDataCreateManyInput | ReferenceDataCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ReferenceData createManyAndReturn
   */
  export type ReferenceDataCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReferenceData
     */
    select?: ReferenceDataSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ReferenceData
     */
    omit?: ReferenceDataOmit<ExtArgs> | null
    /**
     * The data used to create many ReferenceData.
     */
    data: ReferenceDataCreateManyInput | ReferenceDataCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReferenceDataIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ReferenceData update
   */
  export type ReferenceDataUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReferenceData
     */
    select?: ReferenceDataSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReferenceData
     */
    omit?: ReferenceDataOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReferenceDataInclude<ExtArgs> | null
    /**
     * The data needed to update a ReferenceData.
     */
    data: XOR<ReferenceDataUpdateInput, ReferenceDataUncheckedUpdateInput>
    /**
     * Choose, which ReferenceData to update.
     */
    where: ReferenceDataWhereUniqueInput
  }

  /**
   * ReferenceData updateMany
   */
  export type ReferenceDataUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ReferenceData.
     */
    data: XOR<ReferenceDataUpdateManyMutationInput, ReferenceDataUncheckedUpdateManyInput>
    /**
     * Filter which ReferenceData to update
     */
    where?: ReferenceDataWhereInput
    /**
     * Limit how many ReferenceData to update.
     */
    limit?: number
  }

  /**
   * ReferenceData updateManyAndReturn
   */
  export type ReferenceDataUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReferenceData
     */
    select?: ReferenceDataSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ReferenceData
     */
    omit?: ReferenceDataOmit<ExtArgs> | null
    /**
     * The data used to update ReferenceData.
     */
    data: XOR<ReferenceDataUpdateManyMutationInput, ReferenceDataUncheckedUpdateManyInput>
    /**
     * Filter which ReferenceData to update
     */
    where?: ReferenceDataWhereInput
    /**
     * Limit how many ReferenceData to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReferenceDataIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ReferenceData upsert
   */
  export type ReferenceDataUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReferenceData
     */
    select?: ReferenceDataSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReferenceData
     */
    omit?: ReferenceDataOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReferenceDataInclude<ExtArgs> | null
    /**
     * The filter to search for the ReferenceData to update in case it exists.
     */
    where: ReferenceDataWhereUniqueInput
    /**
     * In case the ReferenceData found by the `where` argument doesn't exist, create a new ReferenceData with this data.
     */
    create: XOR<ReferenceDataCreateInput, ReferenceDataUncheckedCreateInput>
    /**
     * In case the ReferenceData was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ReferenceDataUpdateInput, ReferenceDataUncheckedUpdateInput>
  }

  /**
   * ReferenceData delete
   */
  export type ReferenceDataDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReferenceData
     */
    select?: ReferenceDataSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReferenceData
     */
    omit?: ReferenceDataOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReferenceDataInclude<ExtArgs> | null
    /**
     * Filter which ReferenceData to delete.
     */
    where: ReferenceDataWhereUniqueInput
  }

  /**
   * ReferenceData deleteMany
   */
  export type ReferenceDataDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ReferenceData to delete
     */
    where?: ReferenceDataWhereInput
    /**
     * Limit how many ReferenceData to delete.
     */
    limit?: number
  }

  /**
   * ReferenceData.Users_ReferenceData_lastUpdatedByToUsers
   */
  export type ReferenceData$Users_ReferenceData_lastUpdatedByToUsersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Users
     */
    select?: UsersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Users
     */
    omit?: UsersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsersInclude<ExtArgs> | null
    where?: UsersWhereInput
  }

  /**
   * ReferenceData without action
   */
  export type ReferenceDataDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReferenceData
     */
    select?: ReferenceDataSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReferenceData
     */
    omit?: ReferenceDataOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReferenceDataInclude<ExtArgs> | null
  }


  /**
   * Model ReleaseNotes
   */

  export type AggregateReleaseNotes = {
    _count: ReleaseNotesCountAggregateOutputType | null
    _min: ReleaseNotesMinAggregateOutputType | null
    _max: ReleaseNotesMaxAggregateOutputType | null
  }

  export type ReleaseNotesMinAggregateOutputType = {
    id: string | null
    version: string | null
    title: string | null
    description: string | null
    environment: $Enums.enum_ReleaseNotes_environment | null
    status: $Enums.enum_ReleaseNotes_status | null
    releaseDate: Date | null
    completedDate: Date | null
    createdBy: string | null
    approvedBy: string | null
    changeLog: string | null
    notes: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ReleaseNotesMaxAggregateOutputType = {
    id: string | null
    version: string | null
    title: string | null
    description: string | null
    environment: $Enums.enum_ReleaseNotes_environment | null
    status: $Enums.enum_ReleaseNotes_status | null
    releaseDate: Date | null
    completedDate: Date | null
    createdBy: string | null
    approvedBy: string | null
    changeLog: string | null
    notes: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ReleaseNotesCountAggregateOutputType = {
    id: number
    version: number
    title: number
    description: number
    environment: number
    status: number
    releaseDate: number
    completedDate: number
    createdBy: number
    approvedBy: number
    changeLog: number
    impactedSystems: number
    notes: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type ReleaseNotesMinAggregateInputType = {
    id?: true
    version?: true
    title?: true
    description?: true
    environment?: true
    status?: true
    releaseDate?: true
    completedDate?: true
    createdBy?: true
    approvedBy?: true
    changeLog?: true
    notes?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ReleaseNotesMaxAggregateInputType = {
    id?: true
    version?: true
    title?: true
    description?: true
    environment?: true
    status?: true
    releaseDate?: true
    completedDate?: true
    createdBy?: true
    approvedBy?: true
    changeLog?: true
    notes?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ReleaseNotesCountAggregateInputType = {
    id?: true
    version?: true
    title?: true
    description?: true
    environment?: true
    status?: true
    releaseDate?: true
    completedDate?: true
    createdBy?: true
    approvedBy?: true
    changeLog?: true
    impactedSystems?: true
    notes?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type ReleaseNotesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ReleaseNotes to aggregate.
     */
    where?: ReleaseNotesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ReleaseNotes to fetch.
     */
    orderBy?: ReleaseNotesOrderByWithRelationInput | ReleaseNotesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ReleaseNotesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ReleaseNotes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ReleaseNotes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ReleaseNotes
    **/
    _count?: true | ReleaseNotesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ReleaseNotesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ReleaseNotesMaxAggregateInputType
  }

  export type GetReleaseNotesAggregateType<T extends ReleaseNotesAggregateArgs> = {
        [P in keyof T & keyof AggregateReleaseNotes]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateReleaseNotes[P]>
      : GetScalarType<T[P], AggregateReleaseNotes[P]>
  }




  export type ReleaseNotesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReleaseNotesWhereInput
    orderBy?: ReleaseNotesOrderByWithAggregationInput | ReleaseNotesOrderByWithAggregationInput[]
    by: ReleaseNotesScalarFieldEnum[] | ReleaseNotesScalarFieldEnum
    having?: ReleaseNotesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ReleaseNotesCountAggregateInputType | true
    _min?: ReleaseNotesMinAggregateInputType
    _max?: ReleaseNotesMaxAggregateInputType
  }

  export type ReleaseNotesGroupByOutputType = {
    id: string
    version: string
    title: string
    description: string
    environment: $Enums.enum_ReleaseNotes_environment
    status: $Enums.enum_ReleaseNotes_status
    releaseDate: Date
    completedDate: Date | null
    createdBy: string
    approvedBy: string | null
    changeLog: string | null
    impactedSystems: string[]
    notes: string | null
    createdAt: Date
    updatedAt: Date
    _count: ReleaseNotesCountAggregateOutputType | null
    _min: ReleaseNotesMinAggregateOutputType | null
    _max: ReleaseNotesMaxAggregateOutputType | null
  }

  type GetReleaseNotesGroupByPayload<T extends ReleaseNotesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ReleaseNotesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ReleaseNotesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ReleaseNotesGroupByOutputType[P]>
            : GetScalarType<T[P], ReleaseNotesGroupByOutputType[P]>
        }
      >
    >


  export type ReleaseNotesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    version?: boolean
    title?: boolean
    description?: boolean
    environment?: boolean
    status?: boolean
    releaseDate?: boolean
    completedDate?: boolean
    createdBy?: boolean
    approvedBy?: boolean
    changeLog?: boolean
    impactedSystems?: boolean
    notes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    Users_ReleaseNotes_approvedByToUsers?: boolean | ReleaseNotes$Users_ReleaseNotes_approvedByToUsersArgs<ExtArgs>
    Users_ReleaseNotes_createdByToUsers?: boolean | UsersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["releaseNotes"]>

  export type ReleaseNotesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    version?: boolean
    title?: boolean
    description?: boolean
    environment?: boolean
    status?: boolean
    releaseDate?: boolean
    completedDate?: boolean
    createdBy?: boolean
    approvedBy?: boolean
    changeLog?: boolean
    impactedSystems?: boolean
    notes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    Users_ReleaseNotes_approvedByToUsers?: boolean | ReleaseNotes$Users_ReleaseNotes_approvedByToUsersArgs<ExtArgs>
    Users_ReleaseNotes_createdByToUsers?: boolean | UsersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["releaseNotes"]>

  export type ReleaseNotesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    version?: boolean
    title?: boolean
    description?: boolean
    environment?: boolean
    status?: boolean
    releaseDate?: boolean
    completedDate?: boolean
    createdBy?: boolean
    approvedBy?: boolean
    changeLog?: boolean
    impactedSystems?: boolean
    notes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    Users_ReleaseNotes_approvedByToUsers?: boolean | ReleaseNotes$Users_ReleaseNotes_approvedByToUsersArgs<ExtArgs>
    Users_ReleaseNotes_createdByToUsers?: boolean | UsersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["releaseNotes"]>

  export type ReleaseNotesSelectScalar = {
    id?: boolean
    version?: boolean
    title?: boolean
    description?: boolean
    environment?: boolean
    status?: boolean
    releaseDate?: boolean
    completedDate?: boolean
    createdBy?: boolean
    approvedBy?: boolean
    changeLog?: boolean
    impactedSystems?: boolean
    notes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type ReleaseNotesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "version" | "title" | "description" | "environment" | "status" | "releaseDate" | "completedDate" | "createdBy" | "approvedBy" | "changeLog" | "impactedSystems" | "notes" | "createdAt" | "updatedAt", ExtArgs["result"]["releaseNotes"]>
  export type ReleaseNotesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Users_ReleaseNotes_approvedByToUsers?: boolean | ReleaseNotes$Users_ReleaseNotes_approvedByToUsersArgs<ExtArgs>
    Users_ReleaseNotes_createdByToUsers?: boolean | UsersDefaultArgs<ExtArgs>
  }
  export type ReleaseNotesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Users_ReleaseNotes_approvedByToUsers?: boolean | ReleaseNotes$Users_ReleaseNotes_approvedByToUsersArgs<ExtArgs>
    Users_ReleaseNotes_createdByToUsers?: boolean | UsersDefaultArgs<ExtArgs>
  }
  export type ReleaseNotesIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Users_ReleaseNotes_approvedByToUsers?: boolean | ReleaseNotes$Users_ReleaseNotes_approvedByToUsersArgs<ExtArgs>
    Users_ReleaseNotes_createdByToUsers?: boolean | UsersDefaultArgs<ExtArgs>
  }

  export type $ReleaseNotesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ReleaseNotes"
    objects: {
      Users_ReleaseNotes_approvedByToUsers: Prisma.$UsersPayload<ExtArgs> | null
      Users_ReleaseNotes_createdByToUsers: Prisma.$UsersPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      version: string
      title: string
      description: string
      environment: $Enums.enum_ReleaseNotes_environment
      status: $Enums.enum_ReleaseNotes_status
      releaseDate: Date
      completedDate: Date | null
      createdBy: string
      approvedBy: string | null
      changeLog: string | null
      impactedSystems: string[]
      notes: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["releaseNotes"]>
    composites: {}
  }

  type ReleaseNotesGetPayload<S extends boolean | null | undefined | ReleaseNotesDefaultArgs> = $Result.GetResult<Prisma.$ReleaseNotesPayload, S>

  type ReleaseNotesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ReleaseNotesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ReleaseNotesCountAggregateInputType | true
    }

  export interface ReleaseNotesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ReleaseNotes'], meta: { name: 'ReleaseNotes' } }
    /**
     * Find zero or one ReleaseNotes that matches the filter.
     * @param {ReleaseNotesFindUniqueArgs} args - Arguments to find a ReleaseNotes
     * @example
     * // Get one ReleaseNotes
     * const releaseNotes = await prisma.releaseNotes.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ReleaseNotesFindUniqueArgs>(args: SelectSubset<T, ReleaseNotesFindUniqueArgs<ExtArgs>>): Prisma__ReleaseNotesClient<$Result.GetResult<Prisma.$ReleaseNotesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ReleaseNotes that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ReleaseNotesFindUniqueOrThrowArgs} args - Arguments to find a ReleaseNotes
     * @example
     * // Get one ReleaseNotes
     * const releaseNotes = await prisma.releaseNotes.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ReleaseNotesFindUniqueOrThrowArgs>(args: SelectSubset<T, ReleaseNotesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ReleaseNotesClient<$Result.GetResult<Prisma.$ReleaseNotesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ReleaseNotes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReleaseNotesFindFirstArgs} args - Arguments to find a ReleaseNotes
     * @example
     * // Get one ReleaseNotes
     * const releaseNotes = await prisma.releaseNotes.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ReleaseNotesFindFirstArgs>(args?: SelectSubset<T, ReleaseNotesFindFirstArgs<ExtArgs>>): Prisma__ReleaseNotesClient<$Result.GetResult<Prisma.$ReleaseNotesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ReleaseNotes that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReleaseNotesFindFirstOrThrowArgs} args - Arguments to find a ReleaseNotes
     * @example
     * // Get one ReleaseNotes
     * const releaseNotes = await prisma.releaseNotes.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ReleaseNotesFindFirstOrThrowArgs>(args?: SelectSubset<T, ReleaseNotesFindFirstOrThrowArgs<ExtArgs>>): Prisma__ReleaseNotesClient<$Result.GetResult<Prisma.$ReleaseNotesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ReleaseNotes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReleaseNotesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ReleaseNotes
     * const releaseNotes = await prisma.releaseNotes.findMany()
     * 
     * // Get first 10 ReleaseNotes
     * const releaseNotes = await prisma.releaseNotes.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const releaseNotesWithIdOnly = await prisma.releaseNotes.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ReleaseNotesFindManyArgs>(args?: SelectSubset<T, ReleaseNotesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReleaseNotesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ReleaseNotes.
     * @param {ReleaseNotesCreateArgs} args - Arguments to create a ReleaseNotes.
     * @example
     * // Create one ReleaseNotes
     * const ReleaseNotes = await prisma.releaseNotes.create({
     *   data: {
     *     // ... data to create a ReleaseNotes
     *   }
     * })
     * 
     */
    create<T extends ReleaseNotesCreateArgs>(args: SelectSubset<T, ReleaseNotesCreateArgs<ExtArgs>>): Prisma__ReleaseNotesClient<$Result.GetResult<Prisma.$ReleaseNotesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ReleaseNotes.
     * @param {ReleaseNotesCreateManyArgs} args - Arguments to create many ReleaseNotes.
     * @example
     * // Create many ReleaseNotes
     * const releaseNotes = await prisma.releaseNotes.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ReleaseNotesCreateManyArgs>(args?: SelectSubset<T, ReleaseNotesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ReleaseNotes and returns the data saved in the database.
     * @param {ReleaseNotesCreateManyAndReturnArgs} args - Arguments to create many ReleaseNotes.
     * @example
     * // Create many ReleaseNotes
     * const releaseNotes = await prisma.releaseNotes.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ReleaseNotes and only return the `id`
     * const releaseNotesWithIdOnly = await prisma.releaseNotes.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ReleaseNotesCreateManyAndReturnArgs>(args?: SelectSubset<T, ReleaseNotesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReleaseNotesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ReleaseNotes.
     * @param {ReleaseNotesDeleteArgs} args - Arguments to delete one ReleaseNotes.
     * @example
     * // Delete one ReleaseNotes
     * const ReleaseNotes = await prisma.releaseNotes.delete({
     *   where: {
     *     // ... filter to delete one ReleaseNotes
     *   }
     * })
     * 
     */
    delete<T extends ReleaseNotesDeleteArgs>(args: SelectSubset<T, ReleaseNotesDeleteArgs<ExtArgs>>): Prisma__ReleaseNotesClient<$Result.GetResult<Prisma.$ReleaseNotesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ReleaseNotes.
     * @param {ReleaseNotesUpdateArgs} args - Arguments to update one ReleaseNotes.
     * @example
     * // Update one ReleaseNotes
     * const releaseNotes = await prisma.releaseNotes.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ReleaseNotesUpdateArgs>(args: SelectSubset<T, ReleaseNotesUpdateArgs<ExtArgs>>): Prisma__ReleaseNotesClient<$Result.GetResult<Prisma.$ReleaseNotesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ReleaseNotes.
     * @param {ReleaseNotesDeleteManyArgs} args - Arguments to filter ReleaseNotes to delete.
     * @example
     * // Delete a few ReleaseNotes
     * const { count } = await prisma.releaseNotes.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ReleaseNotesDeleteManyArgs>(args?: SelectSubset<T, ReleaseNotesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ReleaseNotes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReleaseNotesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ReleaseNotes
     * const releaseNotes = await prisma.releaseNotes.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ReleaseNotesUpdateManyArgs>(args: SelectSubset<T, ReleaseNotesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ReleaseNotes and returns the data updated in the database.
     * @param {ReleaseNotesUpdateManyAndReturnArgs} args - Arguments to update many ReleaseNotes.
     * @example
     * // Update many ReleaseNotes
     * const releaseNotes = await prisma.releaseNotes.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ReleaseNotes and only return the `id`
     * const releaseNotesWithIdOnly = await prisma.releaseNotes.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ReleaseNotesUpdateManyAndReturnArgs>(args: SelectSubset<T, ReleaseNotesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReleaseNotesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ReleaseNotes.
     * @param {ReleaseNotesUpsertArgs} args - Arguments to update or create a ReleaseNotes.
     * @example
     * // Update or create a ReleaseNotes
     * const releaseNotes = await prisma.releaseNotes.upsert({
     *   create: {
     *     // ... data to create a ReleaseNotes
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ReleaseNotes we want to update
     *   }
     * })
     */
    upsert<T extends ReleaseNotesUpsertArgs>(args: SelectSubset<T, ReleaseNotesUpsertArgs<ExtArgs>>): Prisma__ReleaseNotesClient<$Result.GetResult<Prisma.$ReleaseNotesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ReleaseNotes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReleaseNotesCountArgs} args - Arguments to filter ReleaseNotes to count.
     * @example
     * // Count the number of ReleaseNotes
     * const count = await prisma.releaseNotes.count({
     *   where: {
     *     // ... the filter for the ReleaseNotes we want to count
     *   }
     * })
    **/
    count<T extends ReleaseNotesCountArgs>(
      args?: Subset<T, ReleaseNotesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ReleaseNotesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ReleaseNotes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReleaseNotesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ReleaseNotesAggregateArgs>(args: Subset<T, ReleaseNotesAggregateArgs>): Prisma.PrismaPromise<GetReleaseNotesAggregateType<T>>

    /**
     * Group by ReleaseNotes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReleaseNotesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ReleaseNotesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ReleaseNotesGroupByArgs['orderBy'] }
        : { orderBy?: ReleaseNotesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ReleaseNotesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetReleaseNotesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ReleaseNotes model
   */
  readonly fields: ReleaseNotesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ReleaseNotes.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ReleaseNotesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Users_ReleaseNotes_approvedByToUsers<T extends ReleaseNotes$Users_ReleaseNotes_approvedByToUsersArgs<ExtArgs> = {}>(args?: Subset<T, ReleaseNotes$Users_ReleaseNotes_approvedByToUsersArgs<ExtArgs>>): Prisma__UsersClient<$Result.GetResult<Prisma.$UsersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    Users_ReleaseNotes_createdByToUsers<T extends UsersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UsersDefaultArgs<ExtArgs>>): Prisma__UsersClient<$Result.GetResult<Prisma.$UsersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ReleaseNotes model
   */
  interface ReleaseNotesFieldRefs {
    readonly id: FieldRef<"ReleaseNotes", 'String'>
    readonly version: FieldRef<"ReleaseNotes", 'String'>
    readonly title: FieldRef<"ReleaseNotes", 'String'>
    readonly description: FieldRef<"ReleaseNotes", 'String'>
    readonly environment: FieldRef<"ReleaseNotes", 'enum_ReleaseNotes_environment'>
    readonly status: FieldRef<"ReleaseNotes", 'enum_ReleaseNotes_status'>
    readonly releaseDate: FieldRef<"ReleaseNotes", 'DateTime'>
    readonly completedDate: FieldRef<"ReleaseNotes", 'DateTime'>
    readonly createdBy: FieldRef<"ReleaseNotes", 'String'>
    readonly approvedBy: FieldRef<"ReleaseNotes", 'String'>
    readonly changeLog: FieldRef<"ReleaseNotes", 'String'>
    readonly impactedSystems: FieldRef<"ReleaseNotes", 'String[]'>
    readonly notes: FieldRef<"ReleaseNotes", 'String'>
    readonly createdAt: FieldRef<"ReleaseNotes", 'DateTime'>
    readonly updatedAt: FieldRef<"ReleaseNotes", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * ReleaseNotes findUnique
   */
  export type ReleaseNotesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReleaseNotes
     */
    select?: ReleaseNotesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReleaseNotes
     */
    omit?: ReleaseNotesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReleaseNotesInclude<ExtArgs> | null
    /**
     * Filter, which ReleaseNotes to fetch.
     */
    where: ReleaseNotesWhereUniqueInput
  }

  /**
   * ReleaseNotes findUniqueOrThrow
   */
  export type ReleaseNotesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReleaseNotes
     */
    select?: ReleaseNotesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReleaseNotes
     */
    omit?: ReleaseNotesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReleaseNotesInclude<ExtArgs> | null
    /**
     * Filter, which ReleaseNotes to fetch.
     */
    where: ReleaseNotesWhereUniqueInput
  }

  /**
   * ReleaseNotes findFirst
   */
  export type ReleaseNotesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReleaseNotes
     */
    select?: ReleaseNotesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReleaseNotes
     */
    omit?: ReleaseNotesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReleaseNotesInclude<ExtArgs> | null
    /**
     * Filter, which ReleaseNotes to fetch.
     */
    where?: ReleaseNotesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ReleaseNotes to fetch.
     */
    orderBy?: ReleaseNotesOrderByWithRelationInput | ReleaseNotesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ReleaseNotes.
     */
    cursor?: ReleaseNotesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ReleaseNotes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ReleaseNotes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ReleaseNotes.
     */
    distinct?: ReleaseNotesScalarFieldEnum | ReleaseNotesScalarFieldEnum[]
  }

  /**
   * ReleaseNotes findFirstOrThrow
   */
  export type ReleaseNotesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReleaseNotes
     */
    select?: ReleaseNotesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReleaseNotes
     */
    omit?: ReleaseNotesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReleaseNotesInclude<ExtArgs> | null
    /**
     * Filter, which ReleaseNotes to fetch.
     */
    where?: ReleaseNotesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ReleaseNotes to fetch.
     */
    orderBy?: ReleaseNotesOrderByWithRelationInput | ReleaseNotesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ReleaseNotes.
     */
    cursor?: ReleaseNotesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ReleaseNotes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ReleaseNotes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ReleaseNotes.
     */
    distinct?: ReleaseNotesScalarFieldEnum | ReleaseNotesScalarFieldEnum[]
  }

  /**
   * ReleaseNotes findMany
   */
  export type ReleaseNotesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReleaseNotes
     */
    select?: ReleaseNotesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReleaseNotes
     */
    omit?: ReleaseNotesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReleaseNotesInclude<ExtArgs> | null
    /**
     * Filter, which ReleaseNotes to fetch.
     */
    where?: ReleaseNotesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ReleaseNotes to fetch.
     */
    orderBy?: ReleaseNotesOrderByWithRelationInput | ReleaseNotesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ReleaseNotes.
     */
    cursor?: ReleaseNotesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ReleaseNotes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ReleaseNotes.
     */
    skip?: number
    distinct?: ReleaseNotesScalarFieldEnum | ReleaseNotesScalarFieldEnum[]
  }

  /**
   * ReleaseNotes create
   */
  export type ReleaseNotesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReleaseNotes
     */
    select?: ReleaseNotesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReleaseNotes
     */
    omit?: ReleaseNotesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReleaseNotesInclude<ExtArgs> | null
    /**
     * The data needed to create a ReleaseNotes.
     */
    data: XOR<ReleaseNotesCreateInput, ReleaseNotesUncheckedCreateInput>
  }

  /**
   * ReleaseNotes createMany
   */
  export type ReleaseNotesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ReleaseNotes.
     */
    data: ReleaseNotesCreateManyInput | ReleaseNotesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ReleaseNotes createManyAndReturn
   */
  export type ReleaseNotesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReleaseNotes
     */
    select?: ReleaseNotesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ReleaseNotes
     */
    omit?: ReleaseNotesOmit<ExtArgs> | null
    /**
     * The data used to create many ReleaseNotes.
     */
    data: ReleaseNotesCreateManyInput | ReleaseNotesCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReleaseNotesIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ReleaseNotes update
   */
  export type ReleaseNotesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReleaseNotes
     */
    select?: ReleaseNotesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReleaseNotes
     */
    omit?: ReleaseNotesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReleaseNotesInclude<ExtArgs> | null
    /**
     * The data needed to update a ReleaseNotes.
     */
    data: XOR<ReleaseNotesUpdateInput, ReleaseNotesUncheckedUpdateInput>
    /**
     * Choose, which ReleaseNotes to update.
     */
    where: ReleaseNotesWhereUniqueInput
  }

  /**
   * ReleaseNotes updateMany
   */
  export type ReleaseNotesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ReleaseNotes.
     */
    data: XOR<ReleaseNotesUpdateManyMutationInput, ReleaseNotesUncheckedUpdateManyInput>
    /**
     * Filter which ReleaseNotes to update
     */
    where?: ReleaseNotesWhereInput
    /**
     * Limit how many ReleaseNotes to update.
     */
    limit?: number
  }

  /**
   * ReleaseNotes updateManyAndReturn
   */
  export type ReleaseNotesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReleaseNotes
     */
    select?: ReleaseNotesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ReleaseNotes
     */
    omit?: ReleaseNotesOmit<ExtArgs> | null
    /**
     * The data used to update ReleaseNotes.
     */
    data: XOR<ReleaseNotesUpdateManyMutationInput, ReleaseNotesUncheckedUpdateManyInput>
    /**
     * Filter which ReleaseNotes to update
     */
    where?: ReleaseNotesWhereInput
    /**
     * Limit how many ReleaseNotes to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReleaseNotesIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ReleaseNotes upsert
   */
  export type ReleaseNotesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReleaseNotes
     */
    select?: ReleaseNotesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReleaseNotes
     */
    omit?: ReleaseNotesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReleaseNotesInclude<ExtArgs> | null
    /**
     * The filter to search for the ReleaseNotes to update in case it exists.
     */
    where: ReleaseNotesWhereUniqueInput
    /**
     * In case the ReleaseNotes found by the `where` argument doesn't exist, create a new ReleaseNotes with this data.
     */
    create: XOR<ReleaseNotesCreateInput, ReleaseNotesUncheckedCreateInput>
    /**
     * In case the ReleaseNotes was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ReleaseNotesUpdateInput, ReleaseNotesUncheckedUpdateInput>
  }

  /**
   * ReleaseNotes delete
   */
  export type ReleaseNotesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReleaseNotes
     */
    select?: ReleaseNotesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReleaseNotes
     */
    omit?: ReleaseNotesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReleaseNotesInclude<ExtArgs> | null
    /**
     * Filter which ReleaseNotes to delete.
     */
    where: ReleaseNotesWhereUniqueInput
  }

  /**
   * ReleaseNotes deleteMany
   */
  export type ReleaseNotesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ReleaseNotes to delete
     */
    where?: ReleaseNotesWhereInput
    /**
     * Limit how many ReleaseNotes to delete.
     */
    limit?: number
  }

  /**
   * ReleaseNotes.Users_ReleaseNotes_approvedByToUsers
   */
  export type ReleaseNotes$Users_ReleaseNotes_approvedByToUsersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Users
     */
    select?: UsersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Users
     */
    omit?: UsersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsersInclude<ExtArgs> | null
    where?: UsersWhereInput
  }

  /**
   * ReleaseNotes without action
   */
  export type ReleaseNotesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReleaseNotes
     */
    select?: ReleaseNotesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReleaseNotes
     */
    omit?: ReleaseNotesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReleaseNotesInclude<ExtArgs> | null
  }


  /**
   * Model SequelizeMeta
   */

  export type AggregateSequelizeMeta = {
    _count: SequelizeMetaCountAggregateOutputType | null
    _min: SequelizeMetaMinAggregateOutputType | null
    _max: SequelizeMetaMaxAggregateOutputType | null
  }

  export type SequelizeMetaMinAggregateOutputType = {
    name: string | null
  }

  export type SequelizeMetaMaxAggregateOutputType = {
    name: string | null
  }

  export type SequelizeMetaCountAggregateOutputType = {
    name: number
    _all: number
  }


  export type SequelizeMetaMinAggregateInputType = {
    name?: true
  }

  export type SequelizeMetaMaxAggregateInputType = {
    name?: true
  }

  export type SequelizeMetaCountAggregateInputType = {
    name?: true
    _all?: true
  }

  export type SequelizeMetaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SequelizeMeta to aggregate.
     */
    where?: SequelizeMetaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SequelizeMetas to fetch.
     */
    orderBy?: SequelizeMetaOrderByWithRelationInput | SequelizeMetaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SequelizeMetaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SequelizeMetas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SequelizeMetas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned SequelizeMetas
    **/
    _count?: true | SequelizeMetaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SequelizeMetaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SequelizeMetaMaxAggregateInputType
  }

  export type GetSequelizeMetaAggregateType<T extends SequelizeMetaAggregateArgs> = {
        [P in keyof T & keyof AggregateSequelizeMeta]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSequelizeMeta[P]>
      : GetScalarType<T[P], AggregateSequelizeMeta[P]>
  }




  export type SequelizeMetaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SequelizeMetaWhereInput
    orderBy?: SequelizeMetaOrderByWithAggregationInput | SequelizeMetaOrderByWithAggregationInput[]
    by: SequelizeMetaScalarFieldEnum[] | SequelizeMetaScalarFieldEnum
    having?: SequelizeMetaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SequelizeMetaCountAggregateInputType | true
    _min?: SequelizeMetaMinAggregateInputType
    _max?: SequelizeMetaMaxAggregateInputType
  }

  export type SequelizeMetaGroupByOutputType = {
    name: string
    _count: SequelizeMetaCountAggregateOutputType | null
    _min: SequelizeMetaMinAggregateOutputType | null
    _max: SequelizeMetaMaxAggregateOutputType | null
  }

  type GetSequelizeMetaGroupByPayload<T extends SequelizeMetaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SequelizeMetaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SequelizeMetaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SequelizeMetaGroupByOutputType[P]>
            : GetScalarType<T[P], SequelizeMetaGroupByOutputType[P]>
        }
      >
    >


  export type SequelizeMetaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    name?: boolean
  }, ExtArgs["result"]["sequelizeMeta"]>

  export type SequelizeMetaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    name?: boolean
  }, ExtArgs["result"]["sequelizeMeta"]>

  export type SequelizeMetaSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    name?: boolean
  }, ExtArgs["result"]["sequelizeMeta"]>

  export type SequelizeMetaSelectScalar = {
    name?: boolean
  }

  export type SequelizeMetaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"name", ExtArgs["result"]["sequelizeMeta"]>

  export type $SequelizeMetaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "SequelizeMeta"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      name: string
    }, ExtArgs["result"]["sequelizeMeta"]>
    composites: {}
  }

  type SequelizeMetaGetPayload<S extends boolean | null | undefined | SequelizeMetaDefaultArgs> = $Result.GetResult<Prisma.$SequelizeMetaPayload, S>

  type SequelizeMetaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<SequelizeMetaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SequelizeMetaCountAggregateInputType | true
    }

  export interface SequelizeMetaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['SequelizeMeta'], meta: { name: 'SequelizeMeta' } }
    /**
     * Find zero or one SequelizeMeta that matches the filter.
     * @param {SequelizeMetaFindUniqueArgs} args - Arguments to find a SequelizeMeta
     * @example
     * // Get one SequelizeMeta
     * const sequelizeMeta = await prisma.sequelizeMeta.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SequelizeMetaFindUniqueArgs>(args: SelectSubset<T, SequelizeMetaFindUniqueArgs<ExtArgs>>): Prisma__SequelizeMetaClient<$Result.GetResult<Prisma.$SequelizeMetaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one SequelizeMeta that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {SequelizeMetaFindUniqueOrThrowArgs} args - Arguments to find a SequelizeMeta
     * @example
     * // Get one SequelizeMeta
     * const sequelizeMeta = await prisma.sequelizeMeta.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SequelizeMetaFindUniqueOrThrowArgs>(args: SelectSubset<T, SequelizeMetaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SequelizeMetaClient<$Result.GetResult<Prisma.$SequelizeMetaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SequelizeMeta that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SequelizeMetaFindFirstArgs} args - Arguments to find a SequelizeMeta
     * @example
     * // Get one SequelizeMeta
     * const sequelizeMeta = await prisma.sequelizeMeta.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SequelizeMetaFindFirstArgs>(args?: SelectSubset<T, SequelizeMetaFindFirstArgs<ExtArgs>>): Prisma__SequelizeMetaClient<$Result.GetResult<Prisma.$SequelizeMetaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SequelizeMeta that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SequelizeMetaFindFirstOrThrowArgs} args - Arguments to find a SequelizeMeta
     * @example
     * // Get one SequelizeMeta
     * const sequelizeMeta = await prisma.sequelizeMeta.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SequelizeMetaFindFirstOrThrowArgs>(args?: SelectSubset<T, SequelizeMetaFindFirstOrThrowArgs<ExtArgs>>): Prisma__SequelizeMetaClient<$Result.GetResult<Prisma.$SequelizeMetaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more SequelizeMetas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SequelizeMetaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all SequelizeMetas
     * const sequelizeMetas = await prisma.sequelizeMeta.findMany()
     * 
     * // Get first 10 SequelizeMetas
     * const sequelizeMetas = await prisma.sequelizeMeta.findMany({ take: 10 })
     * 
     * // Only select the `name`
     * const sequelizeMetaWithNameOnly = await prisma.sequelizeMeta.findMany({ select: { name: true } })
     * 
     */
    findMany<T extends SequelizeMetaFindManyArgs>(args?: SelectSubset<T, SequelizeMetaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SequelizeMetaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a SequelizeMeta.
     * @param {SequelizeMetaCreateArgs} args - Arguments to create a SequelizeMeta.
     * @example
     * // Create one SequelizeMeta
     * const SequelizeMeta = await prisma.sequelizeMeta.create({
     *   data: {
     *     // ... data to create a SequelizeMeta
     *   }
     * })
     * 
     */
    create<T extends SequelizeMetaCreateArgs>(args: SelectSubset<T, SequelizeMetaCreateArgs<ExtArgs>>): Prisma__SequelizeMetaClient<$Result.GetResult<Prisma.$SequelizeMetaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many SequelizeMetas.
     * @param {SequelizeMetaCreateManyArgs} args - Arguments to create many SequelizeMetas.
     * @example
     * // Create many SequelizeMetas
     * const sequelizeMeta = await prisma.sequelizeMeta.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SequelizeMetaCreateManyArgs>(args?: SelectSubset<T, SequelizeMetaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many SequelizeMetas and returns the data saved in the database.
     * @param {SequelizeMetaCreateManyAndReturnArgs} args - Arguments to create many SequelizeMetas.
     * @example
     * // Create many SequelizeMetas
     * const sequelizeMeta = await prisma.sequelizeMeta.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many SequelizeMetas and only return the `name`
     * const sequelizeMetaWithNameOnly = await prisma.sequelizeMeta.createManyAndReturn({
     *   select: { name: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends SequelizeMetaCreateManyAndReturnArgs>(args?: SelectSubset<T, SequelizeMetaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SequelizeMetaPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a SequelizeMeta.
     * @param {SequelizeMetaDeleteArgs} args - Arguments to delete one SequelizeMeta.
     * @example
     * // Delete one SequelizeMeta
     * const SequelizeMeta = await prisma.sequelizeMeta.delete({
     *   where: {
     *     // ... filter to delete one SequelizeMeta
     *   }
     * })
     * 
     */
    delete<T extends SequelizeMetaDeleteArgs>(args: SelectSubset<T, SequelizeMetaDeleteArgs<ExtArgs>>): Prisma__SequelizeMetaClient<$Result.GetResult<Prisma.$SequelizeMetaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one SequelizeMeta.
     * @param {SequelizeMetaUpdateArgs} args - Arguments to update one SequelizeMeta.
     * @example
     * // Update one SequelizeMeta
     * const sequelizeMeta = await prisma.sequelizeMeta.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SequelizeMetaUpdateArgs>(args: SelectSubset<T, SequelizeMetaUpdateArgs<ExtArgs>>): Prisma__SequelizeMetaClient<$Result.GetResult<Prisma.$SequelizeMetaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more SequelizeMetas.
     * @param {SequelizeMetaDeleteManyArgs} args - Arguments to filter SequelizeMetas to delete.
     * @example
     * // Delete a few SequelizeMetas
     * const { count } = await prisma.sequelizeMeta.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SequelizeMetaDeleteManyArgs>(args?: SelectSubset<T, SequelizeMetaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SequelizeMetas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SequelizeMetaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many SequelizeMetas
     * const sequelizeMeta = await prisma.sequelizeMeta.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SequelizeMetaUpdateManyArgs>(args: SelectSubset<T, SequelizeMetaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SequelizeMetas and returns the data updated in the database.
     * @param {SequelizeMetaUpdateManyAndReturnArgs} args - Arguments to update many SequelizeMetas.
     * @example
     * // Update many SequelizeMetas
     * const sequelizeMeta = await prisma.sequelizeMeta.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more SequelizeMetas and only return the `name`
     * const sequelizeMetaWithNameOnly = await prisma.sequelizeMeta.updateManyAndReturn({
     *   select: { name: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends SequelizeMetaUpdateManyAndReturnArgs>(args: SelectSubset<T, SequelizeMetaUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SequelizeMetaPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one SequelizeMeta.
     * @param {SequelizeMetaUpsertArgs} args - Arguments to update or create a SequelizeMeta.
     * @example
     * // Update or create a SequelizeMeta
     * const sequelizeMeta = await prisma.sequelizeMeta.upsert({
     *   create: {
     *     // ... data to create a SequelizeMeta
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the SequelizeMeta we want to update
     *   }
     * })
     */
    upsert<T extends SequelizeMetaUpsertArgs>(args: SelectSubset<T, SequelizeMetaUpsertArgs<ExtArgs>>): Prisma__SequelizeMetaClient<$Result.GetResult<Prisma.$SequelizeMetaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of SequelizeMetas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SequelizeMetaCountArgs} args - Arguments to filter SequelizeMetas to count.
     * @example
     * // Count the number of SequelizeMetas
     * const count = await prisma.sequelizeMeta.count({
     *   where: {
     *     // ... the filter for the SequelizeMetas we want to count
     *   }
     * })
    **/
    count<T extends SequelizeMetaCountArgs>(
      args?: Subset<T, SequelizeMetaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SequelizeMetaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a SequelizeMeta.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SequelizeMetaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SequelizeMetaAggregateArgs>(args: Subset<T, SequelizeMetaAggregateArgs>): Prisma.PrismaPromise<GetSequelizeMetaAggregateType<T>>

    /**
     * Group by SequelizeMeta.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SequelizeMetaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SequelizeMetaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SequelizeMetaGroupByArgs['orderBy'] }
        : { orderBy?: SequelizeMetaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SequelizeMetaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSequelizeMetaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the SequelizeMeta model
   */
  readonly fields: SequelizeMetaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for SequelizeMeta.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SequelizeMetaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the SequelizeMeta model
   */
  interface SequelizeMetaFieldRefs {
    readonly name: FieldRef<"SequelizeMeta", 'String'>
  }
    

  // Custom InputTypes
  /**
   * SequelizeMeta findUnique
   */
  export type SequelizeMetaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SequelizeMeta
     */
    select?: SequelizeMetaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SequelizeMeta
     */
    omit?: SequelizeMetaOmit<ExtArgs> | null
    /**
     * Filter, which SequelizeMeta to fetch.
     */
    where: SequelizeMetaWhereUniqueInput
  }

  /**
   * SequelizeMeta findUniqueOrThrow
   */
  export type SequelizeMetaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SequelizeMeta
     */
    select?: SequelizeMetaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SequelizeMeta
     */
    omit?: SequelizeMetaOmit<ExtArgs> | null
    /**
     * Filter, which SequelizeMeta to fetch.
     */
    where: SequelizeMetaWhereUniqueInput
  }

  /**
   * SequelizeMeta findFirst
   */
  export type SequelizeMetaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SequelizeMeta
     */
    select?: SequelizeMetaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SequelizeMeta
     */
    omit?: SequelizeMetaOmit<ExtArgs> | null
    /**
     * Filter, which SequelizeMeta to fetch.
     */
    where?: SequelizeMetaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SequelizeMetas to fetch.
     */
    orderBy?: SequelizeMetaOrderByWithRelationInput | SequelizeMetaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SequelizeMetas.
     */
    cursor?: SequelizeMetaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SequelizeMetas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SequelizeMetas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SequelizeMetas.
     */
    distinct?: SequelizeMetaScalarFieldEnum | SequelizeMetaScalarFieldEnum[]
  }

  /**
   * SequelizeMeta findFirstOrThrow
   */
  export type SequelizeMetaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SequelizeMeta
     */
    select?: SequelizeMetaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SequelizeMeta
     */
    omit?: SequelizeMetaOmit<ExtArgs> | null
    /**
     * Filter, which SequelizeMeta to fetch.
     */
    where?: SequelizeMetaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SequelizeMetas to fetch.
     */
    orderBy?: SequelizeMetaOrderByWithRelationInput | SequelizeMetaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SequelizeMetas.
     */
    cursor?: SequelizeMetaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SequelizeMetas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SequelizeMetas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SequelizeMetas.
     */
    distinct?: SequelizeMetaScalarFieldEnum | SequelizeMetaScalarFieldEnum[]
  }

  /**
   * SequelizeMeta findMany
   */
  export type SequelizeMetaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SequelizeMeta
     */
    select?: SequelizeMetaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SequelizeMeta
     */
    omit?: SequelizeMetaOmit<ExtArgs> | null
    /**
     * Filter, which SequelizeMetas to fetch.
     */
    where?: SequelizeMetaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SequelizeMetas to fetch.
     */
    orderBy?: SequelizeMetaOrderByWithRelationInput | SequelizeMetaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing SequelizeMetas.
     */
    cursor?: SequelizeMetaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SequelizeMetas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SequelizeMetas.
     */
    skip?: number
    distinct?: SequelizeMetaScalarFieldEnum | SequelizeMetaScalarFieldEnum[]
  }

  /**
   * SequelizeMeta create
   */
  export type SequelizeMetaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SequelizeMeta
     */
    select?: SequelizeMetaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SequelizeMeta
     */
    omit?: SequelizeMetaOmit<ExtArgs> | null
    /**
     * The data needed to create a SequelizeMeta.
     */
    data: XOR<SequelizeMetaCreateInput, SequelizeMetaUncheckedCreateInput>
  }

  /**
   * SequelizeMeta createMany
   */
  export type SequelizeMetaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many SequelizeMetas.
     */
    data: SequelizeMetaCreateManyInput | SequelizeMetaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * SequelizeMeta createManyAndReturn
   */
  export type SequelizeMetaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SequelizeMeta
     */
    select?: SequelizeMetaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the SequelizeMeta
     */
    omit?: SequelizeMetaOmit<ExtArgs> | null
    /**
     * The data used to create many SequelizeMetas.
     */
    data: SequelizeMetaCreateManyInput | SequelizeMetaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * SequelizeMeta update
   */
  export type SequelizeMetaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SequelizeMeta
     */
    select?: SequelizeMetaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SequelizeMeta
     */
    omit?: SequelizeMetaOmit<ExtArgs> | null
    /**
     * The data needed to update a SequelizeMeta.
     */
    data: XOR<SequelizeMetaUpdateInput, SequelizeMetaUncheckedUpdateInput>
    /**
     * Choose, which SequelizeMeta to update.
     */
    where: SequelizeMetaWhereUniqueInput
  }

  /**
   * SequelizeMeta updateMany
   */
  export type SequelizeMetaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update SequelizeMetas.
     */
    data: XOR<SequelizeMetaUpdateManyMutationInput, SequelizeMetaUncheckedUpdateManyInput>
    /**
     * Filter which SequelizeMetas to update
     */
    where?: SequelizeMetaWhereInput
    /**
     * Limit how many SequelizeMetas to update.
     */
    limit?: number
  }

  /**
   * SequelizeMeta updateManyAndReturn
   */
  export type SequelizeMetaUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SequelizeMeta
     */
    select?: SequelizeMetaSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the SequelizeMeta
     */
    omit?: SequelizeMetaOmit<ExtArgs> | null
    /**
     * The data used to update SequelizeMetas.
     */
    data: XOR<SequelizeMetaUpdateManyMutationInput, SequelizeMetaUncheckedUpdateManyInput>
    /**
     * Filter which SequelizeMetas to update
     */
    where?: SequelizeMetaWhereInput
    /**
     * Limit how many SequelizeMetas to update.
     */
    limit?: number
  }

  /**
   * SequelizeMeta upsert
   */
  export type SequelizeMetaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SequelizeMeta
     */
    select?: SequelizeMetaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SequelizeMeta
     */
    omit?: SequelizeMetaOmit<ExtArgs> | null
    /**
     * The filter to search for the SequelizeMeta to update in case it exists.
     */
    where: SequelizeMetaWhereUniqueInput
    /**
     * In case the SequelizeMeta found by the `where` argument doesn't exist, create a new SequelizeMeta with this data.
     */
    create: XOR<SequelizeMetaCreateInput, SequelizeMetaUncheckedCreateInput>
    /**
     * In case the SequelizeMeta was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SequelizeMetaUpdateInput, SequelizeMetaUncheckedUpdateInput>
  }

  /**
   * SequelizeMeta delete
   */
  export type SequelizeMetaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SequelizeMeta
     */
    select?: SequelizeMetaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SequelizeMeta
     */
    omit?: SequelizeMetaOmit<ExtArgs> | null
    /**
     * Filter which SequelizeMeta to delete.
     */
    where: SequelizeMetaWhereUniqueInput
  }

  /**
   * SequelizeMeta deleteMany
   */
  export type SequelizeMetaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SequelizeMetas to delete
     */
    where?: SequelizeMetaWhereInput
    /**
     * Limit how many SequelizeMetas to delete.
     */
    limit?: number
  }

  /**
   * SequelizeMeta without action
   */
  export type SequelizeMetaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SequelizeMeta
     */
    select?: SequelizeMetaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SequelizeMeta
     */
    omit?: SequelizeMetaOmit<ExtArgs> | null
  }


  /**
   * Model BcrConfigs
   */

  export type AggregateBcrConfigs = {
    _count: BcrConfigsCountAggregateOutputType | null
    _avg: BcrConfigsAvgAggregateOutputType | null
    _sum: BcrConfigsSumAggregateOutputType | null
    _min: BcrConfigsMinAggregateOutputType | null
    _max: BcrConfigsMaxAggregateOutputType | null
  }

  export type BcrConfigsAvgAggregateOutputType = {
    displayOrder: number | null
  }

  export type BcrConfigsSumAggregateOutputType = {
    displayOrder: number | null
  }

  export type BcrConfigsMinAggregateOutputType = {
    id: string | null
    type: string | null
    name: string | null
    value: string | null
    displayOrder: number | null
    description: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type BcrConfigsMaxAggregateOutputType = {
    id: string | null
    type: string | null
    name: string | null
    value: string | null
    displayOrder: number | null
    description: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type BcrConfigsCountAggregateOutputType = {
    id: number
    type: number
    name: number
    value: number
    displayOrder: number
    description: number
    metadata: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type BcrConfigsAvgAggregateInputType = {
    displayOrder?: true
  }

  export type BcrConfigsSumAggregateInputType = {
    displayOrder?: true
  }

  export type BcrConfigsMinAggregateInputType = {
    id?: true
    type?: true
    name?: true
    value?: true
    displayOrder?: true
    description?: true
    createdAt?: true
    updatedAt?: true
  }

  export type BcrConfigsMaxAggregateInputType = {
    id?: true
    type?: true
    name?: true
    value?: true
    displayOrder?: true
    description?: true
    createdAt?: true
    updatedAt?: true
  }

  export type BcrConfigsCountAggregateInputType = {
    id?: true
    type?: true
    name?: true
    value?: true
    displayOrder?: true
    description?: true
    metadata?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type BcrConfigsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which BcrConfigs to aggregate.
     */
    where?: BcrConfigsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BcrConfigs to fetch.
     */
    orderBy?: BcrConfigsOrderByWithRelationInput | BcrConfigsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: BcrConfigsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BcrConfigs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BcrConfigs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned BcrConfigs
    **/
    _count?: true | BcrConfigsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: BcrConfigsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: BcrConfigsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: BcrConfigsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: BcrConfigsMaxAggregateInputType
  }

  export type GetBcrConfigsAggregateType<T extends BcrConfigsAggregateArgs> = {
        [P in keyof T & keyof AggregateBcrConfigs]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateBcrConfigs[P]>
      : GetScalarType<T[P], AggregateBcrConfigs[P]>
  }




  export type BcrConfigsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BcrConfigsWhereInput
    orderBy?: BcrConfigsOrderByWithAggregationInput | BcrConfigsOrderByWithAggregationInput[]
    by: BcrConfigsScalarFieldEnum[] | BcrConfigsScalarFieldEnum
    having?: BcrConfigsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: BcrConfigsCountAggregateInputType | true
    _avg?: BcrConfigsAvgAggregateInputType
    _sum?: BcrConfigsSumAggregateInputType
    _min?: BcrConfigsMinAggregateInputType
    _max?: BcrConfigsMaxAggregateInputType
  }

  export type BcrConfigsGroupByOutputType = {
    id: string
    type: string
    name: string
    value: string
    displayOrder: number | null
    description: string | null
    metadata: JsonValue | null
    createdAt: Date
    updatedAt: Date
    _count: BcrConfigsCountAggregateOutputType | null
    _avg: BcrConfigsAvgAggregateOutputType | null
    _sum: BcrConfigsSumAggregateOutputType | null
    _min: BcrConfigsMinAggregateOutputType | null
    _max: BcrConfigsMaxAggregateOutputType | null
  }

  type GetBcrConfigsGroupByPayload<T extends BcrConfigsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<BcrConfigsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof BcrConfigsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], BcrConfigsGroupByOutputType[P]>
            : GetScalarType<T[P], BcrConfigsGroupByOutputType[P]>
        }
      >
    >


  export type BcrConfigsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    type?: boolean
    name?: boolean
    value?: boolean
    displayOrder?: boolean
    description?: boolean
    metadata?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["bcrConfigs"]>

  export type BcrConfigsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    type?: boolean
    name?: boolean
    value?: boolean
    displayOrder?: boolean
    description?: boolean
    metadata?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["bcrConfigs"]>

  export type BcrConfigsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    type?: boolean
    name?: boolean
    value?: boolean
    displayOrder?: boolean
    description?: boolean
    metadata?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["bcrConfigs"]>

  export type BcrConfigsSelectScalar = {
    id?: boolean
    type?: boolean
    name?: boolean
    value?: boolean
    displayOrder?: boolean
    description?: boolean
    metadata?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type BcrConfigsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "type" | "name" | "value" | "displayOrder" | "description" | "metadata" | "createdAt" | "updatedAt", ExtArgs["result"]["bcrConfigs"]>

  export type $BcrConfigsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "BcrConfigs"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: string
      type: string
      name: string
      value: string
      displayOrder: number | null
      description: string | null
      metadata: Prisma.JsonValue | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["bcrConfigs"]>
    composites: {}
  }

  type BcrConfigsGetPayload<S extends boolean | null | undefined | BcrConfigsDefaultArgs> = $Result.GetResult<Prisma.$BcrConfigsPayload, S>

  type BcrConfigsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<BcrConfigsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: BcrConfigsCountAggregateInputType | true
    }

  export interface BcrConfigsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['BcrConfigs'], meta: { name: 'BcrConfigs' } }
    /**
     * Find zero or one BcrConfigs that matches the filter.
     * @param {BcrConfigsFindUniqueArgs} args - Arguments to find a BcrConfigs
     * @example
     * // Get one BcrConfigs
     * const bcrConfigs = await prisma.bcrConfigs.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends BcrConfigsFindUniqueArgs>(args: SelectSubset<T, BcrConfigsFindUniqueArgs<ExtArgs>>): Prisma__BcrConfigsClient<$Result.GetResult<Prisma.$BcrConfigsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one BcrConfigs that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {BcrConfigsFindUniqueOrThrowArgs} args - Arguments to find a BcrConfigs
     * @example
     * // Get one BcrConfigs
     * const bcrConfigs = await prisma.bcrConfigs.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends BcrConfigsFindUniqueOrThrowArgs>(args: SelectSubset<T, BcrConfigsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__BcrConfigsClient<$Result.GetResult<Prisma.$BcrConfigsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first BcrConfigs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BcrConfigsFindFirstArgs} args - Arguments to find a BcrConfigs
     * @example
     * // Get one BcrConfigs
     * const bcrConfigs = await prisma.bcrConfigs.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends BcrConfigsFindFirstArgs>(args?: SelectSubset<T, BcrConfigsFindFirstArgs<ExtArgs>>): Prisma__BcrConfigsClient<$Result.GetResult<Prisma.$BcrConfigsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first BcrConfigs that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BcrConfigsFindFirstOrThrowArgs} args - Arguments to find a BcrConfigs
     * @example
     * // Get one BcrConfigs
     * const bcrConfigs = await prisma.bcrConfigs.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends BcrConfigsFindFirstOrThrowArgs>(args?: SelectSubset<T, BcrConfigsFindFirstOrThrowArgs<ExtArgs>>): Prisma__BcrConfigsClient<$Result.GetResult<Prisma.$BcrConfigsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more BcrConfigs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BcrConfigsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all BcrConfigs
     * const bcrConfigs = await prisma.bcrConfigs.findMany()
     * 
     * // Get first 10 BcrConfigs
     * const bcrConfigs = await prisma.bcrConfigs.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const bcrConfigsWithIdOnly = await prisma.bcrConfigs.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends BcrConfigsFindManyArgs>(args?: SelectSubset<T, BcrConfigsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BcrConfigsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a BcrConfigs.
     * @param {BcrConfigsCreateArgs} args - Arguments to create a BcrConfigs.
     * @example
     * // Create one BcrConfigs
     * const BcrConfigs = await prisma.bcrConfigs.create({
     *   data: {
     *     // ... data to create a BcrConfigs
     *   }
     * })
     * 
     */
    create<T extends BcrConfigsCreateArgs>(args: SelectSubset<T, BcrConfigsCreateArgs<ExtArgs>>): Prisma__BcrConfigsClient<$Result.GetResult<Prisma.$BcrConfigsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many BcrConfigs.
     * @param {BcrConfigsCreateManyArgs} args - Arguments to create many BcrConfigs.
     * @example
     * // Create many BcrConfigs
     * const bcrConfigs = await prisma.bcrConfigs.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends BcrConfigsCreateManyArgs>(args?: SelectSubset<T, BcrConfigsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many BcrConfigs and returns the data saved in the database.
     * @param {BcrConfigsCreateManyAndReturnArgs} args - Arguments to create many BcrConfigs.
     * @example
     * // Create many BcrConfigs
     * const bcrConfigs = await prisma.bcrConfigs.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many BcrConfigs and only return the `id`
     * const bcrConfigsWithIdOnly = await prisma.bcrConfigs.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends BcrConfigsCreateManyAndReturnArgs>(args?: SelectSubset<T, BcrConfigsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BcrConfigsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a BcrConfigs.
     * @param {BcrConfigsDeleteArgs} args - Arguments to delete one BcrConfigs.
     * @example
     * // Delete one BcrConfigs
     * const BcrConfigs = await prisma.bcrConfigs.delete({
     *   where: {
     *     // ... filter to delete one BcrConfigs
     *   }
     * })
     * 
     */
    delete<T extends BcrConfigsDeleteArgs>(args: SelectSubset<T, BcrConfigsDeleteArgs<ExtArgs>>): Prisma__BcrConfigsClient<$Result.GetResult<Prisma.$BcrConfigsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one BcrConfigs.
     * @param {BcrConfigsUpdateArgs} args - Arguments to update one BcrConfigs.
     * @example
     * // Update one BcrConfigs
     * const bcrConfigs = await prisma.bcrConfigs.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends BcrConfigsUpdateArgs>(args: SelectSubset<T, BcrConfigsUpdateArgs<ExtArgs>>): Prisma__BcrConfigsClient<$Result.GetResult<Prisma.$BcrConfigsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more BcrConfigs.
     * @param {BcrConfigsDeleteManyArgs} args - Arguments to filter BcrConfigs to delete.
     * @example
     * // Delete a few BcrConfigs
     * const { count } = await prisma.bcrConfigs.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends BcrConfigsDeleteManyArgs>(args?: SelectSubset<T, BcrConfigsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more BcrConfigs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BcrConfigsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many BcrConfigs
     * const bcrConfigs = await prisma.bcrConfigs.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends BcrConfigsUpdateManyArgs>(args: SelectSubset<T, BcrConfigsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more BcrConfigs and returns the data updated in the database.
     * @param {BcrConfigsUpdateManyAndReturnArgs} args - Arguments to update many BcrConfigs.
     * @example
     * // Update many BcrConfigs
     * const bcrConfigs = await prisma.bcrConfigs.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more BcrConfigs and only return the `id`
     * const bcrConfigsWithIdOnly = await prisma.bcrConfigs.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends BcrConfigsUpdateManyAndReturnArgs>(args: SelectSubset<T, BcrConfigsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BcrConfigsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one BcrConfigs.
     * @param {BcrConfigsUpsertArgs} args - Arguments to update or create a BcrConfigs.
     * @example
     * // Update or create a BcrConfigs
     * const bcrConfigs = await prisma.bcrConfigs.upsert({
     *   create: {
     *     // ... data to create a BcrConfigs
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the BcrConfigs we want to update
     *   }
     * })
     */
    upsert<T extends BcrConfigsUpsertArgs>(args: SelectSubset<T, BcrConfigsUpsertArgs<ExtArgs>>): Prisma__BcrConfigsClient<$Result.GetResult<Prisma.$BcrConfigsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of BcrConfigs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BcrConfigsCountArgs} args - Arguments to filter BcrConfigs to count.
     * @example
     * // Count the number of BcrConfigs
     * const count = await prisma.bcrConfigs.count({
     *   where: {
     *     // ... the filter for the BcrConfigs we want to count
     *   }
     * })
    **/
    count<T extends BcrConfigsCountArgs>(
      args?: Subset<T, BcrConfigsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], BcrConfigsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a BcrConfigs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BcrConfigsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends BcrConfigsAggregateArgs>(args: Subset<T, BcrConfigsAggregateArgs>): Prisma.PrismaPromise<GetBcrConfigsAggregateType<T>>

    /**
     * Group by BcrConfigs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BcrConfigsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends BcrConfigsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: BcrConfigsGroupByArgs['orderBy'] }
        : { orderBy?: BcrConfigsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, BcrConfigsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetBcrConfigsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the BcrConfigs model
   */
  readonly fields: BcrConfigsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for BcrConfigs.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__BcrConfigsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the BcrConfigs model
   */
  interface BcrConfigsFieldRefs {
    readonly id: FieldRef<"BcrConfigs", 'String'>
    readonly type: FieldRef<"BcrConfigs", 'String'>
    readonly name: FieldRef<"BcrConfigs", 'String'>
    readonly value: FieldRef<"BcrConfigs", 'String'>
    readonly displayOrder: FieldRef<"BcrConfigs", 'Int'>
    readonly description: FieldRef<"BcrConfigs", 'String'>
    readonly metadata: FieldRef<"BcrConfigs", 'Json'>
    readonly createdAt: FieldRef<"BcrConfigs", 'DateTime'>
    readonly updatedAt: FieldRef<"BcrConfigs", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * BcrConfigs findUnique
   */
  export type BcrConfigsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BcrConfigs
     */
    select?: BcrConfigsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BcrConfigs
     */
    omit?: BcrConfigsOmit<ExtArgs> | null
    /**
     * Filter, which BcrConfigs to fetch.
     */
    where: BcrConfigsWhereUniqueInput
  }

  /**
   * BcrConfigs findUniqueOrThrow
   */
  export type BcrConfigsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BcrConfigs
     */
    select?: BcrConfigsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BcrConfigs
     */
    omit?: BcrConfigsOmit<ExtArgs> | null
    /**
     * Filter, which BcrConfigs to fetch.
     */
    where: BcrConfigsWhereUniqueInput
  }

  /**
   * BcrConfigs findFirst
   */
  export type BcrConfigsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BcrConfigs
     */
    select?: BcrConfigsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BcrConfigs
     */
    omit?: BcrConfigsOmit<ExtArgs> | null
    /**
     * Filter, which BcrConfigs to fetch.
     */
    where?: BcrConfigsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BcrConfigs to fetch.
     */
    orderBy?: BcrConfigsOrderByWithRelationInput | BcrConfigsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for BcrConfigs.
     */
    cursor?: BcrConfigsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BcrConfigs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BcrConfigs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of BcrConfigs.
     */
    distinct?: BcrConfigsScalarFieldEnum | BcrConfigsScalarFieldEnum[]
  }

  /**
   * BcrConfigs findFirstOrThrow
   */
  export type BcrConfigsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BcrConfigs
     */
    select?: BcrConfigsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BcrConfigs
     */
    omit?: BcrConfigsOmit<ExtArgs> | null
    /**
     * Filter, which BcrConfigs to fetch.
     */
    where?: BcrConfigsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BcrConfigs to fetch.
     */
    orderBy?: BcrConfigsOrderByWithRelationInput | BcrConfigsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for BcrConfigs.
     */
    cursor?: BcrConfigsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BcrConfigs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BcrConfigs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of BcrConfigs.
     */
    distinct?: BcrConfigsScalarFieldEnum | BcrConfigsScalarFieldEnum[]
  }

  /**
   * BcrConfigs findMany
   */
  export type BcrConfigsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BcrConfigs
     */
    select?: BcrConfigsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BcrConfigs
     */
    omit?: BcrConfigsOmit<ExtArgs> | null
    /**
     * Filter, which BcrConfigs to fetch.
     */
    where?: BcrConfigsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BcrConfigs to fetch.
     */
    orderBy?: BcrConfigsOrderByWithRelationInput | BcrConfigsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing BcrConfigs.
     */
    cursor?: BcrConfigsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BcrConfigs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BcrConfigs.
     */
    skip?: number
    distinct?: BcrConfigsScalarFieldEnum | BcrConfigsScalarFieldEnum[]
  }

  /**
   * BcrConfigs create
   */
  export type BcrConfigsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BcrConfigs
     */
    select?: BcrConfigsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BcrConfigs
     */
    omit?: BcrConfigsOmit<ExtArgs> | null
    /**
     * The data needed to create a BcrConfigs.
     */
    data: XOR<BcrConfigsCreateInput, BcrConfigsUncheckedCreateInput>
  }

  /**
   * BcrConfigs createMany
   */
  export type BcrConfigsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many BcrConfigs.
     */
    data: BcrConfigsCreateManyInput | BcrConfigsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * BcrConfigs createManyAndReturn
   */
  export type BcrConfigsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BcrConfigs
     */
    select?: BcrConfigsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the BcrConfigs
     */
    omit?: BcrConfigsOmit<ExtArgs> | null
    /**
     * The data used to create many BcrConfigs.
     */
    data: BcrConfigsCreateManyInput | BcrConfigsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * BcrConfigs update
   */
  export type BcrConfigsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BcrConfigs
     */
    select?: BcrConfigsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BcrConfigs
     */
    omit?: BcrConfigsOmit<ExtArgs> | null
    /**
     * The data needed to update a BcrConfigs.
     */
    data: XOR<BcrConfigsUpdateInput, BcrConfigsUncheckedUpdateInput>
    /**
     * Choose, which BcrConfigs to update.
     */
    where: BcrConfigsWhereUniqueInput
  }

  /**
   * BcrConfigs updateMany
   */
  export type BcrConfigsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update BcrConfigs.
     */
    data: XOR<BcrConfigsUpdateManyMutationInput, BcrConfigsUncheckedUpdateManyInput>
    /**
     * Filter which BcrConfigs to update
     */
    where?: BcrConfigsWhereInput
    /**
     * Limit how many BcrConfigs to update.
     */
    limit?: number
  }

  /**
   * BcrConfigs updateManyAndReturn
   */
  export type BcrConfigsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BcrConfigs
     */
    select?: BcrConfigsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the BcrConfigs
     */
    omit?: BcrConfigsOmit<ExtArgs> | null
    /**
     * The data used to update BcrConfigs.
     */
    data: XOR<BcrConfigsUpdateManyMutationInput, BcrConfigsUncheckedUpdateManyInput>
    /**
     * Filter which BcrConfigs to update
     */
    where?: BcrConfigsWhereInput
    /**
     * Limit how many BcrConfigs to update.
     */
    limit?: number
  }

  /**
   * BcrConfigs upsert
   */
  export type BcrConfigsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BcrConfigs
     */
    select?: BcrConfigsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BcrConfigs
     */
    omit?: BcrConfigsOmit<ExtArgs> | null
    /**
     * The filter to search for the BcrConfigs to update in case it exists.
     */
    where: BcrConfigsWhereUniqueInput
    /**
     * In case the BcrConfigs found by the `where` argument doesn't exist, create a new BcrConfigs with this data.
     */
    create: XOR<BcrConfigsCreateInput, BcrConfigsUncheckedCreateInput>
    /**
     * In case the BcrConfigs was found with the provided `where` argument, update it with this data.
     */
    update: XOR<BcrConfigsUpdateInput, BcrConfigsUncheckedUpdateInput>
  }

  /**
   * BcrConfigs delete
   */
  export type BcrConfigsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BcrConfigs
     */
    select?: BcrConfigsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BcrConfigs
     */
    omit?: BcrConfigsOmit<ExtArgs> | null
    /**
     * Filter which BcrConfigs to delete.
     */
    where: BcrConfigsWhereUniqueInput
  }

  /**
   * BcrConfigs deleteMany
   */
  export type BcrConfigsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which BcrConfigs to delete
     */
    where?: BcrConfigsWhereInput
    /**
     * Limit how many BcrConfigs to delete.
     */
    limit?: number
  }

  /**
   * BcrConfigs without action
   */
  export type BcrConfigsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BcrConfigs
     */
    select?: BcrConfigsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BcrConfigs
     */
    omit?: BcrConfigsOmit<ExtArgs> | null
  }


  /**
   * Model Users
   */

  export type AggregateUsers = {
    _count: UsersCountAggregateOutputType | null
    _min: UsersMinAggregateOutputType | null
    _max: UsersMaxAggregateOutputType | null
  }

  export type UsersMinAggregateOutputType = {
    id: string | null
    email: string | null
    password: string | null
    name: string | null
    role: $Enums.enum_Users_role | null
    active: boolean | null
    lastLogin: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type UsersMaxAggregateOutputType = {
    id: string | null
    email: string | null
    password: string | null
    name: string | null
    role: $Enums.enum_Users_role | null
    active: boolean | null
    lastLogin: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type UsersCountAggregateOutputType = {
    id: number
    email: number
    password: number
    name: number
    role: number
    active: number
    lastLogin: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type UsersMinAggregateInputType = {
    id?: true
    email?: true
    password?: true
    name?: true
    role?: true
    active?: true
    lastLogin?: true
    createdAt?: true
    updatedAt?: true
  }

  export type UsersMaxAggregateInputType = {
    id?: true
    email?: true
    password?: true
    name?: true
    role?: true
    active?: true
    lastLogin?: true
    createdAt?: true
    updatedAt?: true
  }

  export type UsersCountAggregateInputType = {
    id?: true
    email?: true
    password?: true
    name?: true
    role?: true
    active?: true
    lastLogin?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type UsersAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Users to aggregate.
     */
    where?: UsersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UsersOrderByWithRelationInput | UsersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UsersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Users
    **/
    _count?: true | UsersCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UsersMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UsersMaxAggregateInputType
  }

  export type GetUsersAggregateType<T extends UsersAggregateArgs> = {
        [P in keyof T & keyof AggregateUsers]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUsers[P]>
      : GetScalarType<T[P], AggregateUsers[P]>
  }




  export type UsersGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UsersWhereInput
    orderBy?: UsersOrderByWithAggregationInput | UsersOrderByWithAggregationInput[]
    by: UsersScalarFieldEnum[] | UsersScalarFieldEnum
    having?: UsersScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UsersCountAggregateInputType | true
    _min?: UsersMinAggregateInputType
    _max?: UsersMaxAggregateInputType
  }

  export type UsersGroupByOutputType = {
    id: string
    email: string
    password: string
    name: string
    role: $Enums.enum_Users_role
    active: boolean
    lastLogin: Date | null
    createdAt: Date
    updatedAt: Date
    _count: UsersCountAggregateOutputType | null
    _min: UsersMinAggregateOutputType | null
    _max: UsersMaxAggregateOutputType | null
  }

  type GetUsersGroupByPayload<T extends UsersGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UsersGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UsersGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UsersGroupByOutputType[P]>
            : GetScalarType<T[P], UsersGroupByOutputType[P]>
        }
      >
    >


  export type UsersSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    password?: boolean
    name?: boolean
    role?: boolean
    active?: boolean
    lastLogin?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    Bcrs_Bcrs_assignedToToUsers?: boolean | Users$Bcrs_Bcrs_assignedToToUsersArgs<ExtArgs>
    Bcrs_Bcrs_requestedByToUsers?: boolean | Users$Bcrs_Bcrs_requestedByToUsersArgs<ExtArgs>
    Fundings_Fundings_createdByToUsers?: boolean | Users$Fundings_Fundings_createdByToUsersArgs<ExtArgs>
    Fundings_Fundings_lastUpdatedByToUsers?: boolean | Users$Fundings_Fundings_lastUpdatedByToUsersArgs<ExtArgs>
    FundingRequirements_createdBy?: boolean | Users$FundingRequirements_createdByArgs<ExtArgs>
    FundingRequirements_lastUpdatedBy?: boolean | Users$FundingRequirements_lastUpdatedByArgs<ExtArgs>
    FundingHistories_createdBy?: boolean | Users$FundingHistories_createdByArgs<ExtArgs>
    ReferenceData_ReferenceData_createdByToUsers?: boolean | Users$ReferenceData_ReferenceData_createdByToUsersArgs<ExtArgs>
    ReferenceData_ReferenceData_lastUpdatedByToUsers?: boolean | Users$ReferenceData_ReferenceData_lastUpdatedByToUsersArgs<ExtArgs>
    ReleaseNotes_ReleaseNotes_approvedByToUsers?: boolean | Users$ReleaseNotes_ReleaseNotes_approvedByToUsersArgs<ExtArgs>
    ReleaseNotes_ReleaseNotes_createdByToUsers?: boolean | Users$ReleaseNotes_ReleaseNotes_createdByToUsersArgs<ExtArgs>
    _count?: boolean | UsersCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["users"]>

  export type UsersSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    password?: boolean
    name?: boolean
    role?: boolean
    active?: boolean
    lastLogin?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["users"]>

  export type UsersSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    password?: boolean
    name?: boolean
    role?: boolean
    active?: boolean
    lastLogin?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["users"]>

  export type UsersSelectScalar = {
    id?: boolean
    email?: boolean
    password?: boolean
    name?: boolean
    role?: boolean
    active?: boolean
    lastLogin?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type UsersOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "email" | "password" | "name" | "role" | "active" | "lastLogin" | "createdAt" | "updatedAt", ExtArgs["result"]["users"]>
  export type UsersInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Bcrs_Bcrs_assignedToToUsers?: boolean | Users$Bcrs_Bcrs_assignedToToUsersArgs<ExtArgs>
    Bcrs_Bcrs_requestedByToUsers?: boolean | Users$Bcrs_Bcrs_requestedByToUsersArgs<ExtArgs>
    Fundings_Fundings_createdByToUsers?: boolean | Users$Fundings_Fundings_createdByToUsersArgs<ExtArgs>
    Fundings_Fundings_lastUpdatedByToUsers?: boolean | Users$Fundings_Fundings_lastUpdatedByToUsersArgs<ExtArgs>
    FundingRequirements_createdBy?: boolean | Users$FundingRequirements_createdByArgs<ExtArgs>
    FundingRequirements_lastUpdatedBy?: boolean | Users$FundingRequirements_lastUpdatedByArgs<ExtArgs>
    FundingHistories_createdBy?: boolean | Users$FundingHistories_createdByArgs<ExtArgs>
    ReferenceData_ReferenceData_createdByToUsers?: boolean | Users$ReferenceData_ReferenceData_createdByToUsersArgs<ExtArgs>
    ReferenceData_ReferenceData_lastUpdatedByToUsers?: boolean | Users$ReferenceData_ReferenceData_lastUpdatedByToUsersArgs<ExtArgs>
    ReleaseNotes_ReleaseNotes_approvedByToUsers?: boolean | Users$ReleaseNotes_ReleaseNotes_approvedByToUsersArgs<ExtArgs>
    ReleaseNotes_ReleaseNotes_createdByToUsers?: boolean | Users$ReleaseNotes_ReleaseNotes_createdByToUsersArgs<ExtArgs>
    _count?: boolean | UsersCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type UsersIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type UsersIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $UsersPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Users"
    objects: {
      Bcrs_Bcrs_assignedToToUsers: Prisma.$BcrsPayload<ExtArgs>[]
      Bcrs_Bcrs_requestedByToUsers: Prisma.$BcrsPayload<ExtArgs>[]
      Fundings_Fundings_createdByToUsers: Prisma.$FundingsPayload<ExtArgs>[]
      Fundings_Fundings_lastUpdatedByToUsers: Prisma.$FundingsPayload<ExtArgs>[]
      FundingRequirements_createdBy: Prisma.$FundingRequirementsPayload<ExtArgs>[]
      FundingRequirements_lastUpdatedBy: Prisma.$FundingRequirementsPayload<ExtArgs>[]
      FundingHistories_createdBy: Prisma.$FundingHistoriesPayload<ExtArgs>[]
      ReferenceData_ReferenceData_createdByToUsers: Prisma.$ReferenceDataPayload<ExtArgs>[]
      ReferenceData_ReferenceData_lastUpdatedByToUsers: Prisma.$ReferenceDataPayload<ExtArgs>[]
      ReleaseNotes_ReleaseNotes_approvedByToUsers: Prisma.$ReleaseNotesPayload<ExtArgs>[]
      ReleaseNotes_ReleaseNotes_createdByToUsers: Prisma.$ReleaseNotesPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      email: string
      password: string
      name: string
      role: $Enums.enum_Users_role
      active: boolean
      lastLogin: Date | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["users"]>
    composites: {}
  }

  type UsersGetPayload<S extends boolean | null | undefined | UsersDefaultArgs> = $Result.GetResult<Prisma.$UsersPayload, S>

  type UsersCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UsersFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UsersCountAggregateInputType | true
    }

  export interface UsersDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Users'], meta: { name: 'Users' } }
    /**
     * Find zero or one Users that matches the filter.
     * @param {UsersFindUniqueArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UsersFindUniqueArgs>(args: SelectSubset<T, UsersFindUniqueArgs<ExtArgs>>): Prisma__UsersClient<$Result.GetResult<Prisma.$UsersPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Users that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UsersFindUniqueOrThrowArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UsersFindUniqueOrThrowArgs>(args: SelectSubset<T, UsersFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UsersClient<$Result.GetResult<Prisma.$UsersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsersFindFirstArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UsersFindFirstArgs>(args?: SelectSubset<T, UsersFindFirstArgs<ExtArgs>>): Prisma__UsersClient<$Result.GetResult<Prisma.$UsersPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Users that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsersFindFirstOrThrowArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UsersFindFirstOrThrowArgs>(args?: SelectSubset<T, UsersFindFirstOrThrowArgs<ExtArgs>>): Prisma__UsersClient<$Result.GetResult<Prisma.$UsersPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsersFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.users.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.users.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const usersWithIdOnly = await prisma.users.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UsersFindManyArgs>(args?: SelectSubset<T, UsersFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsersPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Users.
     * @param {UsersCreateArgs} args - Arguments to create a Users.
     * @example
     * // Create one Users
     * const Users = await prisma.users.create({
     *   data: {
     *     // ... data to create a Users
     *   }
     * })
     * 
     */
    create<T extends UsersCreateArgs>(args: SelectSubset<T, UsersCreateArgs<ExtArgs>>): Prisma__UsersClient<$Result.GetResult<Prisma.$UsersPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Users.
     * @param {UsersCreateManyArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const users = await prisma.users.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UsersCreateManyArgs>(args?: SelectSubset<T, UsersCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Users and returns the data saved in the database.
     * @param {UsersCreateManyAndReturnArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const users = await prisma.users.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Users and only return the `id`
     * const usersWithIdOnly = await prisma.users.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UsersCreateManyAndReturnArgs>(args?: SelectSubset<T, UsersCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsersPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Users.
     * @param {UsersDeleteArgs} args - Arguments to delete one Users.
     * @example
     * // Delete one Users
     * const Users = await prisma.users.delete({
     *   where: {
     *     // ... filter to delete one Users
     *   }
     * })
     * 
     */
    delete<T extends UsersDeleteArgs>(args: SelectSubset<T, UsersDeleteArgs<ExtArgs>>): Prisma__UsersClient<$Result.GetResult<Prisma.$UsersPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Users.
     * @param {UsersUpdateArgs} args - Arguments to update one Users.
     * @example
     * // Update one Users
     * const users = await prisma.users.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UsersUpdateArgs>(args: SelectSubset<T, UsersUpdateArgs<ExtArgs>>): Prisma__UsersClient<$Result.GetResult<Prisma.$UsersPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Users.
     * @param {UsersDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.users.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UsersDeleteManyArgs>(args?: SelectSubset<T, UsersDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsersUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const users = await prisma.users.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UsersUpdateManyArgs>(args: SelectSubset<T, UsersUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users and returns the data updated in the database.
     * @param {UsersUpdateManyAndReturnArgs} args - Arguments to update many Users.
     * @example
     * // Update many Users
     * const users = await prisma.users.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Users and only return the `id`
     * const usersWithIdOnly = await prisma.users.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends UsersUpdateManyAndReturnArgs>(args: SelectSubset<T, UsersUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsersPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Users.
     * @param {UsersUpsertArgs} args - Arguments to update or create a Users.
     * @example
     * // Update or create a Users
     * const users = await prisma.users.upsert({
     *   create: {
     *     // ... data to create a Users
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Users we want to update
     *   }
     * })
     */
    upsert<T extends UsersUpsertArgs>(args: SelectSubset<T, UsersUpsertArgs<ExtArgs>>): Prisma__UsersClient<$Result.GetResult<Prisma.$UsersPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsersCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.users.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends UsersCountArgs>(
      args?: Subset<T, UsersCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UsersCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsersAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UsersAggregateArgs>(args: Subset<T, UsersAggregateArgs>): Prisma.PrismaPromise<GetUsersAggregateType<T>>

    /**
     * Group by Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsersGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UsersGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UsersGroupByArgs['orderBy'] }
        : { orderBy?: UsersGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UsersGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUsersGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Users model
   */
  readonly fields: UsersFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Users.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UsersClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Bcrs_Bcrs_assignedToToUsers<T extends Users$Bcrs_Bcrs_assignedToToUsersArgs<ExtArgs> = {}>(args?: Subset<T, Users$Bcrs_Bcrs_assignedToToUsersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BcrsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Bcrs_Bcrs_requestedByToUsers<T extends Users$Bcrs_Bcrs_requestedByToUsersArgs<ExtArgs> = {}>(args?: Subset<T, Users$Bcrs_Bcrs_requestedByToUsersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BcrsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Fundings_Fundings_createdByToUsers<T extends Users$Fundings_Fundings_createdByToUsersArgs<ExtArgs> = {}>(args?: Subset<T, Users$Fundings_Fundings_createdByToUsersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FundingsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Fundings_Fundings_lastUpdatedByToUsers<T extends Users$Fundings_Fundings_lastUpdatedByToUsersArgs<ExtArgs> = {}>(args?: Subset<T, Users$Fundings_Fundings_lastUpdatedByToUsersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FundingsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    FundingRequirements_createdBy<T extends Users$FundingRequirements_createdByArgs<ExtArgs> = {}>(args?: Subset<T, Users$FundingRequirements_createdByArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FundingRequirementsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    FundingRequirements_lastUpdatedBy<T extends Users$FundingRequirements_lastUpdatedByArgs<ExtArgs> = {}>(args?: Subset<T, Users$FundingRequirements_lastUpdatedByArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FundingRequirementsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    FundingHistories_createdBy<T extends Users$FundingHistories_createdByArgs<ExtArgs> = {}>(args?: Subset<T, Users$FundingHistories_createdByArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FundingHistoriesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    ReferenceData_ReferenceData_createdByToUsers<T extends Users$ReferenceData_ReferenceData_createdByToUsersArgs<ExtArgs> = {}>(args?: Subset<T, Users$ReferenceData_ReferenceData_createdByToUsersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReferenceDataPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    ReferenceData_ReferenceData_lastUpdatedByToUsers<T extends Users$ReferenceData_ReferenceData_lastUpdatedByToUsersArgs<ExtArgs> = {}>(args?: Subset<T, Users$ReferenceData_ReferenceData_lastUpdatedByToUsersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReferenceDataPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    ReleaseNotes_ReleaseNotes_approvedByToUsers<T extends Users$ReleaseNotes_ReleaseNotes_approvedByToUsersArgs<ExtArgs> = {}>(args?: Subset<T, Users$ReleaseNotes_ReleaseNotes_approvedByToUsersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReleaseNotesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    ReleaseNotes_ReleaseNotes_createdByToUsers<T extends Users$ReleaseNotes_ReleaseNotes_createdByToUsersArgs<ExtArgs> = {}>(args?: Subset<T, Users$ReleaseNotes_ReleaseNotes_createdByToUsersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReleaseNotesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Users model
   */
  interface UsersFieldRefs {
    readonly id: FieldRef<"Users", 'String'>
    readonly email: FieldRef<"Users", 'String'>
    readonly password: FieldRef<"Users", 'String'>
    readonly name: FieldRef<"Users", 'String'>
    readonly role: FieldRef<"Users", 'enum_Users_role'>
    readonly active: FieldRef<"Users", 'Boolean'>
    readonly lastLogin: FieldRef<"Users", 'DateTime'>
    readonly createdAt: FieldRef<"Users", 'DateTime'>
    readonly updatedAt: FieldRef<"Users", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Users findUnique
   */
  export type UsersFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Users
     */
    select?: UsersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Users
     */
    omit?: UsersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsersInclude<ExtArgs> | null
    /**
     * Filter, which Users to fetch.
     */
    where: UsersWhereUniqueInput
  }

  /**
   * Users findUniqueOrThrow
   */
  export type UsersFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Users
     */
    select?: UsersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Users
     */
    omit?: UsersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsersInclude<ExtArgs> | null
    /**
     * Filter, which Users to fetch.
     */
    where: UsersWhereUniqueInput
  }

  /**
   * Users findFirst
   */
  export type UsersFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Users
     */
    select?: UsersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Users
     */
    omit?: UsersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsersInclude<ExtArgs> | null
    /**
     * Filter, which Users to fetch.
     */
    where?: UsersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UsersOrderByWithRelationInput | UsersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UsersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UsersScalarFieldEnum | UsersScalarFieldEnum[]
  }

  /**
   * Users findFirstOrThrow
   */
  export type UsersFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Users
     */
    select?: UsersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Users
     */
    omit?: UsersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsersInclude<ExtArgs> | null
    /**
     * Filter, which Users to fetch.
     */
    where?: UsersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UsersOrderByWithRelationInput | UsersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UsersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UsersScalarFieldEnum | UsersScalarFieldEnum[]
  }

  /**
   * Users findMany
   */
  export type UsersFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Users
     */
    select?: UsersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Users
     */
    omit?: UsersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsersInclude<ExtArgs> | null
    /**
     * Filter, which Users to fetch.
     */
    where?: UsersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UsersOrderByWithRelationInput | UsersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Users.
     */
    cursor?: UsersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    distinct?: UsersScalarFieldEnum | UsersScalarFieldEnum[]
  }

  /**
   * Users create
   */
  export type UsersCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Users
     */
    select?: UsersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Users
     */
    omit?: UsersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsersInclude<ExtArgs> | null
    /**
     * The data needed to create a Users.
     */
    data: XOR<UsersCreateInput, UsersUncheckedCreateInput>
  }

  /**
   * Users createMany
   */
  export type UsersCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Users.
     */
    data: UsersCreateManyInput | UsersCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Users createManyAndReturn
   */
  export type UsersCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Users
     */
    select?: UsersSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Users
     */
    omit?: UsersOmit<ExtArgs> | null
    /**
     * The data used to create many Users.
     */
    data: UsersCreateManyInput | UsersCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Users update
   */
  export type UsersUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Users
     */
    select?: UsersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Users
     */
    omit?: UsersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsersInclude<ExtArgs> | null
    /**
     * The data needed to update a Users.
     */
    data: XOR<UsersUpdateInput, UsersUncheckedUpdateInput>
    /**
     * Choose, which Users to update.
     */
    where: UsersWhereUniqueInput
  }

  /**
   * Users updateMany
   */
  export type UsersUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Users.
     */
    data: XOR<UsersUpdateManyMutationInput, UsersUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UsersWhereInput
    /**
     * Limit how many Users to update.
     */
    limit?: number
  }

  /**
   * Users updateManyAndReturn
   */
  export type UsersUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Users
     */
    select?: UsersSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Users
     */
    omit?: UsersOmit<ExtArgs> | null
    /**
     * The data used to update Users.
     */
    data: XOR<UsersUpdateManyMutationInput, UsersUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UsersWhereInput
    /**
     * Limit how many Users to update.
     */
    limit?: number
  }

  /**
   * Users upsert
   */
  export type UsersUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Users
     */
    select?: UsersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Users
     */
    omit?: UsersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsersInclude<ExtArgs> | null
    /**
     * The filter to search for the Users to update in case it exists.
     */
    where: UsersWhereUniqueInput
    /**
     * In case the Users found by the `where` argument doesn't exist, create a new Users with this data.
     */
    create: XOR<UsersCreateInput, UsersUncheckedCreateInput>
    /**
     * In case the Users was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UsersUpdateInput, UsersUncheckedUpdateInput>
  }

  /**
   * Users delete
   */
  export type UsersDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Users
     */
    select?: UsersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Users
     */
    omit?: UsersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsersInclude<ExtArgs> | null
    /**
     * Filter which Users to delete.
     */
    where: UsersWhereUniqueInput
  }

  /**
   * Users deleteMany
   */
  export type UsersDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Users to delete
     */
    where?: UsersWhereInput
    /**
     * Limit how many Users to delete.
     */
    limit?: number
  }

  /**
   * Users.Bcrs_Bcrs_assignedToToUsers
   */
  export type Users$Bcrs_Bcrs_assignedToToUsersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Bcrs
     */
    select?: BcrsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Bcrs
     */
    omit?: BcrsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BcrsInclude<ExtArgs> | null
    where?: BcrsWhereInput
    orderBy?: BcrsOrderByWithRelationInput | BcrsOrderByWithRelationInput[]
    cursor?: BcrsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: BcrsScalarFieldEnum | BcrsScalarFieldEnum[]
  }

  /**
   * Users.Bcrs_Bcrs_requestedByToUsers
   */
  export type Users$Bcrs_Bcrs_requestedByToUsersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Bcrs
     */
    select?: BcrsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Bcrs
     */
    omit?: BcrsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BcrsInclude<ExtArgs> | null
    where?: BcrsWhereInput
    orderBy?: BcrsOrderByWithRelationInput | BcrsOrderByWithRelationInput[]
    cursor?: BcrsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: BcrsScalarFieldEnum | BcrsScalarFieldEnum[]
  }

  /**
   * Users.Fundings_Fundings_createdByToUsers
   */
  export type Users$Fundings_Fundings_createdByToUsersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Fundings
     */
    select?: FundingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Fundings
     */
    omit?: FundingsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FundingsInclude<ExtArgs> | null
    where?: FundingsWhereInput
    orderBy?: FundingsOrderByWithRelationInput | FundingsOrderByWithRelationInput[]
    cursor?: FundingsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FundingsScalarFieldEnum | FundingsScalarFieldEnum[]
  }

  /**
   * Users.Fundings_Fundings_lastUpdatedByToUsers
   */
  export type Users$Fundings_Fundings_lastUpdatedByToUsersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Fundings
     */
    select?: FundingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Fundings
     */
    omit?: FundingsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FundingsInclude<ExtArgs> | null
    where?: FundingsWhereInput
    orderBy?: FundingsOrderByWithRelationInput | FundingsOrderByWithRelationInput[]
    cursor?: FundingsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FundingsScalarFieldEnum | FundingsScalarFieldEnum[]
  }

  /**
   * Users.FundingRequirements_createdBy
   */
  export type Users$FundingRequirements_createdByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FundingRequirements
     */
    select?: FundingRequirementsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FundingRequirements
     */
    omit?: FundingRequirementsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FundingRequirementsInclude<ExtArgs> | null
    where?: FundingRequirementsWhereInput
    orderBy?: FundingRequirementsOrderByWithRelationInput | FundingRequirementsOrderByWithRelationInput[]
    cursor?: FundingRequirementsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FundingRequirementsScalarFieldEnum | FundingRequirementsScalarFieldEnum[]
  }

  /**
   * Users.FundingRequirements_lastUpdatedBy
   */
  export type Users$FundingRequirements_lastUpdatedByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FundingRequirements
     */
    select?: FundingRequirementsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FundingRequirements
     */
    omit?: FundingRequirementsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FundingRequirementsInclude<ExtArgs> | null
    where?: FundingRequirementsWhereInput
    orderBy?: FundingRequirementsOrderByWithRelationInput | FundingRequirementsOrderByWithRelationInput[]
    cursor?: FundingRequirementsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FundingRequirementsScalarFieldEnum | FundingRequirementsScalarFieldEnum[]
  }

  /**
   * Users.FundingHistories_createdBy
   */
  export type Users$FundingHistories_createdByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FundingHistories
     */
    select?: FundingHistoriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FundingHistories
     */
    omit?: FundingHistoriesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FundingHistoriesInclude<ExtArgs> | null
    where?: FundingHistoriesWhereInput
    orderBy?: FundingHistoriesOrderByWithRelationInput | FundingHistoriesOrderByWithRelationInput[]
    cursor?: FundingHistoriesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FundingHistoriesScalarFieldEnum | FundingHistoriesScalarFieldEnum[]
  }

  /**
   * Users.ReferenceData_ReferenceData_createdByToUsers
   */
  export type Users$ReferenceData_ReferenceData_createdByToUsersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReferenceData
     */
    select?: ReferenceDataSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReferenceData
     */
    omit?: ReferenceDataOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReferenceDataInclude<ExtArgs> | null
    where?: ReferenceDataWhereInput
    orderBy?: ReferenceDataOrderByWithRelationInput | ReferenceDataOrderByWithRelationInput[]
    cursor?: ReferenceDataWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReferenceDataScalarFieldEnum | ReferenceDataScalarFieldEnum[]
  }

  /**
   * Users.ReferenceData_ReferenceData_lastUpdatedByToUsers
   */
  export type Users$ReferenceData_ReferenceData_lastUpdatedByToUsersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReferenceData
     */
    select?: ReferenceDataSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReferenceData
     */
    omit?: ReferenceDataOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReferenceDataInclude<ExtArgs> | null
    where?: ReferenceDataWhereInput
    orderBy?: ReferenceDataOrderByWithRelationInput | ReferenceDataOrderByWithRelationInput[]
    cursor?: ReferenceDataWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReferenceDataScalarFieldEnum | ReferenceDataScalarFieldEnum[]
  }

  /**
   * Users.ReleaseNotes_ReleaseNotes_approvedByToUsers
   */
  export type Users$ReleaseNotes_ReleaseNotes_approvedByToUsersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReleaseNotes
     */
    select?: ReleaseNotesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReleaseNotes
     */
    omit?: ReleaseNotesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReleaseNotesInclude<ExtArgs> | null
    where?: ReleaseNotesWhereInput
    orderBy?: ReleaseNotesOrderByWithRelationInput | ReleaseNotesOrderByWithRelationInput[]
    cursor?: ReleaseNotesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReleaseNotesScalarFieldEnum | ReleaseNotesScalarFieldEnum[]
  }

  /**
   * Users.ReleaseNotes_ReleaseNotes_createdByToUsers
   */
  export type Users$ReleaseNotes_ReleaseNotes_createdByToUsersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReleaseNotes
     */
    select?: ReleaseNotesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReleaseNotes
     */
    omit?: ReleaseNotesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReleaseNotesInclude<ExtArgs> | null
    where?: ReleaseNotesWhereInput
    orderBy?: ReleaseNotesOrderByWithRelationInput | ReleaseNotesOrderByWithRelationInput[]
    cursor?: ReleaseNotesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReleaseNotesScalarFieldEnum | ReleaseNotesScalarFieldEnum[]
  }

  /**
   * Users without action
   */
  export type UsersDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Users
     */
    select?: UsersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Users
     */
    omit?: UsersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsersInclude<ExtArgs> | null
  }


  /**
   * Model Session
   */

  export type AggregateSession = {
    _count: SessionCountAggregateOutputType | null
    _min: SessionMinAggregateOutputType | null
    _max: SessionMaxAggregateOutputType | null
  }

  export type SessionMinAggregateOutputType = {
    id: string | null
    sid: string | null
    data: string | null
    expiresAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type SessionMaxAggregateOutputType = {
    id: string | null
    sid: string | null
    data: string | null
    expiresAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type SessionCountAggregateOutputType = {
    id: number
    sid: number
    data: number
    expiresAt: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type SessionMinAggregateInputType = {
    id?: true
    sid?: true
    data?: true
    expiresAt?: true
    createdAt?: true
    updatedAt?: true
  }

  export type SessionMaxAggregateInputType = {
    id?: true
    sid?: true
    data?: true
    expiresAt?: true
    createdAt?: true
    updatedAt?: true
  }

  export type SessionCountAggregateInputType = {
    id?: true
    sid?: true
    data?: true
    expiresAt?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type SessionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Session to aggregate.
     */
    where?: SessionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Sessions to fetch.
     */
    orderBy?: SessionOrderByWithRelationInput | SessionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SessionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Sessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Sessions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Sessions
    **/
    _count?: true | SessionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SessionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SessionMaxAggregateInputType
  }

  export type GetSessionAggregateType<T extends SessionAggregateArgs> = {
        [P in keyof T & keyof AggregateSession]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSession[P]>
      : GetScalarType<T[P], AggregateSession[P]>
  }




  export type SessionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SessionWhereInput
    orderBy?: SessionOrderByWithAggregationInput | SessionOrderByWithAggregationInput[]
    by: SessionScalarFieldEnum[] | SessionScalarFieldEnum
    having?: SessionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SessionCountAggregateInputType | true
    _min?: SessionMinAggregateInputType
    _max?: SessionMaxAggregateInputType
  }

  export type SessionGroupByOutputType = {
    id: string
    sid: string
    data: string
    expiresAt: Date
    createdAt: Date
    updatedAt: Date
    _count: SessionCountAggregateOutputType | null
    _min: SessionMinAggregateOutputType | null
    _max: SessionMaxAggregateOutputType | null
  }

  type GetSessionGroupByPayload<T extends SessionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SessionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SessionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SessionGroupByOutputType[P]>
            : GetScalarType<T[P], SessionGroupByOutputType[P]>
        }
      >
    >


  export type SessionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    sid?: boolean
    data?: boolean
    expiresAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["session"]>

  export type SessionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    sid?: boolean
    data?: boolean
    expiresAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["session"]>

  export type SessionSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    sid?: boolean
    data?: boolean
    expiresAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["session"]>

  export type SessionSelectScalar = {
    id?: boolean
    sid?: boolean
    data?: boolean
    expiresAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type SessionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "sid" | "data" | "expiresAt" | "createdAt" | "updatedAt", ExtArgs["result"]["session"]>

  export type $SessionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Session"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: string
      sid: string
      data: string
      expiresAt: Date
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["session"]>
    composites: {}
  }

  type SessionGetPayload<S extends boolean | null | undefined | SessionDefaultArgs> = $Result.GetResult<Prisma.$SessionPayload, S>

  type SessionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<SessionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SessionCountAggregateInputType | true
    }

  export interface SessionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Session'], meta: { name: 'Session' } }
    /**
     * Find zero or one Session that matches the filter.
     * @param {SessionFindUniqueArgs} args - Arguments to find a Session
     * @example
     * // Get one Session
     * const session = await prisma.session.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SessionFindUniqueArgs>(args: SelectSubset<T, SessionFindUniqueArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Session that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {SessionFindUniqueOrThrowArgs} args - Arguments to find a Session
     * @example
     * // Get one Session
     * const session = await prisma.session.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SessionFindUniqueOrThrowArgs>(args: SelectSubset<T, SessionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Session that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionFindFirstArgs} args - Arguments to find a Session
     * @example
     * // Get one Session
     * const session = await prisma.session.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SessionFindFirstArgs>(args?: SelectSubset<T, SessionFindFirstArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Session that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionFindFirstOrThrowArgs} args - Arguments to find a Session
     * @example
     * // Get one Session
     * const session = await prisma.session.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SessionFindFirstOrThrowArgs>(args?: SelectSubset<T, SessionFindFirstOrThrowArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Sessions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sessions
     * const sessions = await prisma.session.findMany()
     * 
     * // Get first 10 Sessions
     * const sessions = await prisma.session.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const sessionWithIdOnly = await prisma.session.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SessionFindManyArgs>(args?: SelectSubset<T, SessionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Session.
     * @param {SessionCreateArgs} args - Arguments to create a Session.
     * @example
     * // Create one Session
     * const Session = await prisma.session.create({
     *   data: {
     *     // ... data to create a Session
     *   }
     * })
     * 
     */
    create<T extends SessionCreateArgs>(args: SelectSubset<T, SessionCreateArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Sessions.
     * @param {SessionCreateManyArgs} args - Arguments to create many Sessions.
     * @example
     * // Create many Sessions
     * const session = await prisma.session.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SessionCreateManyArgs>(args?: SelectSubset<T, SessionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Sessions and returns the data saved in the database.
     * @param {SessionCreateManyAndReturnArgs} args - Arguments to create many Sessions.
     * @example
     * // Create many Sessions
     * const session = await prisma.session.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Sessions and only return the `id`
     * const sessionWithIdOnly = await prisma.session.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends SessionCreateManyAndReturnArgs>(args?: SelectSubset<T, SessionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Session.
     * @param {SessionDeleteArgs} args - Arguments to delete one Session.
     * @example
     * // Delete one Session
     * const Session = await prisma.session.delete({
     *   where: {
     *     // ... filter to delete one Session
     *   }
     * })
     * 
     */
    delete<T extends SessionDeleteArgs>(args: SelectSubset<T, SessionDeleteArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Session.
     * @param {SessionUpdateArgs} args - Arguments to update one Session.
     * @example
     * // Update one Session
     * const session = await prisma.session.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SessionUpdateArgs>(args: SelectSubset<T, SessionUpdateArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Sessions.
     * @param {SessionDeleteManyArgs} args - Arguments to filter Sessions to delete.
     * @example
     * // Delete a few Sessions
     * const { count } = await prisma.session.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SessionDeleteManyArgs>(args?: SelectSubset<T, SessionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sessions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sessions
     * const session = await prisma.session.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SessionUpdateManyArgs>(args: SelectSubset<T, SessionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sessions and returns the data updated in the database.
     * @param {SessionUpdateManyAndReturnArgs} args - Arguments to update many Sessions.
     * @example
     * // Update many Sessions
     * const session = await prisma.session.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Sessions and only return the `id`
     * const sessionWithIdOnly = await prisma.session.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends SessionUpdateManyAndReturnArgs>(args: SelectSubset<T, SessionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Session.
     * @param {SessionUpsertArgs} args - Arguments to update or create a Session.
     * @example
     * // Update or create a Session
     * const session = await prisma.session.upsert({
     *   create: {
     *     // ... data to create a Session
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Session we want to update
     *   }
     * })
     */
    upsert<T extends SessionUpsertArgs>(args: SelectSubset<T, SessionUpsertArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Sessions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionCountArgs} args - Arguments to filter Sessions to count.
     * @example
     * // Count the number of Sessions
     * const count = await prisma.session.count({
     *   where: {
     *     // ... the filter for the Sessions we want to count
     *   }
     * })
    **/
    count<T extends SessionCountArgs>(
      args?: Subset<T, SessionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SessionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Session.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SessionAggregateArgs>(args: Subset<T, SessionAggregateArgs>): Prisma.PrismaPromise<GetSessionAggregateType<T>>

    /**
     * Group by Session.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SessionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SessionGroupByArgs['orderBy'] }
        : { orderBy?: SessionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SessionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSessionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Session model
   */
  readonly fields: SessionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Session.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SessionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Session model
   */
  interface SessionFieldRefs {
    readonly id: FieldRef<"Session", 'String'>
    readonly sid: FieldRef<"Session", 'String'>
    readonly data: FieldRef<"Session", 'String'>
    readonly expiresAt: FieldRef<"Session", 'DateTime'>
    readonly createdAt: FieldRef<"Session", 'DateTime'>
    readonly updatedAt: FieldRef<"Session", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Session findUnique
   */
  export type SessionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Filter, which Session to fetch.
     */
    where: SessionWhereUniqueInput
  }

  /**
   * Session findUniqueOrThrow
   */
  export type SessionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Filter, which Session to fetch.
     */
    where: SessionWhereUniqueInput
  }

  /**
   * Session findFirst
   */
  export type SessionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Filter, which Session to fetch.
     */
    where?: SessionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Sessions to fetch.
     */
    orderBy?: SessionOrderByWithRelationInput | SessionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Sessions.
     */
    cursor?: SessionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Sessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Sessions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Sessions.
     */
    distinct?: SessionScalarFieldEnum | SessionScalarFieldEnum[]
  }

  /**
   * Session findFirstOrThrow
   */
  export type SessionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Filter, which Session to fetch.
     */
    where?: SessionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Sessions to fetch.
     */
    orderBy?: SessionOrderByWithRelationInput | SessionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Sessions.
     */
    cursor?: SessionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Sessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Sessions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Sessions.
     */
    distinct?: SessionScalarFieldEnum | SessionScalarFieldEnum[]
  }

  /**
   * Session findMany
   */
  export type SessionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Filter, which Sessions to fetch.
     */
    where?: SessionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Sessions to fetch.
     */
    orderBy?: SessionOrderByWithRelationInput | SessionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Sessions.
     */
    cursor?: SessionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Sessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Sessions.
     */
    skip?: number
    distinct?: SessionScalarFieldEnum | SessionScalarFieldEnum[]
  }

  /**
   * Session create
   */
  export type SessionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * The data needed to create a Session.
     */
    data: XOR<SessionCreateInput, SessionUncheckedCreateInput>
  }

  /**
   * Session createMany
   */
  export type SessionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Sessions.
     */
    data: SessionCreateManyInput | SessionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Session createManyAndReturn
   */
  export type SessionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * The data used to create many Sessions.
     */
    data: SessionCreateManyInput | SessionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Session update
   */
  export type SessionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * The data needed to update a Session.
     */
    data: XOR<SessionUpdateInput, SessionUncheckedUpdateInput>
    /**
     * Choose, which Session to update.
     */
    where: SessionWhereUniqueInput
  }

  /**
   * Session updateMany
   */
  export type SessionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Sessions.
     */
    data: XOR<SessionUpdateManyMutationInput, SessionUncheckedUpdateManyInput>
    /**
     * Filter which Sessions to update
     */
    where?: SessionWhereInput
    /**
     * Limit how many Sessions to update.
     */
    limit?: number
  }

  /**
   * Session updateManyAndReturn
   */
  export type SessionUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * The data used to update Sessions.
     */
    data: XOR<SessionUpdateManyMutationInput, SessionUncheckedUpdateManyInput>
    /**
     * Filter which Sessions to update
     */
    where?: SessionWhereInput
    /**
     * Limit how many Sessions to update.
     */
    limit?: number
  }

  /**
   * Session upsert
   */
  export type SessionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * The filter to search for the Session to update in case it exists.
     */
    where: SessionWhereUniqueInput
    /**
     * In case the Session found by the `where` argument doesn't exist, create a new Session with this data.
     */
    create: XOR<SessionCreateInput, SessionUncheckedCreateInput>
    /**
     * In case the Session was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SessionUpdateInput, SessionUncheckedUpdateInput>
  }

  /**
   * Session delete
   */
  export type SessionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Filter which Session to delete.
     */
    where: SessionWhereUniqueInput
  }

  /**
   * Session deleteMany
   */
  export type SessionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Sessions to delete
     */
    where?: SessionWhereInput
    /**
     * Limit how many Sessions to delete.
     */
    limit?: number
  }

  /**
   * Session without action
   */
  export type SessionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const BcrsScalarFieldEnum: {
    id: 'id',
    bcrNumber: 'bcrNumber',
    title: 'title',
    description: 'description',
    status: 'status',
    priority: 'priority',
    impact: 'impact',
    requestedBy: 'requestedBy',
    assignedTo: 'assignedTo',
    targetDate: 'targetDate',
    implementationDate: 'implementationDate',
    notes: 'notes',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type BcrsScalarFieldEnum = (typeof BcrsScalarFieldEnum)[keyof typeof BcrsScalarFieldEnum]


  export const FundingsScalarFieldEnum: {
    id: 'id',
    trainingRoute: 'trainingRoute',
    academicYear: 'academicYear',
    fundingAmount: 'fundingAmount',
    fundingType: 'fundingType',
    description: 'description',
    isActive: 'isActive',
    effectiveDate: 'effectiveDate',
    expiryDate: 'expiryDate',
    createdBy: 'createdBy',
    lastUpdatedBy: 'lastUpdatedBy',
    notes: 'notes',
    metadata: 'metadata',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type FundingsScalarFieldEnum = (typeof FundingsScalarFieldEnum)[keyof typeof FundingsScalarFieldEnum]


  export const FundingRequirementsScalarFieldEnum: {
    id: 'id',
    route: 'route',
    year: 'year',
    amount: 'amount',
    description: 'description',
    createdBy: 'createdBy',
    lastUpdatedBy: 'lastUpdatedBy',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type FundingRequirementsScalarFieldEnum = (typeof FundingRequirementsScalarFieldEnum)[keyof typeof FundingRequirementsScalarFieldEnum]


  export const FundingHistoriesScalarFieldEnum: {
    id: 'id',
    year: 'year',
    route: 'route',
    change: 'change',
    amount: 'amount',
    reason: 'reason',
    createdBy: 'createdBy',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type FundingHistoriesScalarFieldEnum = (typeof FundingHistoriesScalarFieldEnum)[keyof typeof FundingHistoriesScalarFieldEnum]


  export const ReferenceDataScalarFieldEnum: {
    id: 'id',
    name: 'name',
    code: 'code',
    category: 'category',
    description: 'description',
    isActive: 'isActive',
    validFrom: 'validFrom',
    validTo: 'validTo',
    createdBy: 'createdBy',
    lastUpdatedBy: 'lastUpdatedBy',
    version: 'version',
    metadata: 'metadata',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type ReferenceDataScalarFieldEnum = (typeof ReferenceDataScalarFieldEnum)[keyof typeof ReferenceDataScalarFieldEnum]


  export const ReleaseNotesScalarFieldEnum: {
    id: 'id',
    version: 'version',
    title: 'title',
    description: 'description',
    environment: 'environment',
    status: 'status',
    releaseDate: 'releaseDate',
    completedDate: 'completedDate',
    createdBy: 'createdBy',
    approvedBy: 'approvedBy',
    changeLog: 'changeLog',
    impactedSystems: 'impactedSystems',
    notes: 'notes',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type ReleaseNotesScalarFieldEnum = (typeof ReleaseNotesScalarFieldEnum)[keyof typeof ReleaseNotesScalarFieldEnum]


  export const SequelizeMetaScalarFieldEnum: {
    name: 'name'
  };

  export type SequelizeMetaScalarFieldEnum = (typeof SequelizeMetaScalarFieldEnum)[keyof typeof SequelizeMetaScalarFieldEnum]


  export const BcrConfigsScalarFieldEnum: {
    id: 'id',
    type: 'type',
    name: 'name',
    value: 'value',
    displayOrder: 'displayOrder',
    description: 'description',
    metadata: 'metadata',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type BcrConfigsScalarFieldEnum = (typeof BcrConfigsScalarFieldEnum)[keyof typeof BcrConfigsScalarFieldEnum]


  export const UsersScalarFieldEnum: {
    id: 'id',
    email: 'email',
    password: 'password',
    name: 'name',
    role: 'role',
    active: 'active',
    lastLogin: 'lastLogin',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type UsersScalarFieldEnum = (typeof UsersScalarFieldEnum)[keyof typeof UsersScalarFieldEnum]


  export const SessionScalarFieldEnum: {
    id: 'id',
    sid: 'sid',
    data: 'data',
    expiresAt: 'expiresAt',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type SessionScalarFieldEnum = (typeof SessionScalarFieldEnum)[keyof typeof SessionScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullableJsonNullValueInput: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull
  };

  export type NullableJsonNullValueInput = (typeof NullableJsonNullValueInput)[keyof typeof NullableJsonNullValueInput]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  export const JsonNullValueFilter: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull,
    AnyNull: typeof AnyNull
  };

  export type JsonNullValueFilter = (typeof JsonNullValueFilter)[keyof typeof JsonNullValueFilter]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'enum_Bcrs_status'
   */
  export type Enumenum_Bcrs_statusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'enum_Bcrs_status'>
    


  /**
   * Reference to a field of type 'enum_Bcrs_status[]'
   */
  export type ListEnumenum_Bcrs_statusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'enum_Bcrs_status[]'>
    


  /**
   * Reference to a field of type 'enum_Bcrs_priority'
   */
  export type Enumenum_Bcrs_priorityFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'enum_Bcrs_priority'>
    


  /**
   * Reference to a field of type 'enum_Bcrs_priority[]'
   */
  export type ListEnumenum_Bcrs_priorityFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'enum_Bcrs_priority[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'Decimal'
   */
  export type DecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal'>
    


  /**
   * Reference to a field of type 'Decimal[]'
   */
  export type ListDecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'Json'
   */
  export type JsonFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Json'>
    


  /**
   * Reference to a field of type 'QueryMode'
   */
  export type EnumQueryModeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'QueryMode'>
    


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'enum_ReleaseNotes_environment'
   */
  export type Enumenum_ReleaseNotes_environmentFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'enum_ReleaseNotes_environment'>
    


  /**
   * Reference to a field of type 'enum_ReleaseNotes_environment[]'
   */
  export type ListEnumenum_ReleaseNotes_environmentFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'enum_ReleaseNotes_environment[]'>
    


  /**
   * Reference to a field of type 'enum_ReleaseNotes_status'
   */
  export type Enumenum_ReleaseNotes_statusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'enum_ReleaseNotes_status'>
    


  /**
   * Reference to a field of type 'enum_ReleaseNotes_status[]'
   */
  export type ListEnumenum_ReleaseNotes_statusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'enum_ReleaseNotes_status[]'>
    


  /**
   * Reference to a field of type 'enum_Users_role'
   */
  export type Enumenum_Users_roleFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'enum_Users_role'>
    


  /**
   * Reference to a field of type 'enum_Users_role[]'
   */
  export type ListEnumenum_Users_roleFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'enum_Users_role[]'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    
  /**
   * Deep Input Types
   */


  export type BcrsWhereInput = {
    AND?: BcrsWhereInput | BcrsWhereInput[]
    OR?: BcrsWhereInput[]
    NOT?: BcrsWhereInput | BcrsWhereInput[]
    id?: UuidFilter<"Bcrs"> | string
    bcrNumber?: StringNullableFilter<"Bcrs"> | string | null
    title?: StringFilter<"Bcrs"> | string
    description?: StringFilter<"Bcrs"> | string
    status?: Enumenum_Bcrs_statusFilter<"Bcrs"> | $Enums.enum_Bcrs_status
    priority?: Enumenum_Bcrs_priorityFilter<"Bcrs"> | $Enums.enum_Bcrs_priority
    impact?: StringNullableFilter<"Bcrs"> | string | null
    requestedBy?: UuidFilter<"Bcrs"> | string
    assignedTo?: UuidNullableFilter<"Bcrs"> | string | null
    targetDate?: DateTimeNullableFilter<"Bcrs"> | Date | string | null
    implementationDate?: DateTimeNullableFilter<"Bcrs"> | Date | string | null
    notes?: StringNullableFilter<"Bcrs"> | string | null
    createdAt?: DateTimeFilter<"Bcrs"> | Date | string
    updatedAt?: DateTimeFilter<"Bcrs"> | Date | string
    Users_Bcrs_assignedToToUsers?: XOR<UsersNullableScalarRelationFilter, UsersWhereInput> | null
    Users_Bcrs_requestedByToUsers?: XOR<UsersScalarRelationFilter, UsersWhereInput>
  }

  export type BcrsOrderByWithRelationInput = {
    id?: SortOrder
    bcrNumber?: SortOrderInput | SortOrder
    title?: SortOrder
    description?: SortOrder
    status?: SortOrder
    priority?: SortOrder
    impact?: SortOrderInput | SortOrder
    requestedBy?: SortOrder
    assignedTo?: SortOrderInput | SortOrder
    targetDate?: SortOrderInput | SortOrder
    implementationDate?: SortOrderInput | SortOrder
    notes?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    Users_Bcrs_assignedToToUsers?: UsersOrderByWithRelationInput
    Users_Bcrs_requestedByToUsers?: UsersOrderByWithRelationInput
  }

  export type BcrsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    bcrNumber?: string
    AND?: BcrsWhereInput | BcrsWhereInput[]
    OR?: BcrsWhereInput[]
    NOT?: BcrsWhereInput | BcrsWhereInput[]
    title?: StringFilter<"Bcrs"> | string
    description?: StringFilter<"Bcrs"> | string
    status?: Enumenum_Bcrs_statusFilter<"Bcrs"> | $Enums.enum_Bcrs_status
    priority?: Enumenum_Bcrs_priorityFilter<"Bcrs"> | $Enums.enum_Bcrs_priority
    impact?: StringNullableFilter<"Bcrs"> | string | null
    requestedBy?: UuidFilter<"Bcrs"> | string
    assignedTo?: UuidNullableFilter<"Bcrs"> | string | null
    targetDate?: DateTimeNullableFilter<"Bcrs"> | Date | string | null
    implementationDate?: DateTimeNullableFilter<"Bcrs"> | Date | string | null
    notes?: StringNullableFilter<"Bcrs"> | string | null
    createdAt?: DateTimeFilter<"Bcrs"> | Date | string
    updatedAt?: DateTimeFilter<"Bcrs"> | Date | string
    Users_Bcrs_assignedToToUsers?: XOR<UsersNullableScalarRelationFilter, UsersWhereInput> | null
    Users_Bcrs_requestedByToUsers?: XOR<UsersScalarRelationFilter, UsersWhereInput>
  }, "id" | "bcrNumber">

  export type BcrsOrderByWithAggregationInput = {
    id?: SortOrder
    bcrNumber?: SortOrderInput | SortOrder
    title?: SortOrder
    description?: SortOrder
    status?: SortOrder
    priority?: SortOrder
    impact?: SortOrderInput | SortOrder
    requestedBy?: SortOrder
    assignedTo?: SortOrderInput | SortOrder
    targetDate?: SortOrderInput | SortOrder
    implementationDate?: SortOrderInput | SortOrder
    notes?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: BcrsCountOrderByAggregateInput
    _max?: BcrsMaxOrderByAggregateInput
    _min?: BcrsMinOrderByAggregateInput
  }

  export type BcrsScalarWhereWithAggregatesInput = {
    AND?: BcrsScalarWhereWithAggregatesInput | BcrsScalarWhereWithAggregatesInput[]
    OR?: BcrsScalarWhereWithAggregatesInput[]
    NOT?: BcrsScalarWhereWithAggregatesInput | BcrsScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"Bcrs"> | string
    bcrNumber?: StringNullableWithAggregatesFilter<"Bcrs"> | string | null
    title?: StringWithAggregatesFilter<"Bcrs"> | string
    description?: StringWithAggregatesFilter<"Bcrs"> | string
    status?: Enumenum_Bcrs_statusWithAggregatesFilter<"Bcrs"> | $Enums.enum_Bcrs_status
    priority?: Enumenum_Bcrs_priorityWithAggregatesFilter<"Bcrs"> | $Enums.enum_Bcrs_priority
    impact?: StringNullableWithAggregatesFilter<"Bcrs"> | string | null
    requestedBy?: UuidWithAggregatesFilter<"Bcrs"> | string
    assignedTo?: UuidNullableWithAggregatesFilter<"Bcrs"> | string | null
    targetDate?: DateTimeNullableWithAggregatesFilter<"Bcrs"> | Date | string | null
    implementationDate?: DateTimeNullableWithAggregatesFilter<"Bcrs"> | Date | string | null
    notes?: StringNullableWithAggregatesFilter<"Bcrs"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Bcrs"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Bcrs"> | Date | string
  }

  export type FundingsWhereInput = {
    AND?: FundingsWhereInput | FundingsWhereInput[]
    OR?: FundingsWhereInput[]
    NOT?: FundingsWhereInput | FundingsWhereInput[]
    id?: UuidFilter<"Fundings"> | string
    trainingRoute?: StringFilter<"Fundings"> | string
    academicYear?: StringFilter<"Fundings"> | string
    fundingAmount?: DecimalFilter<"Fundings"> | Decimal | DecimalJsLike | number | string
    fundingType?: StringFilter<"Fundings"> | string
    description?: StringNullableFilter<"Fundings"> | string | null
    isActive?: BoolFilter<"Fundings"> | boolean
    effectiveDate?: DateTimeFilter<"Fundings"> | Date | string
    expiryDate?: DateTimeNullableFilter<"Fundings"> | Date | string | null
    createdBy?: UuidFilter<"Fundings"> | string
    lastUpdatedBy?: UuidNullableFilter<"Fundings"> | string | null
    notes?: StringNullableFilter<"Fundings"> | string | null
    metadata?: JsonNullableFilter<"Fundings">
    createdAt?: DateTimeFilter<"Fundings"> | Date | string
    updatedAt?: DateTimeFilter<"Fundings"> | Date | string
    Users_Fundings_createdByToUsers?: XOR<UsersScalarRelationFilter, UsersWhereInput>
    Users_Fundings_lastUpdatedByToUsers?: XOR<UsersNullableScalarRelationFilter, UsersWhereInput> | null
  }

  export type FundingsOrderByWithRelationInput = {
    id?: SortOrder
    trainingRoute?: SortOrder
    academicYear?: SortOrder
    fundingAmount?: SortOrder
    fundingType?: SortOrder
    description?: SortOrderInput | SortOrder
    isActive?: SortOrder
    effectiveDate?: SortOrder
    expiryDate?: SortOrderInput | SortOrder
    createdBy?: SortOrder
    lastUpdatedBy?: SortOrderInput | SortOrder
    notes?: SortOrderInput | SortOrder
    metadata?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    Users_Fundings_createdByToUsers?: UsersOrderByWithRelationInput
    Users_Fundings_lastUpdatedByToUsers?: UsersOrderByWithRelationInput
  }

  export type FundingsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: FundingsWhereInput | FundingsWhereInput[]
    OR?: FundingsWhereInput[]
    NOT?: FundingsWhereInput | FundingsWhereInput[]
    trainingRoute?: StringFilter<"Fundings"> | string
    academicYear?: StringFilter<"Fundings"> | string
    fundingAmount?: DecimalFilter<"Fundings"> | Decimal | DecimalJsLike | number | string
    fundingType?: StringFilter<"Fundings"> | string
    description?: StringNullableFilter<"Fundings"> | string | null
    isActive?: BoolFilter<"Fundings"> | boolean
    effectiveDate?: DateTimeFilter<"Fundings"> | Date | string
    expiryDate?: DateTimeNullableFilter<"Fundings"> | Date | string | null
    createdBy?: UuidFilter<"Fundings"> | string
    lastUpdatedBy?: UuidNullableFilter<"Fundings"> | string | null
    notes?: StringNullableFilter<"Fundings"> | string | null
    metadata?: JsonNullableFilter<"Fundings">
    createdAt?: DateTimeFilter<"Fundings"> | Date | string
    updatedAt?: DateTimeFilter<"Fundings"> | Date | string
    Users_Fundings_createdByToUsers?: XOR<UsersScalarRelationFilter, UsersWhereInput>
    Users_Fundings_lastUpdatedByToUsers?: XOR<UsersNullableScalarRelationFilter, UsersWhereInput> | null
  }, "id">

  export type FundingsOrderByWithAggregationInput = {
    id?: SortOrder
    trainingRoute?: SortOrder
    academicYear?: SortOrder
    fundingAmount?: SortOrder
    fundingType?: SortOrder
    description?: SortOrderInput | SortOrder
    isActive?: SortOrder
    effectiveDate?: SortOrder
    expiryDate?: SortOrderInput | SortOrder
    createdBy?: SortOrder
    lastUpdatedBy?: SortOrderInput | SortOrder
    notes?: SortOrderInput | SortOrder
    metadata?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: FundingsCountOrderByAggregateInput
    _avg?: FundingsAvgOrderByAggregateInput
    _max?: FundingsMaxOrderByAggregateInput
    _min?: FundingsMinOrderByAggregateInput
    _sum?: FundingsSumOrderByAggregateInput
  }

  export type FundingsScalarWhereWithAggregatesInput = {
    AND?: FundingsScalarWhereWithAggregatesInput | FundingsScalarWhereWithAggregatesInput[]
    OR?: FundingsScalarWhereWithAggregatesInput[]
    NOT?: FundingsScalarWhereWithAggregatesInput | FundingsScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"Fundings"> | string
    trainingRoute?: StringWithAggregatesFilter<"Fundings"> | string
    academicYear?: StringWithAggregatesFilter<"Fundings"> | string
    fundingAmount?: DecimalWithAggregatesFilter<"Fundings"> | Decimal | DecimalJsLike | number | string
    fundingType?: StringWithAggregatesFilter<"Fundings"> | string
    description?: StringNullableWithAggregatesFilter<"Fundings"> | string | null
    isActive?: BoolWithAggregatesFilter<"Fundings"> | boolean
    effectiveDate?: DateTimeWithAggregatesFilter<"Fundings"> | Date | string
    expiryDate?: DateTimeNullableWithAggregatesFilter<"Fundings"> | Date | string | null
    createdBy?: UuidWithAggregatesFilter<"Fundings"> | string
    lastUpdatedBy?: UuidNullableWithAggregatesFilter<"Fundings"> | string | null
    notes?: StringNullableWithAggregatesFilter<"Fundings"> | string | null
    metadata?: JsonNullableWithAggregatesFilter<"Fundings">
    createdAt?: DateTimeWithAggregatesFilter<"Fundings"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Fundings"> | Date | string
  }

  export type FundingRequirementsWhereInput = {
    AND?: FundingRequirementsWhereInput | FundingRequirementsWhereInput[]
    OR?: FundingRequirementsWhereInput[]
    NOT?: FundingRequirementsWhereInput | FundingRequirementsWhereInput[]
    id?: UuidFilter<"FundingRequirements"> | string
    route?: StringFilter<"FundingRequirements"> | string
    year?: IntFilter<"FundingRequirements"> | number
    amount?: DecimalFilter<"FundingRequirements"> | Decimal | DecimalJsLike | number | string
    description?: StringNullableFilter<"FundingRequirements"> | string | null
    createdBy?: UuidFilter<"FundingRequirements"> | string
    lastUpdatedBy?: UuidNullableFilter<"FundingRequirements"> | string | null
    createdAt?: DateTimeFilter<"FundingRequirements"> | Date | string
    updatedAt?: DateTimeFilter<"FundingRequirements"> | Date | string
    creator?: XOR<UsersScalarRelationFilter, UsersWhereInput>
    updater?: XOR<UsersNullableScalarRelationFilter, UsersWhereInput> | null
  }

  export type FundingRequirementsOrderByWithRelationInput = {
    id?: SortOrder
    route?: SortOrder
    year?: SortOrder
    amount?: SortOrder
    description?: SortOrderInput | SortOrder
    createdBy?: SortOrder
    lastUpdatedBy?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    creator?: UsersOrderByWithRelationInput
    updater?: UsersOrderByWithRelationInput
  }

  export type FundingRequirementsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: FundingRequirementsWhereInput | FundingRequirementsWhereInput[]
    OR?: FundingRequirementsWhereInput[]
    NOT?: FundingRequirementsWhereInput | FundingRequirementsWhereInput[]
    route?: StringFilter<"FundingRequirements"> | string
    year?: IntFilter<"FundingRequirements"> | number
    amount?: DecimalFilter<"FundingRequirements"> | Decimal | DecimalJsLike | number | string
    description?: StringNullableFilter<"FundingRequirements"> | string | null
    createdBy?: UuidFilter<"FundingRequirements"> | string
    lastUpdatedBy?: UuidNullableFilter<"FundingRequirements"> | string | null
    createdAt?: DateTimeFilter<"FundingRequirements"> | Date | string
    updatedAt?: DateTimeFilter<"FundingRequirements"> | Date | string
    creator?: XOR<UsersScalarRelationFilter, UsersWhereInput>
    updater?: XOR<UsersNullableScalarRelationFilter, UsersWhereInput> | null
  }, "id">

  export type FundingRequirementsOrderByWithAggregationInput = {
    id?: SortOrder
    route?: SortOrder
    year?: SortOrder
    amount?: SortOrder
    description?: SortOrderInput | SortOrder
    createdBy?: SortOrder
    lastUpdatedBy?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: FundingRequirementsCountOrderByAggregateInput
    _avg?: FundingRequirementsAvgOrderByAggregateInput
    _max?: FundingRequirementsMaxOrderByAggregateInput
    _min?: FundingRequirementsMinOrderByAggregateInput
    _sum?: FundingRequirementsSumOrderByAggregateInput
  }

  export type FundingRequirementsScalarWhereWithAggregatesInput = {
    AND?: FundingRequirementsScalarWhereWithAggregatesInput | FundingRequirementsScalarWhereWithAggregatesInput[]
    OR?: FundingRequirementsScalarWhereWithAggregatesInput[]
    NOT?: FundingRequirementsScalarWhereWithAggregatesInput | FundingRequirementsScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"FundingRequirements"> | string
    route?: StringWithAggregatesFilter<"FundingRequirements"> | string
    year?: IntWithAggregatesFilter<"FundingRequirements"> | number
    amount?: DecimalWithAggregatesFilter<"FundingRequirements"> | Decimal | DecimalJsLike | number | string
    description?: StringNullableWithAggregatesFilter<"FundingRequirements"> | string | null
    createdBy?: UuidWithAggregatesFilter<"FundingRequirements"> | string
    lastUpdatedBy?: UuidNullableWithAggregatesFilter<"FundingRequirements"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"FundingRequirements"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"FundingRequirements"> | Date | string
  }

  export type FundingHistoriesWhereInput = {
    AND?: FundingHistoriesWhereInput | FundingHistoriesWhereInput[]
    OR?: FundingHistoriesWhereInput[]
    NOT?: FundingHistoriesWhereInput | FundingHistoriesWhereInput[]
    id?: UuidFilter<"FundingHistories"> | string
    year?: IntFilter<"FundingHistories"> | number
    route?: StringFilter<"FundingHistories"> | string
    change?: StringFilter<"FundingHistories"> | string
    amount?: DecimalFilter<"FundingHistories"> | Decimal | DecimalJsLike | number | string
    reason?: StringNullableFilter<"FundingHistories"> | string | null
    createdBy?: UuidFilter<"FundingHistories"> | string
    createdAt?: DateTimeFilter<"FundingHistories"> | Date | string
    updatedAt?: DateTimeFilter<"FundingHistories"> | Date | string
    creator?: XOR<UsersScalarRelationFilter, UsersWhereInput>
  }

  export type FundingHistoriesOrderByWithRelationInput = {
    id?: SortOrder
    year?: SortOrder
    route?: SortOrder
    change?: SortOrder
    amount?: SortOrder
    reason?: SortOrderInput | SortOrder
    createdBy?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    creator?: UsersOrderByWithRelationInput
  }

  export type FundingHistoriesWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: FundingHistoriesWhereInput | FundingHistoriesWhereInput[]
    OR?: FundingHistoriesWhereInput[]
    NOT?: FundingHistoriesWhereInput | FundingHistoriesWhereInput[]
    year?: IntFilter<"FundingHistories"> | number
    route?: StringFilter<"FundingHistories"> | string
    change?: StringFilter<"FundingHistories"> | string
    amount?: DecimalFilter<"FundingHistories"> | Decimal | DecimalJsLike | number | string
    reason?: StringNullableFilter<"FundingHistories"> | string | null
    createdBy?: UuidFilter<"FundingHistories"> | string
    createdAt?: DateTimeFilter<"FundingHistories"> | Date | string
    updatedAt?: DateTimeFilter<"FundingHistories"> | Date | string
    creator?: XOR<UsersScalarRelationFilter, UsersWhereInput>
  }, "id">

  export type FundingHistoriesOrderByWithAggregationInput = {
    id?: SortOrder
    year?: SortOrder
    route?: SortOrder
    change?: SortOrder
    amount?: SortOrder
    reason?: SortOrderInput | SortOrder
    createdBy?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: FundingHistoriesCountOrderByAggregateInput
    _avg?: FundingHistoriesAvgOrderByAggregateInput
    _max?: FundingHistoriesMaxOrderByAggregateInput
    _min?: FundingHistoriesMinOrderByAggregateInput
    _sum?: FundingHistoriesSumOrderByAggregateInput
  }

  export type FundingHistoriesScalarWhereWithAggregatesInput = {
    AND?: FundingHistoriesScalarWhereWithAggregatesInput | FundingHistoriesScalarWhereWithAggregatesInput[]
    OR?: FundingHistoriesScalarWhereWithAggregatesInput[]
    NOT?: FundingHistoriesScalarWhereWithAggregatesInput | FundingHistoriesScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"FundingHistories"> | string
    year?: IntWithAggregatesFilter<"FundingHistories"> | number
    route?: StringWithAggregatesFilter<"FundingHistories"> | string
    change?: StringWithAggregatesFilter<"FundingHistories"> | string
    amount?: DecimalWithAggregatesFilter<"FundingHistories"> | Decimal | DecimalJsLike | number | string
    reason?: StringNullableWithAggregatesFilter<"FundingHistories"> | string | null
    createdBy?: UuidWithAggregatesFilter<"FundingHistories"> | string
    createdAt?: DateTimeWithAggregatesFilter<"FundingHistories"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"FundingHistories"> | Date | string
  }

  export type ReferenceDataWhereInput = {
    AND?: ReferenceDataWhereInput | ReferenceDataWhereInput[]
    OR?: ReferenceDataWhereInput[]
    NOT?: ReferenceDataWhereInput | ReferenceDataWhereInput[]
    id?: UuidFilter<"ReferenceData"> | string
    name?: StringFilter<"ReferenceData"> | string
    code?: StringFilter<"ReferenceData"> | string
    category?: StringFilter<"ReferenceData"> | string
    description?: StringNullableFilter<"ReferenceData"> | string | null
    isActive?: BoolFilter<"ReferenceData"> | boolean
    validFrom?: DateTimeNullableFilter<"ReferenceData"> | Date | string | null
    validTo?: DateTimeNullableFilter<"ReferenceData"> | Date | string | null
    createdBy?: UuidFilter<"ReferenceData"> | string
    lastUpdatedBy?: UuidNullableFilter<"ReferenceData"> | string | null
    version?: IntFilter<"ReferenceData"> | number
    metadata?: JsonNullableFilter<"ReferenceData">
    createdAt?: DateTimeFilter<"ReferenceData"> | Date | string
    updatedAt?: DateTimeFilter<"ReferenceData"> | Date | string
    Users_ReferenceData_createdByToUsers?: XOR<UsersScalarRelationFilter, UsersWhereInput>
    Users_ReferenceData_lastUpdatedByToUsers?: XOR<UsersNullableScalarRelationFilter, UsersWhereInput> | null
  }

  export type ReferenceDataOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    code?: SortOrder
    category?: SortOrder
    description?: SortOrderInput | SortOrder
    isActive?: SortOrder
    validFrom?: SortOrderInput | SortOrder
    validTo?: SortOrderInput | SortOrder
    createdBy?: SortOrder
    lastUpdatedBy?: SortOrderInput | SortOrder
    version?: SortOrder
    metadata?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    Users_ReferenceData_createdByToUsers?: UsersOrderByWithRelationInput
    Users_ReferenceData_lastUpdatedByToUsers?: UsersOrderByWithRelationInput
  }

  export type ReferenceDataWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    code?: string
    AND?: ReferenceDataWhereInput | ReferenceDataWhereInput[]
    OR?: ReferenceDataWhereInput[]
    NOT?: ReferenceDataWhereInput | ReferenceDataWhereInput[]
    name?: StringFilter<"ReferenceData"> | string
    category?: StringFilter<"ReferenceData"> | string
    description?: StringNullableFilter<"ReferenceData"> | string | null
    isActive?: BoolFilter<"ReferenceData"> | boolean
    validFrom?: DateTimeNullableFilter<"ReferenceData"> | Date | string | null
    validTo?: DateTimeNullableFilter<"ReferenceData"> | Date | string | null
    createdBy?: UuidFilter<"ReferenceData"> | string
    lastUpdatedBy?: UuidNullableFilter<"ReferenceData"> | string | null
    version?: IntFilter<"ReferenceData"> | number
    metadata?: JsonNullableFilter<"ReferenceData">
    createdAt?: DateTimeFilter<"ReferenceData"> | Date | string
    updatedAt?: DateTimeFilter<"ReferenceData"> | Date | string
    Users_ReferenceData_createdByToUsers?: XOR<UsersScalarRelationFilter, UsersWhereInput>
    Users_ReferenceData_lastUpdatedByToUsers?: XOR<UsersNullableScalarRelationFilter, UsersWhereInput> | null
  }, "id" | "code">

  export type ReferenceDataOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    code?: SortOrder
    category?: SortOrder
    description?: SortOrderInput | SortOrder
    isActive?: SortOrder
    validFrom?: SortOrderInput | SortOrder
    validTo?: SortOrderInput | SortOrder
    createdBy?: SortOrder
    lastUpdatedBy?: SortOrderInput | SortOrder
    version?: SortOrder
    metadata?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: ReferenceDataCountOrderByAggregateInput
    _avg?: ReferenceDataAvgOrderByAggregateInput
    _max?: ReferenceDataMaxOrderByAggregateInput
    _min?: ReferenceDataMinOrderByAggregateInput
    _sum?: ReferenceDataSumOrderByAggregateInput
  }

  export type ReferenceDataScalarWhereWithAggregatesInput = {
    AND?: ReferenceDataScalarWhereWithAggregatesInput | ReferenceDataScalarWhereWithAggregatesInput[]
    OR?: ReferenceDataScalarWhereWithAggregatesInput[]
    NOT?: ReferenceDataScalarWhereWithAggregatesInput | ReferenceDataScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"ReferenceData"> | string
    name?: StringWithAggregatesFilter<"ReferenceData"> | string
    code?: StringWithAggregatesFilter<"ReferenceData"> | string
    category?: StringWithAggregatesFilter<"ReferenceData"> | string
    description?: StringNullableWithAggregatesFilter<"ReferenceData"> | string | null
    isActive?: BoolWithAggregatesFilter<"ReferenceData"> | boolean
    validFrom?: DateTimeNullableWithAggregatesFilter<"ReferenceData"> | Date | string | null
    validTo?: DateTimeNullableWithAggregatesFilter<"ReferenceData"> | Date | string | null
    createdBy?: UuidWithAggregatesFilter<"ReferenceData"> | string
    lastUpdatedBy?: UuidNullableWithAggregatesFilter<"ReferenceData"> | string | null
    version?: IntWithAggregatesFilter<"ReferenceData"> | number
    metadata?: JsonNullableWithAggregatesFilter<"ReferenceData">
    createdAt?: DateTimeWithAggregatesFilter<"ReferenceData"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"ReferenceData"> | Date | string
  }

  export type ReleaseNotesWhereInput = {
    AND?: ReleaseNotesWhereInput | ReleaseNotesWhereInput[]
    OR?: ReleaseNotesWhereInput[]
    NOT?: ReleaseNotesWhereInput | ReleaseNotesWhereInput[]
    id?: UuidFilter<"ReleaseNotes"> | string
    version?: StringFilter<"ReleaseNotes"> | string
    title?: StringFilter<"ReleaseNotes"> | string
    description?: StringFilter<"ReleaseNotes"> | string
    environment?: Enumenum_ReleaseNotes_environmentFilter<"ReleaseNotes"> | $Enums.enum_ReleaseNotes_environment
    status?: Enumenum_ReleaseNotes_statusFilter<"ReleaseNotes"> | $Enums.enum_ReleaseNotes_status
    releaseDate?: DateTimeFilter<"ReleaseNotes"> | Date | string
    completedDate?: DateTimeNullableFilter<"ReleaseNotes"> | Date | string | null
    createdBy?: UuidFilter<"ReleaseNotes"> | string
    approvedBy?: UuidNullableFilter<"ReleaseNotes"> | string | null
    changeLog?: StringNullableFilter<"ReleaseNotes"> | string | null
    impactedSystems?: StringNullableListFilter<"ReleaseNotes">
    notes?: StringNullableFilter<"ReleaseNotes"> | string | null
    createdAt?: DateTimeFilter<"ReleaseNotes"> | Date | string
    updatedAt?: DateTimeFilter<"ReleaseNotes"> | Date | string
    Users_ReleaseNotes_approvedByToUsers?: XOR<UsersNullableScalarRelationFilter, UsersWhereInput> | null
    Users_ReleaseNotes_createdByToUsers?: XOR<UsersScalarRelationFilter, UsersWhereInput>
  }

  export type ReleaseNotesOrderByWithRelationInput = {
    id?: SortOrder
    version?: SortOrder
    title?: SortOrder
    description?: SortOrder
    environment?: SortOrder
    status?: SortOrder
    releaseDate?: SortOrder
    completedDate?: SortOrderInput | SortOrder
    createdBy?: SortOrder
    approvedBy?: SortOrderInput | SortOrder
    changeLog?: SortOrderInput | SortOrder
    impactedSystems?: SortOrder
    notes?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    Users_ReleaseNotes_approvedByToUsers?: UsersOrderByWithRelationInput
    Users_ReleaseNotes_createdByToUsers?: UsersOrderByWithRelationInput
  }

  export type ReleaseNotesWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: ReleaseNotesWhereInput | ReleaseNotesWhereInput[]
    OR?: ReleaseNotesWhereInput[]
    NOT?: ReleaseNotesWhereInput | ReleaseNotesWhereInput[]
    version?: StringFilter<"ReleaseNotes"> | string
    title?: StringFilter<"ReleaseNotes"> | string
    description?: StringFilter<"ReleaseNotes"> | string
    environment?: Enumenum_ReleaseNotes_environmentFilter<"ReleaseNotes"> | $Enums.enum_ReleaseNotes_environment
    status?: Enumenum_ReleaseNotes_statusFilter<"ReleaseNotes"> | $Enums.enum_ReleaseNotes_status
    releaseDate?: DateTimeFilter<"ReleaseNotes"> | Date | string
    completedDate?: DateTimeNullableFilter<"ReleaseNotes"> | Date | string | null
    createdBy?: UuidFilter<"ReleaseNotes"> | string
    approvedBy?: UuidNullableFilter<"ReleaseNotes"> | string | null
    changeLog?: StringNullableFilter<"ReleaseNotes"> | string | null
    impactedSystems?: StringNullableListFilter<"ReleaseNotes">
    notes?: StringNullableFilter<"ReleaseNotes"> | string | null
    createdAt?: DateTimeFilter<"ReleaseNotes"> | Date | string
    updatedAt?: DateTimeFilter<"ReleaseNotes"> | Date | string
    Users_ReleaseNotes_approvedByToUsers?: XOR<UsersNullableScalarRelationFilter, UsersWhereInput> | null
    Users_ReleaseNotes_createdByToUsers?: XOR<UsersScalarRelationFilter, UsersWhereInput>
  }, "id">

  export type ReleaseNotesOrderByWithAggregationInput = {
    id?: SortOrder
    version?: SortOrder
    title?: SortOrder
    description?: SortOrder
    environment?: SortOrder
    status?: SortOrder
    releaseDate?: SortOrder
    completedDate?: SortOrderInput | SortOrder
    createdBy?: SortOrder
    approvedBy?: SortOrderInput | SortOrder
    changeLog?: SortOrderInput | SortOrder
    impactedSystems?: SortOrder
    notes?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: ReleaseNotesCountOrderByAggregateInput
    _max?: ReleaseNotesMaxOrderByAggregateInput
    _min?: ReleaseNotesMinOrderByAggregateInput
  }

  export type ReleaseNotesScalarWhereWithAggregatesInput = {
    AND?: ReleaseNotesScalarWhereWithAggregatesInput | ReleaseNotesScalarWhereWithAggregatesInput[]
    OR?: ReleaseNotesScalarWhereWithAggregatesInput[]
    NOT?: ReleaseNotesScalarWhereWithAggregatesInput | ReleaseNotesScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"ReleaseNotes"> | string
    version?: StringWithAggregatesFilter<"ReleaseNotes"> | string
    title?: StringWithAggregatesFilter<"ReleaseNotes"> | string
    description?: StringWithAggregatesFilter<"ReleaseNotes"> | string
    environment?: Enumenum_ReleaseNotes_environmentWithAggregatesFilter<"ReleaseNotes"> | $Enums.enum_ReleaseNotes_environment
    status?: Enumenum_ReleaseNotes_statusWithAggregatesFilter<"ReleaseNotes"> | $Enums.enum_ReleaseNotes_status
    releaseDate?: DateTimeWithAggregatesFilter<"ReleaseNotes"> | Date | string
    completedDate?: DateTimeNullableWithAggregatesFilter<"ReleaseNotes"> | Date | string | null
    createdBy?: UuidWithAggregatesFilter<"ReleaseNotes"> | string
    approvedBy?: UuidNullableWithAggregatesFilter<"ReleaseNotes"> | string | null
    changeLog?: StringNullableWithAggregatesFilter<"ReleaseNotes"> | string | null
    impactedSystems?: StringNullableListFilter<"ReleaseNotes">
    notes?: StringNullableWithAggregatesFilter<"ReleaseNotes"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"ReleaseNotes"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"ReleaseNotes"> | Date | string
  }

  export type SequelizeMetaWhereInput = {
    AND?: SequelizeMetaWhereInput | SequelizeMetaWhereInput[]
    OR?: SequelizeMetaWhereInput[]
    NOT?: SequelizeMetaWhereInput | SequelizeMetaWhereInput[]
    name?: StringFilter<"SequelizeMeta"> | string
  }

  export type SequelizeMetaOrderByWithRelationInput = {
    name?: SortOrder
  }

  export type SequelizeMetaWhereUniqueInput = Prisma.AtLeast<{
    name?: string
    AND?: SequelizeMetaWhereInput | SequelizeMetaWhereInput[]
    OR?: SequelizeMetaWhereInput[]
    NOT?: SequelizeMetaWhereInput | SequelizeMetaWhereInput[]
  }, "name">

  export type SequelizeMetaOrderByWithAggregationInput = {
    name?: SortOrder
    _count?: SequelizeMetaCountOrderByAggregateInput
    _max?: SequelizeMetaMaxOrderByAggregateInput
    _min?: SequelizeMetaMinOrderByAggregateInput
  }

  export type SequelizeMetaScalarWhereWithAggregatesInput = {
    AND?: SequelizeMetaScalarWhereWithAggregatesInput | SequelizeMetaScalarWhereWithAggregatesInput[]
    OR?: SequelizeMetaScalarWhereWithAggregatesInput[]
    NOT?: SequelizeMetaScalarWhereWithAggregatesInput | SequelizeMetaScalarWhereWithAggregatesInput[]
    name?: StringWithAggregatesFilter<"SequelizeMeta"> | string
  }

  export type BcrConfigsWhereInput = {
    AND?: BcrConfigsWhereInput | BcrConfigsWhereInput[]
    OR?: BcrConfigsWhereInput[]
    NOT?: BcrConfigsWhereInput | BcrConfigsWhereInput[]
    id?: UuidFilter<"BcrConfigs"> | string
    type?: StringFilter<"BcrConfigs"> | string
    name?: StringFilter<"BcrConfigs"> | string
    value?: StringFilter<"BcrConfigs"> | string
    displayOrder?: IntNullableFilter<"BcrConfigs"> | number | null
    description?: StringNullableFilter<"BcrConfigs"> | string | null
    metadata?: JsonNullableFilter<"BcrConfigs">
    createdAt?: DateTimeFilter<"BcrConfigs"> | Date | string
    updatedAt?: DateTimeFilter<"BcrConfigs"> | Date | string
  }

  export type BcrConfigsOrderByWithRelationInput = {
    id?: SortOrder
    type?: SortOrder
    name?: SortOrder
    value?: SortOrder
    displayOrder?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    metadata?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type BcrConfigsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: BcrConfigsWhereInput | BcrConfigsWhereInput[]
    OR?: BcrConfigsWhereInput[]
    NOT?: BcrConfigsWhereInput | BcrConfigsWhereInput[]
    type?: StringFilter<"BcrConfigs"> | string
    name?: StringFilter<"BcrConfigs"> | string
    value?: StringFilter<"BcrConfigs"> | string
    displayOrder?: IntNullableFilter<"BcrConfigs"> | number | null
    description?: StringNullableFilter<"BcrConfigs"> | string | null
    metadata?: JsonNullableFilter<"BcrConfigs">
    createdAt?: DateTimeFilter<"BcrConfigs"> | Date | string
    updatedAt?: DateTimeFilter<"BcrConfigs"> | Date | string
  }, "id">

  export type BcrConfigsOrderByWithAggregationInput = {
    id?: SortOrder
    type?: SortOrder
    name?: SortOrder
    value?: SortOrder
    displayOrder?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    metadata?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: BcrConfigsCountOrderByAggregateInput
    _avg?: BcrConfigsAvgOrderByAggregateInput
    _max?: BcrConfigsMaxOrderByAggregateInput
    _min?: BcrConfigsMinOrderByAggregateInput
    _sum?: BcrConfigsSumOrderByAggregateInput
  }

  export type BcrConfigsScalarWhereWithAggregatesInput = {
    AND?: BcrConfigsScalarWhereWithAggregatesInput | BcrConfigsScalarWhereWithAggregatesInput[]
    OR?: BcrConfigsScalarWhereWithAggregatesInput[]
    NOT?: BcrConfigsScalarWhereWithAggregatesInput | BcrConfigsScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"BcrConfigs"> | string
    type?: StringWithAggregatesFilter<"BcrConfigs"> | string
    name?: StringWithAggregatesFilter<"BcrConfigs"> | string
    value?: StringWithAggregatesFilter<"BcrConfigs"> | string
    displayOrder?: IntNullableWithAggregatesFilter<"BcrConfigs"> | number | null
    description?: StringNullableWithAggregatesFilter<"BcrConfigs"> | string | null
    metadata?: JsonNullableWithAggregatesFilter<"BcrConfigs">
    createdAt?: DateTimeWithAggregatesFilter<"BcrConfigs"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"BcrConfigs"> | Date | string
  }

  export type UsersWhereInput = {
    AND?: UsersWhereInput | UsersWhereInput[]
    OR?: UsersWhereInput[]
    NOT?: UsersWhereInput | UsersWhereInput[]
    id?: UuidFilter<"Users"> | string
    email?: StringFilter<"Users"> | string
    password?: StringFilter<"Users"> | string
    name?: StringFilter<"Users"> | string
    role?: Enumenum_Users_roleFilter<"Users"> | $Enums.enum_Users_role
    active?: BoolFilter<"Users"> | boolean
    lastLogin?: DateTimeNullableFilter<"Users"> | Date | string | null
    createdAt?: DateTimeFilter<"Users"> | Date | string
    updatedAt?: DateTimeFilter<"Users"> | Date | string
    Bcrs_Bcrs_assignedToToUsers?: BcrsListRelationFilter
    Bcrs_Bcrs_requestedByToUsers?: BcrsListRelationFilter
    Fundings_Fundings_createdByToUsers?: FundingsListRelationFilter
    Fundings_Fundings_lastUpdatedByToUsers?: FundingsListRelationFilter
    FundingRequirements_createdBy?: FundingRequirementsListRelationFilter
    FundingRequirements_lastUpdatedBy?: FundingRequirementsListRelationFilter
    FundingHistories_createdBy?: FundingHistoriesListRelationFilter
    ReferenceData_ReferenceData_createdByToUsers?: ReferenceDataListRelationFilter
    ReferenceData_ReferenceData_lastUpdatedByToUsers?: ReferenceDataListRelationFilter
    ReleaseNotes_ReleaseNotes_approvedByToUsers?: ReleaseNotesListRelationFilter
    ReleaseNotes_ReleaseNotes_createdByToUsers?: ReleaseNotesListRelationFilter
  }

  export type UsersOrderByWithRelationInput = {
    id?: SortOrder
    email?: SortOrder
    password?: SortOrder
    name?: SortOrder
    role?: SortOrder
    active?: SortOrder
    lastLogin?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    Bcrs_Bcrs_assignedToToUsers?: BcrsOrderByRelationAggregateInput
    Bcrs_Bcrs_requestedByToUsers?: BcrsOrderByRelationAggregateInput
    Fundings_Fundings_createdByToUsers?: FundingsOrderByRelationAggregateInput
    Fundings_Fundings_lastUpdatedByToUsers?: FundingsOrderByRelationAggregateInput
    FundingRequirements_createdBy?: FundingRequirementsOrderByRelationAggregateInput
    FundingRequirements_lastUpdatedBy?: FundingRequirementsOrderByRelationAggregateInput
    FundingHistories_createdBy?: FundingHistoriesOrderByRelationAggregateInput
    ReferenceData_ReferenceData_createdByToUsers?: ReferenceDataOrderByRelationAggregateInput
    ReferenceData_ReferenceData_lastUpdatedByToUsers?: ReferenceDataOrderByRelationAggregateInput
    ReleaseNotes_ReleaseNotes_approvedByToUsers?: ReleaseNotesOrderByRelationAggregateInput
    ReleaseNotes_ReleaseNotes_createdByToUsers?: ReleaseNotesOrderByRelationAggregateInput
  }

  export type UsersWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    email?: string
    AND?: UsersWhereInput | UsersWhereInput[]
    OR?: UsersWhereInput[]
    NOT?: UsersWhereInput | UsersWhereInput[]
    password?: StringFilter<"Users"> | string
    name?: StringFilter<"Users"> | string
    role?: Enumenum_Users_roleFilter<"Users"> | $Enums.enum_Users_role
    active?: BoolFilter<"Users"> | boolean
    lastLogin?: DateTimeNullableFilter<"Users"> | Date | string | null
    createdAt?: DateTimeFilter<"Users"> | Date | string
    updatedAt?: DateTimeFilter<"Users"> | Date | string
    Bcrs_Bcrs_assignedToToUsers?: BcrsListRelationFilter
    Bcrs_Bcrs_requestedByToUsers?: BcrsListRelationFilter
    Fundings_Fundings_createdByToUsers?: FundingsListRelationFilter
    Fundings_Fundings_lastUpdatedByToUsers?: FundingsListRelationFilter
    FundingRequirements_createdBy?: FundingRequirementsListRelationFilter
    FundingRequirements_lastUpdatedBy?: FundingRequirementsListRelationFilter
    FundingHistories_createdBy?: FundingHistoriesListRelationFilter
    ReferenceData_ReferenceData_createdByToUsers?: ReferenceDataListRelationFilter
    ReferenceData_ReferenceData_lastUpdatedByToUsers?: ReferenceDataListRelationFilter
    ReleaseNotes_ReleaseNotes_approvedByToUsers?: ReleaseNotesListRelationFilter
    ReleaseNotes_ReleaseNotes_createdByToUsers?: ReleaseNotesListRelationFilter
  }, "id" | "email">

  export type UsersOrderByWithAggregationInput = {
    id?: SortOrder
    email?: SortOrder
    password?: SortOrder
    name?: SortOrder
    role?: SortOrder
    active?: SortOrder
    lastLogin?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: UsersCountOrderByAggregateInput
    _max?: UsersMaxOrderByAggregateInput
    _min?: UsersMinOrderByAggregateInput
  }

  export type UsersScalarWhereWithAggregatesInput = {
    AND?: UsersScalarWhereWithAggregatesInput | UsersScalarWhereWithAggregatesInput[]
    OR?: UsersScalarWhereWithAggregatesInput[]
    NOT?: UsersScalarWhereWithAggregatesInput | UsersScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"Users"> | string
    email?: StringWithAggregatesFilter<"Users"> | string
    password?: StringWithAggregatesFilter<"Users"> | string
    name?: StringWithAggregatesFilter<"Users"> | string
    role?: Enumenum_Users_roleWithAggregatesFilter<"Users"> | $Enums.enum_Users_role
    active?: BoolWithAggregatesFilter<"Users"> | boolean
    lastLogin?: DateTimeNullableWithAggregatesFilter<"Users"> | Date | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Users"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Users"> | Date | string
  }

  export type SessionWhereInput = {
    AND?: SessionWhereInput | SessionWhereInput[]
    OR?: SessionWhereInput[]
    NOT?: SessionWhereInput | SessionWhereInput[]
    id?: StringFilter<"Session"> | string
    sid?: StringFilter<"Session"> | string
    data?: StringFilter<"Session"> | string
    expiresAt?: DateTimeFilter<"Session"> | Date | string
    createdAt?: DateTimeFilter<"Session"> | Date | string
    updatedAt?: DateTimeFilter<"Session"> | Date | string
  }

  export type SessionOrderByWithRelationInput = {
    id?: SortOrder
    sid?: SortOrder
    data?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type SessionWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    sid?: string
    AND?: SessionWhereInput | SessionWhereInput[]
    OR?: SessionWhereInput[]
    NOT?: SessionWhereInput | SessionWhereInput[]
    data?: StringFilter<"Session"> | string
    expiresAt?: DateTimeFilter<"Session"> | Date | string
    createdAt?: DateTimeFilter<"Session"> | Date | string
    updatedAt?: DateTimeFilter<"Session"> | Date | string
  }, "id" | "sid">

  export type SessionOrderByWithAggregationInput = {
    id?: SortOrder
    sid?: SortOrder
    data?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: SessionCountOrderByAggregateInput
    _max?: SessionMaxOrderByAggregateInput
    _min?: SessionMinOrderByAggregateInput
  }

  export type SessionScalarWhereWithAggregatesInput = {
    AND?: SessionScalarWhereWithAggregatesInput | SessionScalarWhereWithAggregatesInput[]
    OR?: SessionScalarWhereWithAggregatesInput[]
    NOT?: SessionScalarWhereWithAggregatesInput | SessionScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Session"> | string
    sid?: StringWithAggregatesFilter<"Session"> | string
    data?: StringWithAggregatesFilter<"Session"> | string
    expiresAt?: DateTimeWithAggregatesFilter<"Session"> | Date | string
    createdAt?: DateTimeWithAggregatesFilter<"Session"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Session"> | Date | string
  }

  export type BcrsCreateInput = {
    id: string
    bcrNumber?: string | null
    title: string
    description: string
    status?: $Enums.enum_Bcrs_status
    priority?: $Enums.enum_Bcrs_priority
    impact?: string | null
    targetDate?: Date | string | null
    implementationDate?: Date | string | null
    notes?: string | null
    createdAt: Date | string
    updatedAt: Date | string
    Users_Bcrs_assignedToToUsers?: UsersCreateNestedOneWithoutBcrs_Bcrs_assignedToToUsersInput
    Users_Bcrs_requestedByToUsers: UsersCreateNestedOneWithoutBcrs_Bcrs_requestedByToUsersInput
  }

  export type BcrsUncheckedCreateInput = {
    id: string
    bcrNumber?: string | null
    title: string
    description: string
    status?: $Enums.enum_Bcrs_status
    priority?: $Enums.enum_Bcrs_priority
    impact?: string | null
    requestedBy: string
    assignedTo?: string | null
    targetDate?: Date | string | null
    implementationDate?: Date | string | null
    notes?: string | null
    createdAt: Date | string
    updatedAt: Date | string
  }

  export type BcrsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    bcrNumber?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    status?: Enumenum_Bcrs_statusFieldUpdateOperationsInput | $Enums.enum_Bcrs_status
    priority?: Enumenum_Bcrs_priorityFieldUpdateOperationsInput | $Enums.enum_Bcrs_priority
    impact?: NullableStringFieldUpdateOperationsInput | string | null
    targetDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    implementationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Users_Bcrs_assignedToToUsers?: UsersUpdateOneWithoutBcrs_Bcrs_assignedToToUsersNestedInput
    Users_Bcrs_requestedByToUsers?: UsersUpdateOneRequiredWithoutBcrs_Bcrs_requestedByToUsersNestedInput
  }

  export type BcrsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    bcrNumber?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    status?: Enumenum_Bcrs_statusFieldUpdateOperationsInput | $Enums.enum_Bcrs_status
    priority?: Enumenum_Bcrs_priorityFieldUpdateOperationsInput | $Enums.enum_Bcrs_priority
    impact?: NullableStringFieldUpdateOperationsInput | string | null
    requestedBy?: StringFieldUpdateOperationsInput | string
    assignedTo?: NullableStringFieldUpdateOperationsInput | string | null
    targetDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    implementationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BcrsCreateManyInput = {
    id: string
    bcrNumber?: string | null
    title: string
    description: string
    status?: $Enums.enum_Bcrs_status
    priority?: $Enums.enum_Bcrs_priority
    impact?: string | null
    requestedBy: string
    assignedTo?: string | null
    targetDate?: Date | string | null
    implementationDate?: Date | string | null
    notes?: string | null
    createdAt: Date | string
    updatedAt: Date | string
  }

  export type BcrsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    bcrNumber?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    status?: Enumenum_Bcrs_statusFieldUpdateOperationsInput | $Enums.enum_Bcrs_status
    priority?: Enumenum_Bcrs_priorityFieldUpdateOperationsInput | $Enums.enum_Bcrs_priority
    impact?: NullableStringFieldUpdateOperationsInput | string | null
    targetDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    implementationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BcrsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    bcrNumber?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    status?: Enumenum_Bcrs_statusFieldUpdateOperationsInput | $Enums.enum_Bcrs_status
    priority?: Enumenum_Bcrs_priorityFieldUpdateOperationsInput | $Enums.enum_Bcrs_priority
    impact?: NullableStringFieldUpdateOperationsInput | string | null
    requestedBy?: StringFieldUpdateOperationsInput | string
    assignedTo?: NullableStringFieldUpdateOperationsInput | string | null
    targetDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    implementationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FundingsCreateInput = {
    id: string
    trainingRoute: string
    academicYear: string
    fundingAmount: Decimal | DecimalJsLike | number | string
    fundingType: string
    description?: string | null
    isActive?: boolean
    effectiveDate: Date | string
    expiryDate?: Date | string | null
    notes?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
    Users_Fundings_createdByToUsers: UsersCreateNestedOneWithoutFundings_Fundings_createdByToUsersInput
    Users_Fundings_lastUpdatedByToUsers?: UsersCreateNestedOneWithoutFundings_Fundings_lastUpdatedByToUsersInput
  }

  export type FundingsUncheckedCreateInput = {
    id: string
    trainingRoute: string
    academicYear: string
    fundingAmount: Decimal | DecimalJsLike | number | string
    fundingType: string
    description?: string | null
    isActive?: boolean
    effectiveDate: Date | string
    expiryDate?: Date | string | null
    createdBy: string
    lastUpdatedBy?: string | null
    notes?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
  }

  export type FundingsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    trainingRoute?: StringFieldUpdateOperationsInput | string
    academicYear?: StringFieldUpdateOperationsInput | string
    fundingAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fundingType?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    effectiveDate?: DateTimeFieldUpdateOperationsInput | Date | string
    expiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Users_Fundings_createdByToUsers?: UsersUpdateOneRequiredWithoutFundings_Fundings_createdByToUsersNestedInput
    Users_Fundings_lastUpdatedByToUsers?: UsersUpdateOneWithoutFundings_Fundings_lastUpdatedByToUsersNestedInput
  }

  export type FundingsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    trainingRoute?: StringFieldUpdateOperationsInput | string
    academicYear?: StringFieldUpdateOperationsInput | string
    fundingAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fundingType?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    effectiveDate?: DateTimeFieldUpdateOperationsInput | Date | string
    expiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: StringFieldUpdateOperationsInput | string
    lastUpdatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FundingsCreateManyInput = {
    id: string
    trainingRoute: string
    academicYear: string
    fundingAmount: Decimal | DecimalJsLike | number | string
    fundingType: string
    description?: string | null
    isActive?: boolean
    effectiveDate: Date | string
    expiryDate?: Date | string | null
    createdBy: string
    lastUpdatedBy?: string | null
    notes?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
  }

  export type FundingsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    trainingRoute?: StringFieldUpdateOperationsInput | string
    academicYear?: StringFieldUpdateOperationsInput | string
    fundingAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fundingType?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    effectiveDate?: DateTimeFieldUpdateOperationsInput | Date | string
    expiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FundingsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    trainingRoute?: StringFieldUpdateOperationsInput | string
    academicYear?: StringFieldUpdateOperationsInput | string
    fundingAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fundingType?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    effectiveDate?: DateTimeFieldUpdateOperationsInput | Date | string
    expiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: StringFieldUpdateOperationsInput | string
    lastUpdatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FundingRequirementsCreateInput = {
    id?: string
    route: string
    year: number
    amount: Decimal | DecimalJsLike | number | string
    description?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    creator: UsersCreateNestedOneWithoutFundingRequirements_createdByInput
    updater?: UsersCreateNestedOneWithoutFundingRequirements_lastUpdatedByInput
  }

  export type FundingRequirementsUncheckedCreateInput = {
    id?: string
    route: string
    year: number
    amount: Decimal | DecimalJsLike | number | string
    description?: string | null
    createdBy: string
    lastUpdatedBy?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type FundingRequirementsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    route?: StringFieldUpdateOperationsInput | string
    year?: IntFieldUpdateOperationsInput | number
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    creator?: UsersUpdateOneRequiredWithoutFundingRequirements_createdByNestedInput
    updater?: UsersUpdateOneWithoutFundingRequirements_lastUpdatedByNestedInput
  }

  export type FundingRequirementsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    route?: StringFieldUpdateOperationsInput | string
    year?: IntFieldUpdateOperationsInput | number
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdBy?: StringFieldUpdateOperationsInput | string
    lastUpdatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FundingRequirementsCreateManyInput = {
    id?: string
    route: string
    year: number
    amount: Decimal | DecimalJsLike | number | string
    description?: string | null
    createdBy: string
    lastUpdatedBy?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type FundingRequirementsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    route?: StringFieldUpdateOperationsInput | string
    year?: IntFieldUpdateOperationsInput | number
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FundingRequirementsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    route?: StringFieldUpdateOperationsInput | string
    year?: IntFieldUpdateOperationsInput | number
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdBy?: StringFieldUpdateOperationsInput | string
    lastUpdatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FundingHistoriesCreateInput = {
    id?: string
    year: number
    route: string
    change: string
    amount: Decimal | DecimalJsLike | number | string
    reason?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    creator: UsersCreateNestedOneWithoutFundingHistories_createdByInput
  }

  export type FundingHistoriesUncheckedCreateInput = {
    id?: string
    year: number
    route: string
    change: string
    amount: Decimal | DecimalJsLike | number | string
    reason?: string | null
    createdBy: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type FundingHistoriesUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    year?: IntFieldUpdateOperationsInput | number
    route?: StringFieldUpdateOperationsInput | string
    change?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    creator?: UsersUpdateOneRequiredWithoutFundingHistories_createdByNestedInput
  }

  export type FundingHistoriesUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    year?: IntFieldUpdateOperationsInput | number
    route?: StringFieldUpdateOperationsInput | string
    change?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    createdBy?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FundingHistoriesCreateManyInput = {
    id?: string
    year: number
    route: string
    change: string
    amount: Decimal | DecimalJsLike | number | string
    reason?: string | null
    createdBy: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type FundingHistoriesUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    year?: IntFieldUpdateOperationsInput | number
    route?: StringFieldUpdateOperationsInput | string
    change?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FundingHistoriesUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    year?: IntFieldUpdateOperationsInput | number
    route?: StringFieldUpdateOperationsInput | string
    change?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    createdBy?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReferenceDataCreateInput = {
    id: string
    name: string
    code: string
    category: string
    description?: string | null
    isActive?: boolean
    validFrom?: Date | string | null
    validTo?: Date | string | null
    version?: number
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
    Users_ReferenceData_createdByToUsers: UsersCreateNestedOneWithoutReferenceData_ReferenceData_createdByToUsersInput
    Users_ReferenceData_lastUpdatedByToUsers?: UsersCreateNestedOneWithoutReferenceData_ReferenceData_lastUpdatedByToUsersInput
  }

  export type ReferenceDataUncheckedCreateInput = {
    id: string
    name: string
    code: string
    category: string
    description?: string | null
    isActive?: boolean
    validFrom?: Date | string | null
    validTo?: Date | string | null
    createdBy: string
    lastUpdatedBy?: string | null
    version?: number
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
  }

  export type ReferenceDataUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    validFrom?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    validTo?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: IntFieldUpdateOperationsInput | number
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Users_ReferenceData_createdByToUsers?: UsersUpdateOneRequiredWithoutReferenceData_ReferenceData_createdByToUsersNestedInput
    Users_ReferenceData_lastUpdatedByToUsers?: UsersUpdateOneWithoutReferenceData_ReferenceData_lastUpdatedByToUsersNestedInput
  }

  export type ReferenceDataUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    validFrom?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    validTo?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: StringFieldUpdateOperationsInput | string
    lastUpdatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    version?: IntFieldUpdateOperationsInput | number
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReferenceDataCreateManyInput = {
    id: string
    name: string
    code: string
    category: string
    description?: string | null
    isActive?: boolean
    validFrom?: Date | string | null
    validTo?: Date | string | null
    createdBy: string
    lastUpdatedBy?: string | null
    version?: number
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
  }

  export type ReferenceDataUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    validFrom?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    validTo?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: IntFieldUpdateOperationsInput | number
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReferenceDataUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    validFrom?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    validTo?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: StringFieldUpdateOperationsInput | string
    lastUpdatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    version?: IntFieldUpdateOperationsInput | number
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReleaseNotesCreateInput = {
    id: string
    version: string
    title: string
    description: string
    environment: $Enums.enum_ReleaseNotes_environment
    status?: $Enums.enum_ReleaseNotes_status
    releaseDate: Date | string
    completedDate?: Date | string | null
    changeLog?: string | null
    impactedSystems?: ReleaseNotesCreateimpactedSystemsInput | string[]
    notes?: string | null
    createdAt: Date | string
    updatedAt: Date | string
    Users_ReleaseNotes_approvedByToUsers?: UsersCreateNestedOneWithoutReleaseNotes_ReleaseNotes_approvedByToUsersInput
    Users_ReleaseNotes_createdByToUsers: UsersCreateNestedOneWithoutReleaseNotes_ReleaseNotes_createdByToUsersInput
  }

  export type ReleaseNotesUncheckedCreateInput = {
    id: string
    version: string
    title: string
    description: string
    environment: $Enums.enum_ReleaseNotes_environment
    status?: $Enums.enum_ReleaseNotes_status
    releaseDate: Date | string
    completedDate?: Date | string | null
    createdBy: string
    approvedBy?: string | null
    changeLog?: string | null
    impactedSystems?: ReleaseNotesCreateimpactedSystemsInput | string[]
    notes?: string | null
    createdAt: Date | string
    updatedAt: Date | string
  }

  export type ReleaseNotesUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    version?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    environment?: Enumenum_ReleaseNotes_environmentFieldUpdateOperationsInput | $Enums.enum_ReleaseNotes_environment
    status?: Enumenum_ReleaseNotes_statusFieldUpdateOperationsInput | $Enums.enum_ReleaseNotes_status
    releaseDate?: DateTimeFieldUpdateOperationsInput | Date | string
    completedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    changeLog?: NullableStringFieldUpdateOperationsInput | string | null
    impactedSystems?: ReleaseNotesUpdateimpactedSystemsInput | string[]
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Users_ReleaseNotes_approvedByToUsers?: UsersUpdateOneWithoutReleaseNotes_ReleaseNotes_approvedByToUsersNestedInput
    Users_ReleaseNotes_createdByToUsers?: UsersUpdateOneRequiredWithoutReleaseNotes_ReleaseNotes_createdByToUsersNestedInput
  }

  export type ReleaseNotesUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    version?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    environment?: Enumenum_ReleaseNotes_environmentFieldUpdateOperationsInput | $Enums.enum_ReleaseNotes_environment
    status?: Enumenum_ReleaseNotes_statusFieldUpdateOperationsInput | $Enums.enum_ReleaseNotes_status
    releaseDate?: DateTimeFieldUpdateOperationsInput | Date | string
    completedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: StringFieldUpdateOperationsInput | string
    approvedBy?: NullableStringFieldUpdateOperationsInput | string | null
    changeLog?: NullableStringFieldUpdateOperationsInput | string | null
    impactedSystems?: ReleaseNotesUpdateimpactedSystemsInput | string[]
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReleaseNotesCreateManyInput = {
    id: string
    version: string
    title: string
    description: string
    environment: $Enums.enum_ReleaseNotes_environment
    status?: $Enums.enum_ReleaseNotes_status
    releaseDate: Date | string
    completedDate?: Date | string | null
    createdBy: string
    approvedBy?: string | null
    changeLog?: string | null
    impactedSystems?: ReleaseNotesCreateimpactedSystemsInput | string[]
    notes?: string | null
    createdAt: Date | string
    updatedAt: Date | string
  }

  export type ReleaseNotesUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    version?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    environment?: Enumenum_ReleaseNotes_environmentFieldUpdateOperationsInput | $Enums.enum_ReleaseNotes_environment
    status?: Enumenum_ReleaseNotes_statusFieldUpdateOperationsInput | $Enums.enum_ReleaseNotes_status
    releaseDate?: DateTimeFieldUpdateOperationsInput | Date | string
    completedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    changeLog?: NullableStringFieldUpdateOperationsInput | string | null
    impactedSystems?: ReleaseNotesUpdateimpactedSystemsInput | string[]
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReleaseNotesUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    version?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    environment?: Enumenum_ReleaseNotes_environmentFieldUpdateOperationsInput | $Enums.enum_ReleaseNotes_environment
    status?: Enumenum_ReleaseNotes_statusFieldUpdateOperationsInput | $Enums.enum_ReleaseNotes_status
    releaseDate?: DateTimeFieldUpdateOperationsInput | Date | string
    completedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: StringFieldUpdateOperationsInput | string
    approvedBy?: NullableStringFieldUpdateOperationsInput | string | null
    changeLog?: NullableStringFieldUpdateOperationsInput | string | null
    impactedSystems?: ReleaseNotesUpdateimpactedSystemsInput | string[]
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SequelizeMetaCreateInput = {
    name: string
  }

  export type SequelizeMetaUncheckedCreateInput = {
    name: string
  }

  export type SequelizeMetaUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
  }

  export type SequelizeMetaUncheckedUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
  }

  export type SequelizeMetaCreateManyInput = {
    name: string
  }

  export type SequelizeMetaUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
  }

  export type SequelizeMetaUncheckedUpdateManyInput = {
    name?: StringFieldUpdateOperationsInput | string
  }

  export type BcrConfigsCreateInput = {
    id?: string
    type: string
    name: string
    value: string
    displayOrder?: number | null
    description?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type BcrConfigsUncheckedCreateInput = {
    id?: string
    type: string
    name: string
    value: string
    displayOrder?: number | null
    description?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type BcrConfigsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    displayOrder?: NullableIntFieldUpdateOperationsInput | number | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BcrConfigsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    displayOrder?: NullableIntFieldUpdateOperationsInput | number | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BcrConfigsCreateManyInput = {
    id?: string
    type: string
    name: string
    value: string
    displayOrder?: number | null
    description?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type BcrConfigsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    displayOrder?: NullableIntFieldUpdateOperationsInput | number | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BcrConfigsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    displayOrder?: NullableIntFieldUpdateOperationsInput | number | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UsersCreateInput = {
    id: string
    email: string
    password: string
    name: string
    role?: $Enums.enum_Users_role
    active?: boolean
    lastLogin?: Date | string | null
    createdAt: Date | string
    updatedAt: Date | string
    Bcrs_Bcrs_assignedToToUsers?: BcrsCreateNestedManyWithoutUsers_Bcrs_assignedToToUsersInput
    Bcrs_Bcrs_requestedByToUsers?: BcrsCreateNestedManyWithoutUsers_Bcrs_requestedByToUsersInput
    Fundings_Fundings_createdByToUsers?: FundingsCreateNestedManyWithoutUsers_Fundings_createdByToUsersInput
    Fundings_Fundings_lastUpdatedByToUsers?: FundingsCreateNestedManyWithoutUsers_Fundings_lastUpdatedByToUsersInput
    FundingRequirements_createdBy?: FundingRequirementsCreateNestedManyWithoutCreatorInput
    FundingRequirements_lastUpdatedBy?: FundingRequirementsCreateNestedManyWithoutUpdaterInput
    FundingHistories_createdBy?: FundingHistoriesCreateNestedManyWithoutCreatorInput
    ReferenceData_ReferenceData_createdByToUsers?: ReferenceDataCreateNestedManyWithoutUsers_ReferenceData_createdByToUsersInput
    ReferenceData_ReferenceData_lastUpdatedByToUsers?: ReferenceDataCreateNestedManyWithoutUsers_ReferenceData_lastUpdatedByToUsersInput
    ReleaseNotes_ReleaseNotes_approvedByToUsers?: ReleaseNotesCreateNestedManyWithoutUsers_ReleaseNotes_approvedByToUsersInput
    ReleaseNotes_ReleaseNotes_createdByToUsers?: ReleaseNotesCreateNestedManyWithoutUsers_ReleaseNotes_createdByToUsersInput
  }

  export type UsersUncheckedCreateInput = {
    id: string
    email: string
    password: string
    name: string
    role?: $Enums.enum_Users_role
    active?: boolean
    lastLogin?: Date | string | null
    createdAt: Date | string
    updatedAt: Date | string
    Bcrs_Bcrs_assignedToToUsers?: BcrsUncheckedCreateNestedManyWithoutUsers_Bcrs_assignedToToUsersInput
    Bcrs_Bcrs_requestedByToUsers?: BcrsUncheckedCreateNestedManyWithoutUsers_Bcrs_requestedByToUsersInput
    Fundings_Fundings_createdByToUsers?: FundingsUncheckedCreateNestedManyWithoutUsers_Fundings_createdByToUsersInput
    Fundings_Fundings_lastUpdatedByToUsers?: FundingsUncheckedCreateNestedManyWithoutUsers_Fundings_lastUpdatedByToUsersInput
    FundingRequirements_createdBy?: FundingRequirementsUncheckedCreateNestedManyWithoutCreatorInput
    FundingRequirements_lastUpdatedBy?: FundingRequirementsUncheckedCreateNestedManyWithoutUpdaterInput
    FundingHistories_createdBy?: FundingHistoriesUncheckedCreateNestedManyWithoutCreatorInput
    ReferenceData_ReferenceData_createdByToUsers?: ReferenceDataUncheckedCreateNestedManyWithoutUsers_ReferenceData_createdByToUsersInput
    ReferenceData_ReferenceData_lastUpdatedByToUsers?: ReferenceDataUncheckedCreateNestedManyWithoutUsers_ReferenceData_lastUpdatedByToUsersInput
    ReleaseNotes_ReleaseNotes_approvedByToUsers?: ReleaseNotesUncheckedCreateNestedManyWithoutUsers_ReleaseNotes_approvedByToUsersInput
    ReleaseNotes_ReleaseNotes_createdByToUsers?: ReleaseNotesUncheckedCreateNestedManyWithoutUsers_ReleaseNotes_createdByToUsersInput
  }

  export type UsersUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    role?: Enumenum_Users_roleFieldUpdateOperationsInput | $Enums.enum_Users_role
    active?: BoolFieldUpdateOperationsInput | boolean
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Bcrs_Bcrs_assignedToToUsers?: BcrsUpdateManyWithoutUsers_Bcrs_assignedToToUsersNestedInput
    Bcrs_Bcrs_requestedByToUsers?: BcrsUpdateManyWithoutUsers_Bcrs_requestedByToUsersNestedInput
    Fundings_Fundings_createdByToUsers?: FundingsUpdateManyWithoutUsers_Fundings_createdByToUsersNestedInput
    Fundings_Fundings_lastUpdatedByToUsers?: FundingsUpdateManyWithoutUsers_Fundings_lastUpdatedByToUsersNestedInput
    FundingRequirements_createdBy?: FundingRequirementsUpdateManyWithoutCreatorNestedInput
    FundingRequirements_lastUpdatedBy?: FundingRequirementsUpdateManyWithoutUpdaterNestedInput
    FundingHistories_createdBy?: FundingHistoriesUpdateManyWithoutCreatorNestedInput
    ReferenceData_ReferenceData_createdByToUsers?: ReferenceDataUpdateManyWithoutUsers_ReferenceData_createdByToUsersNestedInput
    ReferenceData_ReferenceData_lastUpdatedByToUsers?: ReferenceDataUpdateManyWithoutUsers_ReferenceData_lastUpdatedByToUsersNestedInput
    ReleaseNotes_ReleaseNotes_approvedByToUsers?: ReleaseNotesUpdateManyWithoutUsers_ReleaseNotes_approvedByToUsersNestedInput
    ReleaseNotes_ReleaseNotes_createdByToUsers?: ReleaseNotesUpdateManyWithoutUsers_ReleaseNotes_createdByToUsersNestedInput
  }

  export type UsersUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    role?: Enumenum_Users_roleFieldUpdateOperationsInput | $Enums.enum_Users_role
    active?: BoolFieldUpdateOperationsInput | boolean
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Bcrs_Bcrs_assignedToToUsers?: BcrsUncheckedUpdateManyWithoutUsers_Bcrs_assignedToToUsersNestedInput
    Bcrs_Bcrs_requestedByToUsers?: BcrsUncheckedUpdateManyWithoutUsers_Bcrs_requestedByToUsersNestedInput
    Fundings_Fundings_createdByToUsers?: FundingsUncheckedUpdateManyWithoutUsers_Fundings_createdByToUsersNestedInput
    Fundings_Fundings_lastUpdatedByToUsers?: FundingsUncheckedUpdateManyWithoutUsers_Fundings_lastUpdatedByToUsersNestedInput
    FundingRequirements_createdBy?: FundingRequirementsUncheckedUpdateManyWithoutCreatorNestedInput
    FundingRequirements_lastUpdatedBy?: FundingRequirementsUncheckedUpdateManyWithoutUpdaterNestedInput
    FundingHistories_createdBy?: FundingHistoriesUncheckedUpdateManyWithoutCreatorNestedInput
    ReferenceData_ReferenceData_createdByToUsers?: ReferenceDataUncheckedUpdateManyWithoutUsers_ReferenceData_createdByToUsersNestedInput
    ReferenceData_ReferenceData_lastUpdatedByToUsers?: ReferenceDataUncheckedUpdateManyWithoutUsers_ReferenceData_lastUpdatedByToUsersNestedInput
    ReleaseNotes_ReleaseNotes_approvedByToUsers?: ReleaseNotesUncheckedUpdateManyWithoutUsers_ReleaseNotes_approvedByToUsersNestedInput
    ReleaseNotes_ReleaseNotes_createdByToUsers?: ReleaseNotesUncheckedUpdateManyWithoutUsers_ReleaseNotes_createdByToUsersNestedInput
  }

  export type UsersCreateManyInput = {
    id: string
    email: string
    password: string
    name: string
    role?: $Enums.enum_Users_role
    active?: boolean
    lastLogin?: Date | string | null
    createdAt: Date | string
    updatedAt: Date | string
  }

  export type UsersUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    role?: Enumenum_Users_roleFieldUpdateOperationsInput | $Enums.enum_Users_role
    active?: BoolFieldUpdateOperationsInput | boolean
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UsersUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    role?: Enumenum_Users_roleFieldUpdateOperationsInput | $Enums.enum_Users_role
    active?: BoolFieldUpdateOperationsInput | boolean
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SessionCreateInput = {
    id?: string
    sid: string
    data: string
    expiresAt: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SessionUncheckedCreateInput = {
    id?: string
    sid: string
    data: string
    expiresAt: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SessionUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    sid?: StringFieldUpdateOperationsInput | string
    data?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SessionUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    sid?: StringFieldUpdateOperationsInput | string
    data?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SessionCreateManyInput = {
    id?: string
    sid: string
    data: string
    expiresAt: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SessionUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    sid?: StringFieldUpdateOperationsInput | string
    data?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SessionUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    sid?: StringFieldUpdateOperationsInput | string
    data?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UuidFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedUuidFilter<$PrismaModel> | string
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type Enumenum_Bcrs_statusFilter<$PrismaModel = never> = {
    equals?: $Enums.enum_Bcrs_status | Enumenum_Bcrs_statusFieldRefInput<$PrismaModel>
    in?: $Enums.enum_Bcrs_status[] | ListEnumenum_Bcrs_statusFieldRefInput<$PrismaModel>
    notIn?: $Enums.enum_Bcrs_status[] | ListEnumenum_Bcrs_statusFieldRefInput<$PrismaModel>
    not?: NestedEnumenum_Bcrs_statusFilter<$PrismaModel> | $Enums.enum_Bcrs_status
  }

  export type Enumenum_Bcrs_priorityFilter<$PrismaModel = never> = {
    equals?: $Enums.enum_Bcrs_priority | Enumenum_Bcrs_priorityFieldRefInput<$PrismaModel>
    in?: $Enums.enum_Bcrs_priority[] | ListEnumenum_Bcrs_priorityFieldRefInput<$PrismaModel>
    notIn?: $Enums.enum_Bcrs_priority[] | ListEnumenum_Bcrs_priorityFieldRefInput<$PrismaModel>
    not?: NestedEnumenum_Bcrs_priorityFilter<$PrismaModel> | $Enums.enum_Bcrs_priority
  }

  export type UuidNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedUuidNullableFilter<$PrismaModel> | string | null
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type UsersNullableScalarRelationFilter = {
    is?: UsersWhereInput | null
    isNot?: UsersWhereInput | null
  }

  export type UsersScalarRelationFilter = {
    is?: UsersWhereInput
    isNot?: UsersWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type BcrsCountOrderByAggregateInput = {
    id?: SortOrder
    bcrNumber?: SortOrder
    title?: SortOrder
    description?: SortOrder
    status?: SortOrder
    priority?: SortOrder
    impact?: SortOrder
    requestedBy?: SortOrder
    assignedTo?: SortOrder
    targetDate?: SortOrder
    implementationDate?: SortOrder
    notes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type BcrsMaxOrderByAggregateInput = {
    id?: SortOrder
    bcrNumber?: SortOrder
    title?: SortOrder
    description?: SortOrder
    status?: SortOrder
    priority?: SortOrder
    impact?: SortOrder
    requestedBy?: SortOrder
    assignedTo?: SortOrder
    targetDate?: SortOrder
    implementationDate?: SortOrder
    notes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type BcrsMinOrderByAggregateInput = {
    id?: SortOrder
    bcrNumber?: SortOrder
    title?: SortOrder
    description?: SortOrder
    status?: SortOrder
    priority?: SortOrder
    impact?: SortOrder
    requestedBy?: SortOrder
    assignedTo?: SortOrder
    targetDate?: SortOrder
    implementationDate?: SortOrder
    notes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UuidWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedUuidWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type Enumenum_Bcrs_statusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.enum_Bcrs_status | Enumenum_Bcrs_statusFieldRefInput<$PrismaModel>
    in?: $Enums.enum_Bcrs_status[] | ListEnumenum_Bcrs_statusFieldRefInput<$PrismaModel>
    notIn?: $Enums.enum_Bcrs_status[] | ListEnumenum_Bcrs_statusFieldRefInput<$PrismaModel>
    not?: NestedEnumenum_Bcrs_statusWithAggregatesFilter<$PrismaModel> | $Enums.enum_Bcrs_status
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumenum_Bcrs_statusFilter<$PrismaModel>
    _max?: NestedEnumenum_Bcrs_statusFilter<$PrismaModel>
  }

  export type Enumenum_Bcrs_priorityWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.enum_Bcrs_priority | Enumenum_Bcrs_priorityFieldRefInput<$PrismaModel>
    in?: $Enums.enum_Bcrs_priority[] | ListEnumenum_Bcrs_priorityFieldRefInput<$PrismaModel>
    notIn?: $Enums.enum_Bcrs_priority[] | ListEnumenum_Bcrs_priorityFieldRefInput<$PrismaModel>
    not?: NestedEnumenum_Bcrs_priorityWithAggregatesFilter<$PrismaModel> | $Enums.enum_Bcrs_priority
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumenum_Bcrs_priorityFilter<$PrismaModel>
    _max?: NestedEnumenum_Bcrs_priorityFilter<$PrismaModel>
  }

  export type UuidNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedUuidNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type DecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }
  export type JsonNullableFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type FundingsCountOrderByAggregateInput = {
    id?: SortOrder
    trainingRoute?: SortOrder
    academicYear?: SortOrder
    fundingAmount?: SortOrder
    fundingType?: SortOrder
    description?: SortOrder
    isActive?: SortOrder
    effectiveDate?: SortOrder
    expiryDate?: SortOrder
    createdBy?: SortOrder
    lastUpdatedBy?: SortOrder
    notes?: SortOrder
    metadata?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type FundingsAvgOrderByAggregateInput = {
    fundingAmount?: SortOrder
  }

  export type FundingsMaxOrderByAggregateInput = {
    id?: SortOrder
    trainingRoute?: SortOrder
    academicYear?: SortOrder
    fundingAmount?: SortOrder
    fundingType?: SortOrder
    description?: SortOrder
    isActive?: SortOrder
    effectiveDate?: SortOrder
    expiryDate?: SortOrder
    createdBy?: SortOrder
    lastUpdatedBy?: SortOrder
    notes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type FundingsMinOrderByAggregateInput = {
    id?: SortOrder
    trainingRoute?: SortOrder
    academicYear?: SortOrder
    fundingAmount?: SortOrder
    fundingType?: SortOrder
    description?: SortOrder
    isActive?: SortOrder
    effectiveDate?: SortOrder
    expiryDate?: SortOrder
    createdBy?: SortOrder
    lastUpdatedBy?: SortOrder
    notes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type FundingsSumOrderByAggregateInput = {
    fundingAmount?: SortOrder
  }

  export type DecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }
  export type JsonNullableWithAggregatesFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedJsonNullableFilter<$PrismaModel>
    _max?: NestedJsonNullableFilter<$PrismaModel>
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type FundingRequirementsCountOrderByAggregateInput = {
    id?: SortOrder
    route?: SortOrder
    year?: SortOrder
    amount?: SortOrder
    description?: SortOrder
    createdBy?: SortOrder
    lastUpdatedBy?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type FundingRequirementsAvgOrderByAggregateInput = {
    year?: SortOrder
    amount?: SortOrder
  }

  export type FundingRequirementsMaxOrderByAggregateInput = {
    id?: SortOrder
    route?: SortOrder
    year?: SortOrder
    amount?: SortOrder
    description?: SortOrder
    createdBy?: SortOrder
    lastUpdatedBy?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type FundingRequirementsMinOrderByAggregateInput = {
    id?: SortOrder
    route?: SortOrder
    year?: SortOrder
    amount?: SortOrder
    description?: SortOrder
    createdBy?: SortOrder
    lastUpdatedBy?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type FundingRequirementsSumOrderByAggregateInput = {
    year?: SortOrder
    amount?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type FundingHistoriesCountOrderByAggregateInput = {
    id?: SortOrder
    year?: SortOrder
    route?: SortOrder
    change?: SortOrder
    amount?: SortOrder
    reason?: SortOrder
    createdBy?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type FundingHistoriesAvgOrderByAggregateInput = {
    year?: SortOrder
    amount?: SortOrder
  }

  export type FundingHistoriesMaxOrderByAggregateInput = {
    id?: SortOrder
    year?: SortOrder
    route?: SortOrder
    change?: SortOrder
    amount?: SortOrder
    reason?: SortOrder
    createdBy?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type FundingHistoriesMinOrderByAggregateInput = {
    id?: SortOrder
    year?: SortOrder
    route?: SortOrder
    change?: SortOrder
    amount?: SortOrder
    reason?: SortOrder
    createdBy?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type FundingHistoriesSumOrderByAggregateInput = {
    year?: SortOrder
    amount?: SortOrder
  }

  export type ReferenceDataCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    code?: SortOrder
    category?: SortOrder
    description?: SortOrder
    isActive?: SortOrder
    validFrom?: SortOrder
    validTo?: SortOrder
    createdBy?: SortOrder
    lastUpdatedBy?: SortOrder
    version?: SortOrder
    metadata?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ReferenceDataAvgOrderByAggregateInput = {
    version?: SortOrder
  }

  export type ReferenceDataMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    code?: SortOrder
    category?: SortOrder
    description?: SortOrder
    isActive?: SortOrder
    validFrom?: SortOrder
    validTo?: SortOrder
    createdBy?: SortOrder
    lastUpdatedBy?: SortOrder
    version?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ReferenceDataMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    code?: SortOrder
    category?: SortOrder
    description?: SortOrder
    isActive?: SortOrder
    validFrom?: SortOrder
    validTo?: SortOrder
    createdBy?: SortOrder
    lastUpdatedBy?: SortOrder
    version?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ReferenceDataSumOrderByAggregateInput = {
    version?: SortOrder
  }

  export type Enumenum_ReleaseNotes_environmentFilter<$PrismaModel = never> = {
    equals?: $Enums.enum_ReleaseNotes_environment | Enumenum_ReleaseNotes_environmentFieldRefInput<$PrismaModel>
    in?: $Enums.enum_ReleaseNotes_environment[] | ListEnumenum_ReleaseNotes_environmentFieldRefInput<$PrismaModel>
    notIn?: $Enums.enum_ReleaseNotes_environment[] | ListEnumenum_ReleaseNotes_environmentFieldRefInput<$PrismaModel>
    not?: NestedEnumenum_ReleaseNotes_environmentFilter<$PrismaModel> | $Enums.enum_ReleaseNotes_environment
  }

  export type Enumenum_ReleaseNotes_statusFilter<$PrismaModel = never> = {
    equals?: $Enums.enum_ReleaseNotes_status | Enumenum_ReleaseNotes_statusFieldRefInput<$PrismaModel>
    in?: $Enums.enum_ReleaseNotes_status[] | ListEnumenum_ReleaseNotes_statusFieldRefInput<$PrismaModel>
    notIn?: $Enums.enum_ReleaseNotes_status[] | ListEnumenum_ReleaseNotes_statusFieldRefInput<$PrismaModel>
    not?: NestedEnumenum_ReleaseNotes_statusFilter<$PrismaModel> | $Enums.enum_ReleaseNotes_status
  }

  export type StringNullableListFilter<$PrismaModel = never> = {
    equals?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    has?: string | StringFieldRefInput<$PrismaModel> | null
    hasEvery?: string[] | ListStringFieldRefInput<$PrismaModel>
    hasSome?: string[] | ListStringFieldRefInput<$PrismaModel>
    isEmpty?: boolean
  }

  export type ReleaseNotesCountOrderByAggregateInput = {
    id?: SortOrder
    version?: SortOrder
    title?: SortOrder
    description?: SortOrder
    environment?: SortOrder
    status?: SortOrder
    releaseDate?: SortOrder
    completedDate?: SortOrder
    createdBy?: SortOrder
    approvedBy?: SortOrder
    changeLog?: SortOrder
    impactedSystems?: SortOrder
    notes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ReleaseNotesMaxOrderByAggregateInput = {
    id?: SortOrder
    version?: SortOrder
    title?: SortOrder
    description?: SortOrder
    environment?: SortOrder
    status?: SortOrder
    releaseDate?: SortOrder
    completedDate?: SortOrder
    createdBy?: SortOrder
    approvedBy?: SortOrder
    changeLog?: SortOrder
    notes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ReleaseNotesMinOrderByAggregateInput = {
    id?: SortOrder
    version?: SortOrder
    title?: SortOrder
    description?: SortOrder
    environment?: SortOrder
    status?: SortOrder
    releaseDate?: SortOrder
    completedDate?: SortOrder
    createdBy?: SortOrder
    approvedBy?: SortOrder
    changeLog?: SortOrder
    notes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type Enumenum_ReleaseNotes_environmentWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.enum_ReleaseNotes_environment | Enumenum_ReleaseNotes_environmentFieldRefInput<$PrismaModel>
    in?: $Enums.enum_ReleaseNotes_environment[] | ListEnumenum_ReleaseNotes_environmentFieldRefInput<$PrismaModel>
    notIn?: $Enums.enum_ReleaseNotes_environment[] | ListEnumenum_ReleaseNotes_environmentFieldRefInput<$PrismaModel>
    not?: NestedEnumenum_ReleaseNotes_environmentWithAggregatesFilter<$PrismaModel> | $Enums.enum_ReleaseNotes_environment
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumenum_ReleaseNotes_environmentFilter<$PrismaModel>
    _max?: NestedEnumenum_ReleaseNotes_environmentFilter<$PrismaModel>
  }

  export type Enumenum_ReleaseNotes_statusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.enum_ReleaseNotes_status | Enumenum_ReleaseNotes_statusFieldRefInput<$PrismaModel>
    in?: $Enums.enum_ReleaseNotes_status[] | ListEnumenum_ReleaseNotes_statusFieldRefInput<$PrismaModel>
    notIn?: $Enums.enum_ReleaseNotes_status[] | ListEnumenum_ReleaseNotes_statusFieldRefInput<$PrismaModel>
    not?: NestedEnumenum_ReleaseNotes_statusWithAggregatesFilter<$PrismaModel> | $Enums.enum_ReleaseNotes_status
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumenum_ReleaseNotes_statusFilter<$PrismaModel>
    _max?: NestedEnumenum_ReleaseNotes_statusFilter<$PrismaModel>
  }

  export type SequelizeMetaCountOrderByAggregateInput = {
    name?: SortOrder
  }

  export type SequelizeMetaMaxOrderByAggregateInput = {
    name?: SortOrder
  }

  export type SequelizeMetaMinOrderByAggregateInput = {
    name?: SortOrder
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type BcrConfigsCountOrderByAggregateInput = {
    id?: SortOrder
    type?: SortOrder
    name?: SortOrder
    value?: SortOrder
    displayOrder?: SortOrder
    description?: SortOrder
    metadata?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type BcrConfigsAvgOrderByAggregateInput = {
    displayOrder?: SortOrder
  }

  export type BcrConfigsMaxOrderByAggregateInput = {
    id?: SortOrder
    type?: SortOrder
    name?: SortOrder
    value?: SortOrder
    displayOrder?: SortOrder
    description?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type BcrConfigsMinOrderByAggregateInput = {
    id?: SortOrder
    type?: SortOrder
    name?: SortOrder
    value?: SortOrder
    displayOrder?: SortOrder
    description?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type BcrConfigsSumOrderByAggregateInput = {
    displayOrder?: SortOrder
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type Enumenum_Users_roleFilter<$PrismaModel = never> = {
    equals?: $Enums.enum_Users_role | Enumenum_Users_roleFieldRefInput<$PrismaModel>
    in?: $Enums.enum_Users_role[] | ListEnumenum_Users_roleFieldRefInput<$PrismaModel>
    notIn?: $Enums.enum_Users_role[] | ListEnumenum_Users_roleFieldRefInput<$PrismaModel>
    not?: NestedEnumenum_Users_roleFilter<$PrismaModel> | $Enums.enum_Users_role
  }

  export type BcrsListRelationFilter = {
    every?: BcrsWhereInput
    some?: BcrsWhereInput
    none?: BcrsWhereInput
  }

  export type FundingsListRelationFilter = {
    every?: FundingsWhereInput
    some?: FundingsWhereInput
    none?: FundingsWhereInput
  }

  export type FundingRequirementsListRelationFilter = {
    every?: FundingRequirementsWhereInput
    some?: FundingRequirementsWhereInput
    none?: FundingRequirementsWhereInput
  }

  export type FundingHistoriesListRelationFilter = {
    every?: FundingHistoriesWhereInput
    some?: FundingHistoriesWhereInput
    none?: FundingHistoriesWhereInput
  }

  export type ReferenceDataListRelationFilter = {
    every?: ReferenceDataWhereInput
    some?: ReferenceDataWhereInput
    none?: ReferenceDataWhereInput
  }

  export type ReleaseNotesListRelationFilter = {
    every?: ReleaseNotesWhereInput
    some?: ReleaseNotesWhereInput
    none?: ReleaseNotesWhereInput
  }

  export type BcrsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type FundingsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type FundingRequirementsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type FundingHistoriesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ReferenceDataOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ReleaseNotesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UsersCountOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    password?: SortOrder
    name?: SortOrder
    role?: SortOrder
    active?: SortOrder
    lastLogin?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UsersMaxOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    password?: SortOrder
    name?: SortOrder
    role?: SortOrder
    active?: SortOrder
    lastLogin?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UsersMinOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    password?: SortOrder
    name?: SortOrder
    role?: SortOrder
    active?: SortOrder
    lastLogin?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type Enumenum_Users_roleWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.enum_Users_role | Enumenum_Users_roleFieldRefInput<$PrismaModel>
    in?: $Enums.enum_Users_role[] | ListEnumenum_Users_roleFieldRefInput<$PrismaModel>
    notIn?: $Enums.enum_Users_role[] | ListEnumenum_Users_roleFieldRefInput<$PrismaModel>
    not?: NestedEnumenum_Users_roleWithAggregatesFilter<$PrismaModel> | $Enums.enum_Users_role
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumenum_Users_roleFilter<$PrismaModel>
    _max?: NestedEnumenum_Users_roleFilter<$PrismaModel>
  }

  export type SessionCountOrderByAggregateInput = {
    id?: SortOrder
    sid?: SortOrder
    data?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type SessionMaxOrderByAggregateInput = {
    id?: SortOrder
    sid?: SortOrder
    data?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type SessionMinOrderByAggregateInput = {
    id?: SortOrder
    sid?: SortOrder
    data?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UsersCreateNestedOneWithoutBcrs_Bcrs_assignedToToUsersInput = {
    create?: XOR<UsersCreateWithoutBcrs_Bcrs_assignedToToUsersInput, UsersUncheckedCreateWithoutBcrs_Bcrs_assignedToToUsersInput>
    connectOrCreate?: UsersCreateOrConnectWithoutBcrs_Bcrs_assignedToToUsersInput
    connect?: UsersWhereUniqueInput
  }

  export type UsersCreateNestedOneWithoutBcrs_Bcrs_requestedByToUsersInput = {
    create?: XOR<UsersCreateWithoutBcrs_Bcrs_requestedByToUsersInput, UsersUncheckedCreateWithoutBcrs_Bcrs_requestedByToUsersInput>
    connectOrCreate?: UsersCreateOrConnectWithoutBcrs_Bcrs_requestedByToUsersInput
    connect?: UsersWhereUniqueInput
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type Enumenum_Bcrs_statusFieldUpdateOperationsInput = {
    set?: $Enums.enum_Bcrs_status
  }

  export type Enumenum_Bcrs_priorityFieldUpdateOperationsInput = {
    set?: $Enums.enum_Bcrs_priority
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type UsersUpdateOneWithoutBcrs_Bcrs_assignedToToUsersNestedInput = {
    create?: XOR<UsersCreateWithoutBcrs_Bcrs_assignedToToUsersInput, UsersUncheckedCreateWithoutBcrs_Bcrs_assignedToToUsersInput>
    connectOrCreate?: UsersCreateOrConnectWithoutBcrs_Bcrs_assignedToToUsersInput
    upsert?: UsersUpsertWithoutBcrs_Bcrs_assignedToToUsersInput
    disconnect?: UsersWhereInput | boolean
    delete?: UsersWhereInput | boolean
    connect?: UsersWhereUniqueInput
    update?: XOR<XOR<UsersUpdateToOneWithWhereWithoutBcrs_Bcrs_assignedToToUsersInput, UsersUpdateWithoutBcrs_Bcrs_assignedToToUsersInput>, UsersUncheckedUpdateWithoutBcrs_Bcrs_assignedToToUsersInput>
  }

  export type UsersUpdateOneRequiredWithoutBcrs_Bcrs_requestedByToUsersNestedInput = {
    create?: XOR<UsersCreateWithoutBcrs_Bcrs_requestedByToUsersInput, UsersUncheckedCreateWithoutBcrs_Bcrs_requestedByToUsersInput>
    connectOrCreate?: UsersCreateOrConnectWithoutBcrs_Bcrs_requestedByToUsersInput
    upsert?: UsersUpsertWithoutBcrs_Bcrs_requestedByToUsersInput
    connect?: UsersWhereUniqueInput
    update?: XOR<XOR<UsersUpdateToOneWithWhereWithoutBcrs_Bcrs_requestedByToUsersInput, UsersUpdateWithoutBcrs_Bcrs_requestedByToUsersInput>, UsersUncheckedUpdateWithoutBcrs_Bcrs_requestedByToUsersInput>
  }

  export type UsersCreateNestedOneWithoutFundings_Fundings_createdByToUsersInput = {
    create?: XOR<UsersCreateWithoutFundings_Fundings_createdByToUsersInput, UsersUncheckedCreateWithoutFundings_Fundings_createdByToUsersInput>
    connectOrCreate?: UsersCreateOrConnectWithoutFundings_Fundings_createdByToUsersInput
    connect?: UsersWhereUniqueInput
  }

  export type UsersCreateNestedOneWithoutFundings_Fundings_lastUpdatedByToUsersInput = {
    create?: XOR<UsersCreateWithoutFundings_Fundings_lastUpdatedByToUsersInput, UsersUncheckedCreateWithoutFundings_Fundings_lastUpdatedByToUsersInput>
    connectOrCreate?: UsersCreateOrConnectWithoutFundings_Fundings_lastUpdatedByToUsersInput
    connect?: UsersWhereUniqueInput
  }

  export type DecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type UsersUpdateOneRequiredWithoutFundings_Fundings_createdByToUsersNestedInput = {
    create?: XOR<UsersCreateWithoutFundings_Fundings_createdByToUsersInput, UsersUncheckedCreateWithoutFundings_Fundings_createdByToUsersInput>
    connectOrCreate?: UsersCreateOrConnectWithoutFundings_Fundings_createdByToUsersInput
    upsert?: UsersUpsertWithoutFundings_Fundings_createdByToUsersInput
    connect?: UsersWhereUniqueInput
    update?: XOR<XOR<UsersUpdateToOneWithWhereWithoutFundings_Fundings_createdByToUsersInput, UsersUpdateWithoutFundings_Fundings_createdByToUsersInput>, UsersUncheckedUpdateWithoutFundings_Fundings_createdByToUsersInput>
  }

  export type UsersUpdateOneWithoutFundings_Fundings_lastUpdatedByToUsersNestedInput = {
    create?: XOR<UsersCreateWithoutFundings_Fundings_lastUpdatedByToUsersInput, UsersUncheckedCreateWithoutFundings_Fundings_lastUpdatedByToUsersInput>
    connectOrCreate?: UsersCreateOrConnectWithoutFundings_Fundings_lastUpdatedByToUsersInput
    upsert?: UsersUpsertWithoutFundings_Fundings_lastUpdatedByToUsersInput
    disconnect?: UsersWhereInput | boolean
    delete?: UsersWhereInput | boolean
    connect?: UsersWhereUniqueInput
    update?: XOR<XOR<UsersUpdateToOneWithWhereWithoutFundings_Fundings_lastUpdatedByToUsersInput, UsersUpdateWithoutFundings_Fundings_lastUpdatedByToUsersInput>, UsersUncheckedUpdateWithoutFundings_Fundings_lastUpdatedByToUsersInput>
  }

  export type UsersCreateNestedOneWithoutFundingRequirements_createdByInput = {
    create?: XOR<UsersCreateWithoutFundingRequirements_createdByInput, UsersUncheckedCreateWithoutFundingRequirements_createdByInput>
    connectOrCreate?: UsersCreateOrConnectWithoutFundingRequirements_createdByInput
    connect?: UsersWhereUniqueInput
  }

  export type UsersCreateNestedOneWithoutFundingRequirements_lastUpdatedByInput = {
    create?: XOR<UsersCreateWithoutFundingRequirements_lastUpdatedByInput, UsersUncheckedCreateWithoutFundingRequirements_lastUpdatedByInput>
    connectOrCreate?: UsersCreateOrConnectWithoutFundingRequirements_lastUpdatedByInput
    connect?: UsersWhereUniqueInput
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type UsersUpdateOneRequiredWithoutFundingRequirements_createdByNestedInput = {
    create?: XOR<UsersCreateWithoutFundingRequirements_createdByInput, UsersUncheckedCreateWithoutFundingRequirements_createdByInput>
    connectOrCreate?: UsersCreateOrConnectWithoutFundingRequirements_createdByInput
    upsert?: UsersUpsertWithoutFundingRequirements_createdByInput
    connect?: UsersWhereUniqueInput
    update?: XOR<XOR<UsersUpdateToOneWithWhereWithoutFundingRequirements_createdByInput, UsersUpdateWithoutFundingRequirements_createdByInput>, UsersUncheckedUpdateWithoutFundingRequirements_createdByInput>
  }

  export type UsersUpdateOneWithoutFundingRequirements_lastUpdatedByNestedInput = {
    create?: XOR<UsersCreateWithoutFundingRequirements_lastUpdatedByInput, UsersUncheckedCreateWithoutFundingRequirements_lastUpdatedByInput>
    connectOrCreate?: UsersCreateOrConnectWithoutFundingRequirements_lastUpdatedByInput
    upsert?: UsersUpsertWithoutFundingRequirements_lastUpdatedByInput
    disconnect?: UsersWhereInput | boolean
    delete?: UsersWhereInput | boolean
    connect?: UsersWhereUniqueInput
    update?: XOR<XOR<UsersUpdateToOneWithWhereWithoutFundingRequirements_lastUpdatedByInput, UsersUpdateWithoutFundingRequirements_lastUpdatedByInput>, UsersUncheckedUpdateWithoutFundingRequirements_lastUpdatedByInput>
  }

  export type UsersCreateNestedOneWithoutFundingHistories_createdByInput = {
    create?: XOR<UsersCreateWithoutFundingHistories_createdByInput, UsersUncheckedCreateWithoutFundingHistories_createdByInput>
    connectOrCreate?: UsersCreateOrConnectWithoutFundingHistories_createdByInput
    connect?: UsersWhereUniqueInput
  }

  export type UsersUpdateOneRequiredWithoutFundingHistories_createdByNestedInput = {
    create?: XOR<UsersCreateWithoutFundingHistories_createdByInput, UsersUncheckedCreateWithoutFundingHistories_createdByInput>
    connectOrCreate?: UsersCreateOrConnectWithoutFundingHistories_createdByInput
    upsert?: UsersUpsertWithoutFundingHistories_createdByInput
    connect?: UsersWhereUniqueInput
    update?: XOR<XOR<UsersUpdateToOneWithWhereWithoutFundingHistories_createdByInput, UsersUpdateWithoutFundingHistories_createdByInput>, UsersUncheckedUpdateWithoutFundingHistories_createdByInput>
  }

  export type UsersCreateNestedOneWithoutReferenceData_ReferenceData_createdByToUsersInput = {
    create?: XOR<UsersCreateWithoutReferenceData_ReferenceData_createdByToUsersInput, UsersUncheckedCreateWithoutReferenceData_ReferenceData_createdByToUsersInput>
    connectOrCreate?: UsersCreateOrConnectWithoutReferenceData_ReferenceData_createdByToUsersInput
    connect?: UsersWhereUniqueInput
  }

  export type UsersCreateNestedOneWithoutReferenceData_ReferenceData_lastUpdatedByToUsersInput = {
    create?: XOR<UsersCreateWithoutReferenceData_ReferenceData_lastUpdatedByToUsersInput, UsersUncheckedCreateWithoutReferenceData_ReferenceData_lastUpdatedByToUsersInput>
    connectOrCreate?: UsersCreateOrConnectWithoutReferenceData_ReferenceData_lastUpdatedByToUsersInput
    connect?: UsersWhereUniqueInput
  }

  export type UsersUpdateOneRequiredWithoutReferenceData_ReferenceData_createdByToUsersNestedInput = {
    create?: XOR<UsersCreateWithoutReferenceData_ReferenceData_createdByToUsersInput, UsersUncheckedCreateWithoutReferenceData_ReferenceData_createdByToUsersInput>
    connectOrCreate?: UsersCreateOrConnectWithoutReferenceData_ReferenceData_createdByToUsersInput
    upsert?: UsersUpsertWithoutReferenceData_ReferenceData_createdByToUsersInput
    connect?: UsersWhereUniqueInput
    update?: XOR<XOR<UsersUpdateToOneWithWhereWithoutReferenceData_ReferenceData_createdByToUsersInput, UsersUpdateWithoutReferenceData_ReferenceData_createdByToUsersInput>, UsersUncheckedUpdateWithoutReferenceData_ReferenceData_createdByToUsersInput>
  }

  export type UsersUpdateOneWithoutReferenceData_ReferenceData_lastUpdatedByToUsersNestedInput = {
    create?: XOR<UsersCreateWithoutReferenceData_ReferenceData_lastUpdatedByToUsersInput, UsersUncheckedCreateWithoutReferenceData_ReferenceData_lastUpdatedByToUsersInput>
    connectOrCreate?: UsersCreateOrConnectWithoutReferenceData_ReferenceData_lastUpdatedByToUsersInput
    upsert?: UsersUpsertWithoutReferenceData_ReferenceData_lastUpdatedByToUsersInput
    disconnect?: UsersWhereInput | boolean
    delete?: UsersWhereInput | boolean
    connect?: UsersWhereUniqueInput
    update?: XOR<XOR<UsersUpdateToOneWithWhereWithoutReferenceData_ReferenceData_lastUpdatedByToUsersInput, UsersUpdateWithoutReferenceData_ReferenceData_lastUpdatedByToUsersInput>, UsersUncheckedUpdateWithoutReferenceData_ReferenceData_lastUpdatedByToUsersInput>
  }

  export type ReleaseNotesCreateimpactedSystemsInput = {
    set: string[]
  }

  export type UsersCreateNestedOneWithoutReleaseNotes_ReleaseNotes_approvedByToUsersInput = {
    create?: XOR<UsersCreateWithoutReleaseNotes_ReleaseNotes_approvedByToUsersInput, UsersUncheckedCreateWithoutReleaseNotes_ReleaseNotes_approvedByToUsersInput>
    connectOrCreate?: UsersCreateOrConnectWithoutReleaseNotes_ReleaseNotes_approvedByToUsersInput
    connect?: UsersWhereUniqueInput
  }

  export type UsersCreateNestedOneWithoutReleaseNotes_ReleaseNotes_createdByToUsersInput = {
    create?: XOR<UsersCreateWithoutReleaseNotes_ReleaseNotes_createdByToUsersInput, UsersUncheckedCreateWithoutReleaseNotes_ReleaseNotes_createdByToUsersInput>
    connectOrCreate?: UsersCreateOrConnectWithoutReleaseNotes_ReleaseNotes_createdByToUsersInput
    connect?: UsersWhereUniqueInput
  }

  export type Enumenum_ReleaseNotes_environmentFieldUpdateOperationsInput = {
    set?: $Enums.enum_ReleaseNotes_environment
  }

  export type Enumenum_ReleaseNotes_statusFieldUpdateOperationsInput = {
    set?: $Enums.enum_ReleaseNotes_status
  }

  export type ReleaseNotesUpdateimpactedSystemsInput = {
    set?: string[]
    push?: string | string[]
  }

  export type UsersUpdateOneWithoutReleaseNotes_ReleaseNotes_approvedByToUsersNestedInput = {
    create?: XOR<UsersCreateWithoutReleaseNotes_ReleaseNotes_approvedByToUsersInput, UsersUncheckedCreateWithoutReleaseNotes_ReleaseNotes_approvedByToUsersInput>
    connectOrCreate?: UsersCreateOrConnectWithoutReleaseNotes_ReleaseNotes_approvedByToUsersInput
    upsert?: UsersUpsertWithoutReleaseNotes_ReleaseNotes_approvedByToUsersInput
    disconnect?: UsersWhereInput | boolean
    delete?: UsersWhereInput | boolean
    connect?: UsersWhereUniqueInput
    update?: XOR<XOR<UsersUpdateToOneWithWhereWithoutReleaseNotes_ReleaseNotes_approvedByToUsersInput, UsersUpdateWithoutReleaseNotes_ReleaseNotes_approvedByToUsersInput>, UsersUncheckedUpdateWithoutReleaseNotes_ReleaseNotes_approvedByToUsersInput>
  }

  export type UsersUpdateOneRequiredWithoutReleaseNotes_ReleaseNotes_createdByToUsersNestedInput = {
    create?: XOR<UsersCreateWithoutReleaseNotes_ReleaseNotes_createdByToUsersInput, UsersUncheckedCreateWithoutReleaseNotes_ReleaseNotes_createdByToUsersInput>
    connectOrCreate?: UsersCreateOrConnectWithoutReleaseNotes_ReleaseNotes_createdByToUsersInput
    upsert?: UsersUpsertWithoutReleaseNotes_ReleaseNotes_createdByToUsersInput
    connect?: UsersWhereUniqueInput
    update?: XOR<XOR<UsersUpdateToOneWithWhereWithoutReleaseNotes_ReleaseNotes_createdByToUsersInput, UsersUpdateWithoutReleaseNotes_ReleaseNotes_createdByToUsersInput>, UsersUncheckedUpdateWithoutReleaseNotes_ReleaseNotes_createdByToUsersInput>
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type BcrsCreateNestedManyWithoutUsers_Bcrs_assignedToToUsersInput = {
    create?: XOR<BcrsCreateWithoutUsers_Bcrs_assignedToToUsersInput, BcrsUncheckedCreateWithoutUsers_Bcrs_assignedToToUsersInput> | BcrsCreateWithoutUsers_Bcrs_assignedToToUsersInput[] | BcrsUncheckedCreateWithoutUsers_Bcrs_assignedToToUsersInput[]
    connectOrCreate?: BcrsCreateOrConnectWithoutUsers_Bcrs_assignedToToUsersInput | BcrsCreateOrConnectWithoutUsers_Bcrs_assignedToToUsersInput[]
    createMany?: BcrsCreateManyUsers_Bcrs_assignedToToUsersInputEnvelope
    connect?: BcrsWhereUniqueInput | BcrsWhereUniqueInput[]
  }

  export type BcrsCreateNestedManyWithoutUsers_Bcrs_requestedByToUsersInput = {
    create?: XOR<BcrsCreateWithoutUsers_Bcrs_requestedByToUsersInput, BcrsUncheckedCreateWithoutUsers_Bcrs_requestedByToUsersInput> | BcrsCreateWithoutUsers_Bcrs_requestedByToUsersInput[] | BcrsUncheckedCreateWithoutUsers_Bcrs_requestedByToUsersInput[]
    connectOrCreate?: BcrsCreateOrConnectWithoutUsers_Bcrs_requestedByToUsersInput | BcrsCreateOrConnectWithoutUsers_Bcrs_requestedByToUsersInput[]
    createMany?: BcrsCreateManyUsers_Bcrs_requestedByToUsersInputEnvelope
    connect?: BcrsWhereUniqueInput | BcrsWhereUniqueInput[]
  }

  export type FundingsCreateNestedManyWithoutUsers_Fundings_createdByToUsersInput = {
    create?: XOR<FundingsCreateWithoutUsers_Fundings_createdByToUsersInput, FundingsUncheckedCreateWithoutUsers_Fundings_createdByToUsersInput> | FundingsCreateWithoutUsers_Fundings_createdByToUsersInput[] | FundingsUncheckedCreateWithoutUsers_Fundings_createdByToUsersInput[]
    connectOrCreate?: FundingsCreateOrConnectWithoutUsers_Fundings_createdByToUsersInput | FundingsCreateOrConnectWithoutUsers_Fundings_createdByToUsersInput[]
    createMany?: FundingsCreateManyUsers_Fundings_createdByToUsersInputEnvelope
    connect?: FundingsWhereUniqueInput | FundingsWhereUniqueInput[]
  }

  export type FundingsCreateNestedManyWithoutUsers_Fundings_lastUpdatedByToUsersInput = {
    create?: XOR<FundingsCreateWithoutUsers_Fundings_lastUpdatedByToUsersInput, FundingsUncheckedCreateWithoutUsers_Fundings_lastUpdatedByToUsersInput> | FundingsCreateWithoutUsers_Fundings_lastUpdatedByToUsersInput[] | FundingsUncheckedCreateWithoutUsers_Fundings_lastUpdatedByToUsersInput[]
    connectOrCreate?: FundingsCreateOrConnectWithoutUsers_Fundings_lastUpdatedByToUsersInput | FundingsCreateOrConnectWithoutUsers_Fundings_lastUpdatedByToUsersInput[]
    createMany?: FundingsCreateManyUsers_Fundings_lastUpdatedByToUsersInputEnvelope
    connect?: FundingsWhereUniqueInput | FundingsWhereUniqueInput[]
  }

  export type FundingRequirementsCreateNestedManyWithoutCreatorInput = {
    create?: XOR<FundingRequirementsCreateWithoutCreatorInput, FundingRequirementsUncheckedCreateWithoutCreatorInput> | FundingRequirementsCreateWithoutCreatorInput[] | FundingRequirementsUncheckedCreateWithoutCreatorInput[]
    connectOrCreate?: FundingRequirementsCreateOrConnectWithoutCreatorInput | FundingRequirementsCreateOrConnectWithoutCreatorInput[]
    createMany?: FundingRequirementsCreateManyCreatorInputEnvelope
    connect?: FundingRequirementsWhereUniqueInput | FundingRequirementsWhereUniqueInput[]
  }

  export type FundingRequirementsCreateNestedManyWithoutUpdaterInput = {
    create?: XOR<FundingRequirementsCreateWithoutUpdaterInput, FundingRequirementsUncheckedCreateWithoutUpdaterInput> | FundingRequirementsCreateWithoutUpdaterInput[] | FundingRequirementsUncheckedCreateWithoutUpdaterInput[]
    connectOrCreate?: FundingRequirementsCreateOrConnectWithoutUpdaterInput | FundingRequirementsCreateOrConnectWithoutUpdaterInput[]
    createMany?: FundingRequirementsCreateManyUpdaterInputEnvelope
    connect?: FundingRequirementsWhereUniqueInput | FundingRequirementsWhereUniqueInput[]
  }

  export type FundingHistoriesCreateNestedManyWithoutCreatorInput = {
    create?: XOR<FundingHistoriesCreateWithoutCreatorInput, FundingHistoriesUncheckedCreateWithoutCreatorInput> | FundingHistoriesCreateWithoutCreatorInput[] | FundingHistoriesUncheckedCreateWithoutCreatorInput[]
    connectOrCreate?: FundingHistoriesCreateOrConnectWithoutCreatorInput | FundingHistoriesCreateOrConnectWithoutCreatorInput[]
    createMany?: FundingHistoriesCreateManyCreatorInputEnvelope
    connect?: FundingHistoriesWhereUniqueInput | FundingHistoriesWhereUniqueInput[]
  }

  export type ReferenceDataCreateNestedManyWithoutUsers_ReferenceData_createdByToUsersInput = {
    create?: XOR<ReferenceDataCreateWithoutUsers_ReferenceData_createdByToUsersInput, ReferenceDataUncheckedCreateWithoutUsers_ReferenceData_createdByToUsersInput> | ReferenceDataCreateWithoutUsers_ReferenceData_createdByToUsersInput[] | ReferenceDataUncheckedCreateWithoutUsers_ReferenceData_createdByToUsersInput[]
    connectOrCreate?: ReferenceDataCreateOrConnectWithoutUsers_ReferenceData_createdByToUsersInput | ReferenceDataCreateOrConnectWithoutUsers_ReferenceData_createdByToUsersInput[]
    createMany?: ReferenceDataCreateManyUsers_ReferenceData_createdByToUsersInputEnvelope
    connect?: ReferenceDataWhereUniqueInput | ReferenceDataWhereUniqueInput[]
  }

  export type ReferenceDataCreateNestedManyWithoutUsers_ReferenceData_lastUpdatedByToUsersInput = {
    create?: XOR<ReferenceDataCreateWithoutUsers_ReferenceData_lastUpdatedByToUsersInput, ReferenceDataUncheckedCreateWithoutUsers_ReferenceData_lastUpdatedByToUsersInput> | ReferenceDataCreateWithoutUsers_ReferenceData_lastUpdatedByToUsersInput[] | ReferenceDataUncheckedCreateWithoutUsers_ReferenceData_lastUpdatedByToUsersInput[]
    connectOrCreate?: ReferenceDataCreateOrConnectWithoutUsers_ReferenceData_lastUpdatedByToUsersInput | ReferenceDataCreateOrConnectWithoutUsers_ReferenceData_lastUpdatedByToUsersInput[]
    createMany?: ReferenceDataCreateManyUsers_ReferenceData_lastUpdatedByToUsersInputEnvelope
    connect?: ReferenceDataWhereUniqueInput | ReferenceDataWhereUniqueInput[]
  }

  export type ReleaseNotesCreateNestedManyWithoutUsers_ReleaseNotes_approvedByToUsersInput = {
    create?: XOR<ReleaseNotesCreateWithoutUsers_ReleaseNotes_approvedByToUsersInput, ReleaseNotesUncheckedCreateWithoutUsers_ReleaseNotes_approvedByToUsersInput> | ReleaseNotesCreateWithoutUsers_ReleaseNotes_approvedByToUsersInput[] | ReleaseNotesUncheckedCreateWithoutUsers_ReleaseNotes_approvedByToUsersInput[]
    connectOrCreate?: ReleaseNotesCreateOrConnectWithoutUsers_ReleaseNotes_approvedByToUsersInput | ReleaseNotesCreateOrConnectWithoutUsers_ReleaseNotes_approvedByToUsersInput[]
    createMany?: ReleaseNotesCreateManyUsers_ReleaseNotes_approvedByToUsersInputEnvelope
    connect?: ReleaseNotesWhereUniqueInput | ReleaseNotesWhereUniqueInput[]
  }

  export type ReleaseNotesCreateNestedManyWithoutUsers_ReleaseNotes_createdByToUsersInput = {
    create?: XOR<ReleaseNotesCreateWithoutUsers_ReleaseNotes_createdByToUsersInput, ReleaseNotesUncheckedCreateWithoutUsers_ReleaseNotes_createdByToUsersInput> | ReleaseNotesCreateWithoutUsers_ReleaseNotes_createdByToUsersInput[] | ReleaseNotesUncheckedCreateWithoutUsers_ReleaseNotes_createdByToUsersInput[]
    connectOrCreate?: ReleaseNotesCreateOrConnectWithoutUsers_ReleaseNotes_createdByToUsersInput | ReleaseNotesCreateOrConnectWithoutUsers_ReleaseNotes_createdByToUsersInput[]
    createMany?: ReleaseNotesCreateManyUsers_ReleaseNotes_createdByToUsersInputEnvelope
    connect?: ReleaseNotesWhereUniqueInput | ReleaseNotesWhereUniqueInput[]
  }

  export type BcrsUncheckedCreateNestedManyWithoutUsers_Bcrs_assignedToToUsersInput = {
    create?: XOR<BcrsCreateWithoutUsers_Bcrs_assignedToToUsersInput, BcrsUncheckedCreateWithoutUsers_Bcrs_assignedToToUsersInput> | BcrsCreateWithoutUsers_Bcrs_assignedToToUsersInput[] | BcrsUncheckedCreateWithoutUsers_Bcrs_assignedToToUsersInput[]
    connectOrCreate?: BcrsCreateOrConnectWithoutUsers_Bcrs_assignedToToUsersInput | BcrsCreateOrConnectWithoutUsers_Bcrs_assignedToToUsersInput[]
    createMany?: BcrsCreateManyUsers_Bcrs_assignedToToUsersInputEnvelope
    connect?: BcrsWhereUniqueInput | BcrsWhereUniqueInput[]
  }

  export type BcrsUncheckedCreateNestedManyWithoutUsers_Bcrs_requestedByToUsersInput = {
    create?: XOR<BcrsCreateWithoutUsers_Bcrs_requestedByToUsersInput, BcrsUncheckedCreateWithoutUsers_Bcrs_requestedByToUsersInput> | BcrsCreateWithoutUsers_Bcrs_requestedByToUsersInput[] | BcrsUncheckedCreateWithoutUsers_Bcrs_requestedByToUsersInput[]
    connectOrCreate?: BcrsCreateOrConnectWithoutUsers_Bcrs_requestedByToUsersInput | BcrsCreateOrConnectWithoutUsers_Bcrs_requestedByToUsersInput[]
    createMany?: BcrsCreateManyUsers_Bcrs_requestedByToUsersInputEnvelope
    connect?: BcrsWhereUniqueInput | BcrsWhereUniqueInput[]
  }

  export type FundingsUncheckedCreateNestedManyWithoutUsers_Fundings_createdByToUsersInput = {
    create?: XOR<FundingsCreateWithoutUsers_Fundings_createdByToUsersInput, FundingsUncheckedCreateWithoutUsers_Fundings_createdByToUsersInput> | FundingsCreateWithoutUsers_Fundings_createdByToUsersInput[] | FundingsUncheckedCreateWithoutUsers_Fundings_createdByToUsersInput[]
    connectOrCreate?: FundingsCreateOrConnectWithoutUsers_Fundings_createdByToUsersInput | FundingsCreateOrConnectWithoutUsers_Fundings_createdByToUsersInput[]
    createMany?: FundingsCreateManyUsers_Fundings_createdByToUsersInputEnvelope
    connect?: FundingsWhereUniqueInput | FundingsWhereUniqueInput[]
  }

  export type FundingsUncheckedCreateNestedManyWithoutUsers_Fundings_lastUpdatedByToUsersInput = {
    create?: XOR<FundingsCreateWithoutUsers_Fundings_lastUpdatedByToUsersInput, FundingsUncheckedCreateWithoutUsers_Fundings_lastUpdatedByToUsersInput> | FundingsCreateWithoutUsers_Fundings_lastUpdatedByToUsersInput[] | FundingsUncheckedCreateWithoutUsers_Fundings_lastUpdatedByToUsersInput[]
    connectOrCreate?: FundingsCreateOrConnectWithoutUsers_Fundings_lastUpdatedByToUsersInput | FundingsCreateOrConnectWithoutUsers_Fundings_lastUpdatedByToUsersInput[]
    createMany?: FundingsCreateManyUsers_Fundings_lastUpdatedByToUsersInputEnvelope
    connect?: FundingsWhereUniqueInput | FundingsWhereUniqueInput[]
  }

  export type FundingRequirementsUncheckedCreateNestedManyWithoutCreatorInput = {
    create?: XOR<FundingRequirementsCreateWithoutCreatorInput, FundingRequirementsUncheckedCreateWithoutCreatorInput> | FundingRequirementsCreateWithoutCreatorInput[] | FundingRequirementsUncheckedCreateWithoutCreatorInput[]
    connectOrCreate?: FundingRequirementsCreateOrConnectWithoutCreatorInput | FundingRequirementsCreateOrConnectWithoutCreatorInput[]
    createMany?: FundingRequirementsCreateManyCreatorInputEnvelope
    connect?: FundingRequirementsWhereUniqueInput | FundingRequirementsWhereUniqueInput[]
  }

  export type FundingRequirementsUncheckedCreateNestedManyWithoutUpdaterInput = {
    create?: XOR<FundingRequirementsCreateWithoutUpdaterInput, FundingRequirementsUncheckedCreateWithoutUpdaterInput> | FundingRequirementsCreateWithoutUpdaterInput[] | FundingRequirementsUncheckedCreateWithoutUpdaterInput[]
    connectOrCreate?: FundingRequirementsCreateOrConnectWithoutUpdaterInput | FundingRequirementsCreateOrConnectWithoutUpdaterInput[]
    createMany?: FundingRequirementsCreateManyUpdaterInputEnvelope
    connect?: FundingRequirementsWhereUniqueInput | FundingRequirementsWhereUniqueInput[]
  }

  export type FundingHistoriesUncheckedCreateNestedManyWithoutCreatorInput = {
    create?: XOR<FundingHistoriesCreateWithoutCreatorInput, FundingHistoriesUncheckedCreateWithoutCreatorInput> | FundingHistoriesCreateWithoutCreatorInput[] | FundingHistoriesUncheckedCreateWithoutCreatorInput[]
    connectOrCreate?: FundingHistoriesCreateOrConnectWithoutCreatorInput | FundingHistoriesCreateOrConnectWithoutCreatorInput[]
    createMany?: FundingHistoriesCreateManyCreatorInputEnvelope
    connect?: FundingHistoriesWhereUniqueInput | FundingHistoriesWhereUniqueInput[]
  }

  export type ReferenceDataUncheckedCreateNestedManyWithoutUsers_ReferenceData_createdByToUsersInput = {
    create?: XOR<ReferenceDataCreateWithoutUsers_ReferenceData_createdByToUsersInput, ReferenceDataUncheckedCreateWithoutUsers_ReferenceData_createdByToUsersInput> | ReferenceDataCreateWithoutUsers_ReferenceData_createdByToUsersInput[] | ReferenceDataUncheckedCreateWithoutUsers_ReferenceData_createdByToUsersInput[]
    connectOrCreate?: ReferenceDataCreateOrConnectWithoutUsers_ReferenceData_createdByToUsersInput | ReferenceDataCreateOrConnectWithoutUsers_ReferenceData_createdByToUsersInput[]
    createMany?: ReferenceDataCreateManyUsers_ReferenceData_createdByToUsersInputEnvelope
    connect?: ReferenceDataWhereUniqueInput | ReferenceDataWhereUniqueInput[]
  }

  export type ReferenceDataUncheckedCreateNestedManyWithoutUsers_ReferenceData_lastUpdatedByToUsersInput = {
    create?: XOR<ReferenceDataCreateWithoutUsers_ReferenceData_lastUpdatedByToUsersInput, ReferenceDataUncheckedCreateWithoutUsers_ReferenceData_lastUpdatedByToUsersInput> | ReferenceDataCreateWithoutUsers_ReferenceData_lastUpdatedByToUsersInput[] | ReferenceDataUncheckedCreateWithoutUsers_ReferenceData_lastUpdatedByToUsersInput[]
    connectOrCreate?: ReferenceDataCreateOrConnectWithoutUsers_ReferenceData_lastUpdatedByToUsersInput | ReferenceDataCreateOrConnectWithoutUsers_ReferenceData_lastUpdatedByToUsersInput[]
    createMany?: ReferenceDataCreateManyUsers_ReferenceData_lastUpdatedByToUsersInputEnvelope
    connect?: ReferenceDataWhereUniqueInput | ReferenceDataWhereUniqueInput[]
  }

  export type ReleaseNotesUncheckedCreateNestedManyWithoutUsers_ReleaseNotes_approvedByToUsersInput = {
    create?: XOR<ReleaseNotesCreateWithoutUsers_ReleaseNotes_approvedByToUsersInput, ReleaseNotesUncheckedCreateWithoutUsers_ReleaseNotes_approvedByToUsersInput> | ReleaseNotesCreateWithoutUsers_ReleaseNotes_approvedByToUsersInput[] | ReleaseNotesUncheckedCreateWithoutUsers_ReleaseNotes_approvedByToUsersInput[]
    connectOrCreate?: ReleaseNotesCreateOrConnectWithoutUsers_ReleaseNotes_approvedByToUsersInput | ReleaseNotesCreateOrConnectWithoutUsers_ReleaseNotes_approvedByToUsersInput[]
    createMany?: ReleaseNotesCreateManyUsers_ReleaseNotes_approvedByToUsersInputEnvelope
    connect?: ReleaseNotesWhereUniqueInput | ReleaseNotesWhereUniqueInput[]
  }

  export type ReleaseNotesUncheckedCreateNestedManyWithoutUsers_ReleaseNotes_createdByToUsersInput = {
    create?: XOR<ReleaseNotesCreateWithoutUsers_ReleaseNotes_createdByToUsersInput, ReleaseNotesUncheckedCreateWithoutUsers_ReleaseNotes_createdByToUsersInput> | ReleaseNotesCreateWithoutUsers_ReleaseNotes_createdByToUsersInput[] | ReleaseNotesUncheckedCreateWithoutUsers_ReleaseNotes_createdByToUsersInput[]
    connectOrCreate?: ReleaseNotesCreateOrConnectWithoutUsers_ReleaseNotes_createdByToUsersInput | ReleaseNotesCreateOrConnectWithoutUsers_ReleaseNotes_createdByToUsersInput[]
    createMany?: ReleaseNotesCreateManyUsers_ReleaseNotes_createdByToUsersInputEnvelope
    connect?: ReleaseNotesWhereUniqueInput | ReleaseNotesWhereUniqueInput[]
  }

  export type Enumenum_Users_roleFieldUpdateOperationsInput = {
    set?: $Enums.enum_Users_role
  }

  export type BcrsUpdateManyWithoutUsers_Bcrs_assignedToToUsersNestedInput = {
    create?: XOR<BcrsCreateWithoutUsers_Bcrs_assignedToToUsersInput, BcrsUncheckedCreateWithoutUsers_Bcrs_assignedToToUsersInput> | BcrsCreateWithoutUsers_Bcrs_assignedToToUsersInput[] | BcrsUncheckedCreateWithoutUsers_Bcrs_assignedToToUsersInput[]
    connectOrCreate?: BcrsCreateOrConnectWithoutUsers_Bcrs_assignedToToUsersInput | BcrsCreateOrConnectWithoutUsers_Bcrs_assignedToToUsersInput[]
    upsert?: BcrsUpsertWithWhereUniqueWithoutUsers_Bcrs_assignedToToUsersInput | BcrsUpsertWithWhereUniqueWithoutUsers_Bcrs_assignedToToUsersInput[]
    createMany?: BcrsCreateManyUsers_Bcrs_assignedToToUsersInputEnvelope
    set?: BcrsWhereUniqueInput | BcrsWhereUniqueInput[]
    disconnect?: BcrsWhereUniqueInput | BcrsWhereUniqueInput[]
    delete?: BcrsWhereUniqueInput | BcrsWhereUniqueInput[]
    connect?: BcrsWhereUniqueInput | BcrsWhereUniqueInput[]
    update?: BcrsUpdateWithWhereUniqueWithoutUsers_Bcrs_assignedToToUsersInput | BcrsUpdateWithWhereUniqueWithoutUsers_Bcrs_assignedToToUsersInput[]
    updateMany?: BcrsUpdateManyWithWhereWithoutUsers_Bcrs_assignedToToUsersInput | BcrsUpdateManyWithWhereWithoutUsers_Bcrs_assignedToToUsersInput[]
    deleteMany?: BcrsScalarWhereInput | BcrsScalarWhereInput[]
  }

  export type BcrsUpdateManyWithoutUsers_Bcrs_requestedByToUsersNestedInput = {
    create?: XOR<BcrsCreateWithoutUsers_Bcrs_requestedByToUsersInput, BcrsUncheckedCreateWithoutUsers_Bcrs_requestedByToUsersInput> | BcrsCreateWithoutUsers_Bcrs_requestedByToUsersInput[] | BcrsUncheckedCreateWithoutUsers_Bcrs_requestedByToUsersInput[]
    connectOrCreate?: BcrsCreateOrConnectWithoutUsers_Bcrs_requestedByToUsersInput | BcrsCreateOrConnectWithoutUsers_Bcrs_requestedByToUsersInput[]
    upsert?: BcrsUpsertWithWhereUniqueWithoutUsers_Bcrs_requestedByToUsersInput | BcrsUpsertWithWhereUniqueWithoutUsers_Bcrs_requestedByToUsersInput[]
    createMany?: BcrsCreateManyUsers_Bcrs_requestedByToUsersInputEnvelope
    set?: BcrsWhereUniqueInput | BcrsWhereUniqueInput[]
    disconnect?: BcrsWhereUniqueInput | BcrsWhereUniqueInput[]
    delete?: BcrsWhereUniqueInput | BcrsWhereUniqueInput[]
    connect?: BcrsWhereUniqueInput | BcrsWhereUniqueInput[]
    update?: BcrsUpdateWithWhereUniqueWithoutUsers_Bcrs_requestedByToUsersInput | BcrsUpdateWithWhereUniqueWithoutUsers_Bcrs_requestedByToUsersInput[]
    updateMany?: BcrsUpdateManyWithWhereWithoutUsers_Bcrs_requestedByToUsersInput | BcrsUpdateManyWithWhereWithoutUsers_Bcrs_requestedByToUsersInput[]
    deleteMany?: BcrsScalarWhereInput | BcrsScalarWhereInput[]
  }

  export type FundingsUpdateManyWithoutUsers_Fundings_createdByToUsersNestedInput = {
    create?: XOR<FundingsCreateWithoutUsers_Fundings_createdByToUsersInput, FundingsUncheckedCreateWithoutUsers_Fundings_createdByToUsersInput> | FundingsCreateWithoutUsers_Fundings_createdByToUsersInput[] | FundingsUncheckedCreateWithoutUsers_Fundings_createdByToUsersInput[]
    connectOrCreate?: FundingsCreateOrConnectWithoutUsers_Fundings_createdByToUsersInput | FundingsCreateOrConnectWithoutUsers_Fundings_createdByToUsersInput[]
    upsert?: FundingsUpsertWithWhereUniqueWithoutUsers_Fundings_createdByToUsersInput | FundingsUpsertWithWhereUniqueWithoutUsers_Fundings_createdByToUsersInput[]
    createMany?: FundingsCreateManyUsers_Fundings_createdByToUsersInputEnvelope
    set?: FundingsWhereUniqueInput | FundingsWhereUniqueInput[]
    disconnect?: FundingsWhereUniqueInput | FundingsWhereUniqueInput[]
    delete?: FundingsWhereUniqueInput | FundingsWhereUniqueInput[]
    connect?: FundingsWhereUniqueInput | FundingsWhereUniqueInput[]
    update?: FundingsUpdateWithWhereUniqueWithoutUsers_Fundings_createdByToUsersInput | FundingsUpdateWithWhereUniqueWithoutUsers_Fundings_createdByToUsersInput[]
    updateMany?: FundingsUpdateManyWithWhereWithoutUsers_Fundings_createdByToUsersInput | FundingsUpdateManyWithWhereWithoutUsers_Fundings_createdByToUsersInput[]
    deleteMany?: FundingsScalarWhereInput | FundingsScalarWhereInput[]
  }

  export type FundingsUpdateManyWithoutUsers_Fundings_lastUpdatedByToUsersNestedInput = {
    create?: XOR<FundingsCreateWithoutUsers_Fundings_lastUpdatedByToUsersInput, FundingsUncheckedCreateWithoutUsers_Fundings_lastUpdatedByToUsersInput> | FundingsCreateWithoutUsers_Fundings_lastUpdatedByToUsersInput[] | FundingsUncheckedCreateWithoutUsers_Fundings_lastUpdatedByToUsersInput[]
    connectOrCreate?: FundingsCreateOrConnectWithoutUsers_Fundings_lastUpdatedByToUsersInput | FundingsCreateOrConnectWithoutUsers_Fundings_lastUpdatedByToUsersInput[]
    upsert?: FundingsUpsertWithWhereUniqueWithoutUsers_Fundings_lastUpdatedByToUsersInput | FundingsUpsertWithWhereUniqueWithoutUsers_Fundings_lastUpdatedByToUsersInput[]
    createMany?: FundingsCreateManyUsers_Fundings_lastUpdatedByToUsersInputEnvelope
    set?: FundingsWhereUniqueInput | FundingsWhereUniqueInput[]
    disconnect?: FundingsWhereUniqueInput | FundingsWhereUniqueInput[]
    delete?: FundingsWhereUniqueInput | FundingsWhereUniqueInput[]
    connect?: FundingsWhereUniqueInput | FundingsWhereUniqueInput[]
    update?: FundingsUpdateWithWhereUniqueWithoutUsers_Fundings_lastUpdatedByToUsersInput | FundingsUpdateWithWhereUniqueWithoutUsers_Fundings_lastUpdatedByToUsersInput[]
    updateMany?: FundingsUpdateManyWithWhereWithoutUsers_Fundings_lastUpdatedByToUsersInput | FundingsUpdateManyWithWhereWithoutUsers_Fundings_lastUpdatedByToUsersInput[]
    deleteMany?: FundingsScalarWhereInput | FundingsScalarWhereInput[]
  }

  export type FundingRequirementsUpdateManyWithoutCreatorNestedInput = {
    create?: XOR<FundingRequirementsCreateWithoutCreatorInput, FundingRequirementsUncheckedCreateWithoutCreatorInput> | FundingRequirementsCreateWithoutCreatorInput[] | FundingRequirementsUncheckedCreateWithoutCreatorInput[]
    connectOrCreate?: FundingRequirementsCreateOrConnectWithoutCreatorInput | FundingRequirementsCreateOrConnectWithoutCreatorInput[]
    upsert?: FundingRequirementsUpsertWithWhereUniqueWithoutCreatorInput | FundingRequirementsUpsertWithWhereUniqueWithoutCreatorInput[]
    createMany?: FundingRequirementsCreateManyCreatorInputEnvelope
    set?: FundingRequirementsWhereUniqueInput | FundingRequirementsWhereUniqueInput[]
    disconnect?: FundingRequirementsWhereUniqueInput | FundingRequirementsWhereUniqueInput[]
    delete?: FundingRequirementsWhereUniqueInput | FundingRequirementsWhereUniqueInput[]
    connect?: FundingRequirementsWhereUniqueInput | FundingRequirementsWhereUniqueInput[]
    update?: FundingRequirementsUpdateWithWhereUniqueWithoutCreatorInput | FundingRequirementsUpdateWithWhereUniqueWithoutCreatorInput[]
    updateMany?: FundingRequirementsUpdateManyWithWhereWithoutCreatorInput | FundingRequirementsUpdateManyWithWhereWithoutCreatorInput[]
    deleteMany?: FundingRequirementsScalarWhereInput | FundingRequirementsScalarWhereInput[]
  }

  export type FundingRequirementsUpdateManyWithoutUpdaterNestedInput = {
    create?: XOR<FundingRequirementsCreateWithoutUpdaterInput, FundingRequirementsUncheckedCreateWithoutUpdaterInput> | FundingRequirementsCreateWithoutUpdaterInput[] | FundingRequirementsUncheckedCreateWithoutUpdaterInput[]
    connectOrCreate?: FundingRequirementsCreateOrConnectWithoutUpdaterInput | FundingRequirementsCreateOrConnectWithoutUpdaterInput[]
    upsert?: FundingRequirementsUpsertWithWhereUniqueWithoutUpdaterInput | FundingRequirementsUpsertWithWhereUniqueWithoutUpdaterInput[]
    createMany?: FundingRequirementsCreateManyUpdaterInputEnvelope
    set?: FundingRequirementsWhereUniqueInput | FundingRequirementsWhereUniqueInput[]
    disconnect?: FundingRequirementsWhereUniqueInput | FundingRequirementsWhereUniqueInput[]
    delete?: FundingRequirementsWhereUniqueInput | FundingRequirementsWhereUniqueInput[]
    connect?: FundingRequirementsWhereUniqueInput | FundingRequirementsWhereUniqueInput[]
    update?: FundingRequirementsUpdateWithWhereUniqueWithoutUpdaterInput | FundingRequirementsUpdateWithWhereUniqueWithoutUpdaterInput[]
    updateMany?: FundingRequirementsUpdateManyWithWhereWithoutUpdaterInput | FundingRequirementsUpdateManyWithWhereWithoutUpdaterInput[]
    deleteMany?: FundingRequirementsScalarWhereInput | FundingRequirementsScalarWhereInput[]
  }

  export type FundingHistoriesUpdateManyWithoutCreatorNestedInput = {
    create?: XOR<FundingHistoriesCreateWithoutCreatorInput, FundingHistoriesUncheckedCreateWithoutCreatorInput> | FundingHistoriesCreateWithoutCreatorInput[] | FundingHistoriesUncheckedCreateWithoutCreatorInput[]
    connectOrCreate?: FundingHistoriesCreateOrConnectWithoutCreatorInput | FundingHistoriesCreateOrConnectWithoutCreatorInput[]
    upsert?: FundingHistoriesUpsertWithWhereUniqueWithoutCreatorInput | FundingHistoriesUpsertWithWhereUniqueWithoutCreatorInput[]
    createMany?: FundingHistoriesCreateManyCreatorInputEnvelope
    set?: FundingHistoriesWhereUniqueInput | FundingHistoriesWhereUniqueInput[]
    disconnect?: FundingHistoriesWhereUniqueInput | FundingHistoriesWhereUniqueInput[]
    delete?: FundingHistoriesWhereUniqueInput | FundingHistoriesWhereUniqueInput[]
    connect?: FundingHistoriesWhereUniqueInput | FundingHistoriesWhereUniqueInput[]
    update?: FundingHistoriesUpdateWithWhereUniqueWithoutCreatorInput | FundingHistoriesUpdateWithWhereUniqueWithoutCreatorInput[]
    updateMany?: FundingHistoriesUpdateManyWithWhereWithoutCreatorInput | FundingHistoriesUpdateManyWithWhereWithoutCreatorInput[]
    deleteMany?: FundingHistoriesScalarWhereInput | FundingHistoriesScalarWhereInput[]
  }

  export type ReferenceDataUpdateManyWithoutUsers_ReferenceData_createdByToUsersNestedInput = {
    create?: XOR<ReferenceDataCreateWithoutUsers_ReferenceData_createdByToUsersInput, ReferenceDataUncheckedCreateWithoutUsers_ReferenceData_createdByToUsersInput> | ReferenceDataCreateWithoutUsers_ReferenceData_createdByToUsersInput[] | ReferenceDataUncheckedCreateWithoutUsers_ReferenceData_createdByToUsersInput[]
    connectOrCreate?: ReferenceDataCreateOrConnectWithoutUsers_ReferenceData_createdByToUsersInput | ReferenceDataCreateOrConnectWithoutUsers_ReferenceData_createdByToUsersInput[]
    upsert?: ReferenceDataUpsertWithWhereUniqueWithoutUsers_ReferenceData_createdByToUsersInput | ReferenceDataUpsertWithWhereUniqueWithoutUsers_ReferenceData_createdByToUsersInput[]
    createMany?: ReferenceDataCreateManyUsers_ReferenceData_createdByToUsersInputEnvelope
    set?: ReferenceDataWhereUniqueInput | ReferenceDataWhereUniqueInput[]
    disconnect?: ReferenceDataWhereUniqueInput | ReferenceDataWhereUniqueInput[]
    delete?: ReferenceDataWhereUniqueInput | ReferenceDataWhereUniqueInput[]
    connect?: ReferenceDataWhereUniqueInput | ReferenceDataWhereUniqueInput[]
    update?: ReferenceDataUpdateWithWhereUniqueWithoutUsers_ReferenceData_createdByToUsersInput | ReferenceDataUpdateWithWhereUniqueWithoutUsers_ReferenceData_createdByToUsersInput[]
    updateMany?: ReferenceDataUpdateManyWithWhereWithoutUsers_ReferenceData_createdByToUsersInput | ReferenceDataUpdateManyWithWhereWithoutUsers_ReferenceData_createdByToUsersInput[]
    deleteMany?: ReferenceDataScalarWhereInput | ReferenceDataScalarWhereInput[]
  }

  export type ReferenceDataUpdateManyWithoutUsers_ReferenceData_lastUpdatedByToUsersNestedInput = {
    create?: XOR<ReferenceDataCreateWithoutUsers_ReferenceData_lastUpdatedByToUsersInput, ReferenceDataUncheckedCreateWithoutUsers_ReferenceData_lastUpdatedByToUsersInput> | ReferenceDataCreateWithoutUsers_ReferenceData_lastUpdatedByToUsersInput[] | ReferenceDataUncheckedCreateWithoutUsers_ReferenceData_lastUpdatedByToUsersInput[]
    connectOrCreate?: ReferenceDataCreateOrConnectWithoutUsers_ReferenceData_lastUpdatedByToUsersInput | ReferenceDataCreateOrConnectWithoutUsers_ReferenceData_lastUpdatedByToUsersInput[]
    upsert?: ReferenceDataUpsertWithWhereUniqueWithoutUsers_ReferenceData_lastUpdatedByToUsersInput | ReferenceDataUpsertWithWhereUniqueWithoutUsers_ReferenceData_lastUpdatedByToUsersInput[]
    createMany?: ReferenceDataCreateManyUsers_ReferenceData_lastUpdatedByToUsersInputEnvelope
    set?: ReferenceDataWhereUniqueInput | ReferenceDataWhereUniqueInput[]
    disconnect?: ReferenceDataWhereUniqueInput | ReferenceDataWhereUniqueInput[]
    delete?: ReferenceDataWhereUniqueInput | ReferenceDataWhereUniqueInput[]
    connect?: ReferenceDataWhereUniqueInput | ReferenceDataWhereUniqueInput[]
    update?: ReferenceDataUpdateWithWhereUniqueWithoutUsers_ReferenceData_lastUpdatedByToUsersInput | ReferenceDataUpdateWithWhereUniqueWithoutUsers_ReferenceData_lastUpdatedByToUsersInput[]
    updateMany?: ReferenceDataUpdateManyWithWhereWithoutUsers_ReferenceData_lastUpdatedByToUsersInput | ReferenceDataUpdateManyWithWhereWithoutUsers_ReferenceData_lastUpdatedByToUsersInput[]
    deleteMany?: ReferenceDataScalarWhereInput | ReferenceDataScalarWhereInput[]
  }

  export type ReleaseNotesUpdateManyWithoutUsers_ReleaseNotes_approvedByToUsersNestedInput = {
    create?: XOR<ReleaseNotesCreateWithoutUsers_ReleaseNotes_approvedByToUsersInput, ReleaseNotesUncheckedCreateWithoutUsers_ReleaseNotes_approvedByToUsersInput> | ReleaseNotesCreateWithoutUsers_ReleaseNotes_approvedByToUsersInput[] | ReleaseNotesUncheckedCreateWithoutUsers_ReleaseNotes_approvedByToUsersInput[]
    connectOrCreate?: ReleaseNotesCreateOrConnectWithoutUsers_ReleaseNotes_approvedByToUsersInput | ReleaseNotesCreateOrConnectWithoutUsers_ReleaseNotes_approvedByToUsersInput[]
    upsert?: ReleaseNotesUpsertWithWhereUniqueWithoutUsers_ReleaseNotes_approvedByToUsersInput | ReleaseNotesUpsertWithWhereUniqueWithoutUsers_ReleaseNotes_approvedByToUsersInput[]
    createMany?: ReleaseNotesCreateManyUsers_ReleaseNotes_approvedByToUsersInputEnvelope
    set?: ReleaseNotesWhereUniqueInput | ReleaseNotesWhereUniqueInput[]
    disconnect?: ReleaseNotesWhereUniqueInput | ReleaseNotesWhereUniqueInput[]
    delete?: ReleaseNotesWhereUniqueInput | ReleaseNotesWhereUniqueInput[]
    connect?: ReleaseNotesWhereUniqueInput | ReleaseNotesWhereUniqueInput[]
    update?: ReleaseNotesUpdateWithWhereUniqueWithoutUsers_ReleaseNotes_approvedByToUsersInput | ReleaseNotesUpdateWithWhereUniqueWithoutUsers_ReleaseNotes_approvedByToUsersInput[]
    updateMany?: ReleaseNotesUpdateManyWithWhereWithoutUsers_ReleaseNotes_approvedByToUsersInput | ReleaseNotesUpdateManyWithWhereWithoutUsers_ReleaseNotes_approvedByToUsersInput[]
    deleteMany?: ReleaseNotesScalarWhereInput | ReleaseNotesScalarWhereInput[]
  }

  export type ReleaseNotesUpdateManyWithoutUsers_ReleaseNotes_createdByToUsersNestedInput = {
    create?: XOR<ReleaseNotesCreateWithoutUsers_ReleaseNotes_createdByToUsersInput, ReleaseNotesUncheckedCreateWithoutUsers_ReleaseNotes_createdByToUsersInput> | ReleaseNotesCreateWithoutUsers_ReleaseNotes_createdByToUsersInput[] | ReleaseNotesUncheckedCreateWithoutUsers_ReleaseNotes_createdByToUsersInput[]
    connectOrCreate?: ReleaseNotesCreateOrConnectWithoutUsers_ReleaseNotes_createdByToUsersInput | ReleaseNotesCreateOrConnectWithoutUsers_ReleaseNotes_createdByToUsersInput[]
    upsert?: ReleaseNotesUpsertWithWhereUniqueWithoutUsers_ReleaseNotes_createdByToUsersInput | ReleaseNotesUpsertWithWhereUniqueWithoutUsers_ReleaseNotes_createdByToUsersInput[]
    createMany?: ReleaseNotesCreateManyUsers_ReleaseNotes_createdByToUsersInputEnvelope
    set?: ReleaseNotesWhereUniqueInput | ReleaseNotesWhereUniqueInput[]
    disconnect?: ReleaseNotesWhereUniqueInput | ReleaseNotesWhereUniqueInput[]
    delete?: ReleaseNotesWhereUniqueInput | ReleaseNotesWhereUniqueInput[]
    connect?: ReleaseNotesWhereUniqueInput | ReleaseNotesWhereUniqueInput[]
    update?: ReleaseNotesUpdateWithWhereUniqueWithoutUsers_ReleaseNotes_createdByToUsersInput | ReleaseNotesUpdateWithWhereUniqueWithoutUsers_ReleaseNotes_createdByToUsersInput[]
    updateMany?: ReleaseNotesUpdateManyWithWhereWithoutUsers_ReleaseNotes_createdByToUsersInput | ReleaseNotesUpdateManyWithWhereWithoutUsers_ReleaseNotes_createdByToUsersInput[]
    deleteMany?: ReleaseNotesScalarWhereInput | ReleaseNotesScalarWhereInput[]
  }

  export type BcrsUncheckedUpdateManyWithoutUsers_Bcrs_assignedToToUsersNestedInput = {
    create?: XOR<BcrsCreateWithoutUsers_Bcrs_assignedToToUsersInput, BcrsUncheckedCreateWithoutUsers_Bcrs_assignedToToUsersInput> | BcrsCreateWithoutUsers_Bcrs_assignedToToUsersInput[] | BcrsUncheckedCreateWithoutUsers_Bcrs_assignedToToUsersInput[]
    connectOrCreate?: BcrsCreateOrConnectWithoutUsers_Bcrs_assignedToToUsersInput | BcrsCreateOrConnectWithoutUsers_Bcrs_assignedToToUsersInput[]
    upsert?: BcrsUpsertWithWhereUniqueWithoutUsers_Bcrs_assignedToToUsersInput | BcrsUpsertWithWhereUniqueWithoutUsers_Bcrs_assignedToToUsersInput[]
    createMany?: BcrsCreateManyUsers_Bcrs_assignedToToUsersInputEnvelope
    set?: BcrsWhereUniqueInput | BcrsWhereUniqueInput[]
    disconnect?: BcrsWhereUniqueInput | BcrsWhereUniqueInput[]
    delete?: BcrsWhereUniqueInput | BcrsWhereUniqueInput[]
    connect?: BcrsWhereUniqueInput | BcrsWhereUniqueInput[]
    update?: BcrsUpdateWithWhereUniqueWithoutUsers_Bcrs_assignedToToUsersInput | BcrsUpdateWithWhereUniqueWithoutUsers_Bcrs_assignedToToUsersInput[]
    updateMany?: BcrsUpdateManyWithWhereWithoutUsers_Bcrs_assignedToToUsersInput | BcrsUpdateManyWithWhereWithoutUsers_Bcrs_assignedToToUsersInput[]
    deleteMany?: BcrsScalarWhereInput | BcrsScalarWhereInput[]
  }

  export type BcrsUncheckedUpdateManyWithoutUsers_Bcrs_requestedByToUsersNestedInput = {
    create?: XOR<BcrsCreateWithoutUsers_Bcrs_requestedByToUsersInput, BcrsUncheckedCreateWithoutUsers_Bcrs_requestedByToUsersInput> | BcrsCreateWithoutUsers_Bcrs_requestedByToUsersInput[] | BcrsUncheckedCreateWithoutUsers_Bcrs_requestedByToUsersInput[]
    connectOrCreate?: BcrsCreateOrConnectWithoutUsers_Bcrs_requestedByToUsersInput | BcrsCreateOrConnectWithoutUsers_Bcrs_requestedByToUsersInput[]
    upsert?: BcrsUpsertWithWhereUniqueWithoutUsers_Bcrs_requestedByToUsersInput | BcrsUpsertWithWhereUniqueWithoutUsers_Bcrs_requestedByToUsersInput[]
    createMany?: BcrsCreateManyUsers_Bcrs_requestedByToUsersInputEnvelope
    set?: BcrsWhereUniqueInput | BcrsWhereUniqueInput[]
    disconnect?: BcrsWhereUniqueInput | BcrsWhereUniqueInput[]
    delete?: BcrsWhereUniqueInput | BcrsWhereUniqueInput[]
    connect?: BcrsWhereUniqueInput | BcrsWhereUniqueInput[]
    update?: BcrsUpdateWithWhereUniqueWithoutUsers_Bcrs_requestedByToUsersInput | BcrsUpdateWithWhereUniqueWithoutUsers_Bcrs_requestedByToUsersInput[]
    updateMany?: BcrsUpdateManyWithWhereWithoutUsers_Bcrs_requestedByToUsersInput | BcrsUpdateManyWithWhereWithoutUsers_Bcrs_requestedByToUsersInput[]
    deleteMany?: BcrsScalarWhereInput | BcrsScalarWhereInput[]
  }

  export type FundingsUncheckedUpdateManyWithoutUsers_Fundings_createdByToUsersNestedInput = {
    create?: XOR<FundingsCreateWithoutUsers_Fundings_createdByToUsersInput, FundingsUncheckedCreateWithoutUsers_Fundings_createdByToUsersInput> | FundingsCreateWithoutUsers_Fundings_createdByToUsersInput[] | FundingsUncheckedCreateWithoutUsers_Fundings_createdByToUsersInput[]
    connectOrCreate?: FundingsCreateOrConnectWithoutUsers_Fundings_createdByToUsersInput | FundingsCreateOrConnectWithoutUsers_Fundings_createdByToUsersInput[]
    upsert?: FundingsUpsertWithWhereUniqueWithoutUsers_Fundings_createdByToUsersInput | FundingsUpsertWithWhereUniqueWithoutUsers_Fundings_createdByToUsersInput[]
    createMany?: FundingsCreateManyUsers_Fundings_createdByToUsersInputEnvelope
    set?: FundingsWhereUniqueInput | FundingsWhereUniqueInput[]
    disconnect?: FundingsWhereUniqueInput | FundingsWhereUniqueInput[]
    delete?: FundingsWhereUniqueInput | FundingsWhereUniqueInput[]
    connect?: FundingsWhereUniqueInput | FundingsWhereUniqueInput[]
    update?: FundingsUpdateWithWhereUniqueWithoutUsers_Fundings_createdByToUsersInput | FundingsUpdateWithWhereUniqueWithoutUsers_Fundings_createdByToUsersInput[]
    updateMany?: FundingsUpdateManyWithWhereWithoutUsers_Fundings_createdByToUsersInput | FundingsUpdateManyWithWhereWithoutUsers_Fundings_createdByToUsersInput[]
    deleteMany?: FundingsScalarWhereInput | FundingsScalarWhereInput[]
  }

  export type FundingsUncheckedUpdateManyWithoutUsers_Fundings_lastUpdatedByToUsersNestedInput = {
    create?: XOR<FundingsCreateWithoutUsers_Fundings_lastUpdatedByToUsersInput, FundingsUncheckedCreateWithoutUsers_Fundings_lastUpdatedByToUsersInput> | FundingsCreateWithoutUsers_Fundings_lastUpdatedByToUsersInput[] | FundingsUncheckedCreateWithoutUsers_Fundings_lastUpdatedByToUsersInput[]
    connectOrCreate?: FundingsCreateOrConnectWithoutUsers_Fundings_lastUpdatedByToUsersInput | FundingsCreateOrConnectWithoutUsers_Fundings_lastUpdatedByToUsersInput[]
    upsert?: FundingsUpsertWithWhereUniqueWithoutUsers_Fundings_lastUpdatedByToUsersInput | FundingsUpsertWithWhereUniqueWithoutUsers_Fundings_lastUpdatedByToUsersInput[]
    createMany?: FundingsCreateManyUsers_Fundings_lastUpdatedByToUsersInputEnvelope
    set?: FundingsWhereUniqueInput | FundingsWhereUniqueInput[]
    disconnect?: FundingsWhereUniqueInput | FundingsWhereUniqueInput[]
    delete?: FundingsWhereUniqueInput | FundingsWhereUniqueInput[]
    connect?: FundingsWhereUniqueInput | FundingsWhereUniqueInput[]
    update?: FundingsUpdateWithWhereUniqueWithoutUsers_Fundings_lastUpdatedByToUsersInput | FundingsUpdateWithWhereUniqueWithoutUsers_Fundings_lastUpdatedByToUsersInput[]
    updateMany?: FundingsUpdateManyWithWhereWithoutUsers_Fundings_lastUpdatedByToUsersInput | FundingsUpdateManyWithWhereWithoutUsers_Fundings_lastUpdatedByToUsersInput[]
    deleteMany?: FundingsScalarWhereInput | FundingsScalarWhereInput[]
  }

  export type FundingRequirementsUncheckedUpdateManyWithoutCreatorNestedInput = {
    create?: XOR<FundingRequirementsCreateWithoutCreatorInput, FundingRequirementsUncheckedCreateWithoutCreatorInput> | FundingRequirementsCreateWithoutCreatorInput[] | FundingRequirementsUncheckedCreateWithoutCreatorInput[]
    connectOrCreate?: FundingRequirementsCreateOrConnectWithoutCreatorInput | FundingRequirementsCreateOrConnectWithoutCreatorInput[]
    upsert?: FundingRequirementsUpsertWithWhereUniqueWithoutCreatorInput | FundingRequirementsUpsertWithWhereUniqueWithoutCreatorInput[]
    createMany?: FundingRequirementsCreateManyCreatorInputEnvelope
    set?: FundingRequirementsWhereUniqueInput | FundingRequirementsWhereUniqueInput[]
    disconnect?: FundingRequirementsWhereUniqueInput | FundingRequirementsWhereUniqueInput[]
    delete?: FundingRequirementsWhereUniqueInput | FundingRequirementsWhereUniqueInput[]
    connect?: FundingRequirementsWhereUniqueInput | FundingRequirementsWhereUniqueInput[]
    update?: FundingRequirementsUpdateWithWhereUniqueWithoutCreatorInput | FundingRequirementsUpdateWithWhereUniqueWithoutCreatorInput[]
    updateMany?: FundingRequirementsUpdateManyWithWhereWithoutCreatorInput | FundingRequirementsUpdateManyWithWhereWithoutCreatorInput[]
    deleteMany?: FundingRequirementsScalarWhereInput | FundingRequirementsScalarWhereInput[]
  }

  export type FundingRequirementsUncheckedUpdateManyWithoutUpdaterNestedInput = {
    create?: XOR<FundingRequirementsCreateWithoutUpdaterInput, FundingRequirementsUncheckedCreateWithoutUpdaterInput> | FundingRequirementsCreateWithoutUpdaterInput[] | FundingRequirementsUncheckedCreateWithoutUpdaterInput[]
    connectOrCreate?: FundingRequirementsCreateOrConnectWithoutUpdaterInput | FundingRequirementsCreateOrConnectWithoutUpdaterInput[]
    upsert?: FundingRequirementsUpsertWithWhereUniqueWithoutUpdaterInput | FundingRequirementsUpsertWithWhereUniqueWithoutUpdaterInput[]
    createMany?: FundingRequirementsCreateManyUpdaterInputEnvelope
    set?: FundingRequirementsWhereUniqueInput | FundingRequirementsWhereUniqueInput[]
    disconnect?: FundingRequirementsWhereUniqueInput | FundingRequirementsWhereUniqueInput[]
    delete?: FundingRequirementsWhereUniqueInput | FundingRequirementsWhereUniqueInput[]
    connect?: FundingRequirementsWhereUniqueInput | FundingRequirementsWhereUniqueInput[]
    update?: FundingRequirementsUpdateWithWhereUniqueWithoutUpdaterInput | FundingRequirementsUpdateWithWhereUniqueWithoutUpdaterInput[]
    updateMany?: FundingRequirementsUpdateManyWithWhereWithoutUpdaterInput | FundingRequirementsUpdateManyWithWhereWithoutUpdaterInput[]
    deleteMany?: FundingRequirementsScalarWhereInput | FundingRequirementsScalarWhereInput[]
  }

  export type FundingHistoriesUncheckedUpdateManyWithoutCreatorNestedInput = {
    create?: XOR<FundingHistoriesCreateWithoutCreatorInput, FundingHistoriesUncheckedCreateWithoutCreatorInput> | FundingHistoriesCreateWithoutCreatorInput[] | FundingHistoriesUncheckedCreateWithoutCreatorInput[]
    connectOrCreate?: FundingHistoriesCreateOrConnectWithoutCreatorInput | FundingHistoriesCreateOrConnectWithoutCreatorInput[]
    upsert?: FundingHistoriesUpsertWithWhereUniqueWithoutCreatorInput | FundingHistoriesUpsertWithWhereUniqueWithoutCreatorInput[]
    createMany?: FundingHistoriesCreateManyCreatorInputEnvelope
    set?: FundingHistoriesWhereUniqueInput | FundingHistoriesWhereUniqueInput[]
    disconnect?: FundingHistoriesWhereUniqueInput | FundingHistoriesWhereUniqueInput[]
    delete?: FundingHistoriesWhereUniqueInput | FundingHistoriesWhereUniqueInput[]
    connect?: FundingHistoriesWhereUniqueInput | FundingHistoriesWhereUniqueInput[]
    update?: FundingHistoriesUpdateWithWhereUniqueWithoutCreatorInput | FundingHistoriesUpdateWithWhereUniqueWithoutCreatorInput[]
    updateMany?: FundingHistoriesUpdateManyWithWhereWithoutCreatorInput | FundingHistoriesUpdateManyWithWhereWithoutCreatorInput[]
    deleteMany?: FundingHistoriesScalarWhereInput | FundingHistoriesScalarWhereInput[]
  }

  export type ReferenceDataUncheckedUpdateManyWithoutUsers_ReferenceData_createdByToUsersNestedInput = {
    create?: XOR<ReferenceDataCreateWithoutUsers_ReferenceData_createdByToUsersInput, ReferenceDataUncheckedCreateWithoutUsers_ReferenceData_createdByToUsersInput> | ReferenceDataCreateWithoutUsers_ReferenceData_createdByToUsersInput[] | ReferenceDataUncheckedCreateWithoutUsers_ReferenceData_createdByToUsersInput[]
    connectOrCreate?: ReferenceDataCreateOrConnectWithoutUsers_ReferenceData_createdByToUsersInput | ReferenceDataCreateOrConnectWithoutUsers_ReferenceData_createdByToUsersInput[]
    upsert?: ReferenceDataUpsertWithWhereUniqueWithoutUsers_ReferenceData_createdByToUsersInput | ReferenceDataUpsertWithWhereUniqueWithoutUsers_ReferenceData_createdByToUsersInput[]
    createMany?: ReferenceDataCreateManyUsers_ReferenceData_createdByToUsersInputEnvelope
    set?: ReferenceDataWhereUniqueInput | ReferenceDataWhereUniqueInput[]
    disconnect?: ReferenceDataWhereUniqueInput | ReferenceDataWhereUniqueInput[]
    delete?: ReferenceDataWhereUniqueInput | ReferenceDataWhereUniqueInput[]
    connect?: ReferenceDataWhereUniqueInput | ReferenceDataWhereUniqueInput[]
    update?: ReferenceDataUpdateWithWhereUniqueWithoutUsers_ReferenceData_createdByToUsersInput | ReferenceDataUpdateWithWhereUniqueWithoutUsers_ReferenceData_createdByToUsersInput[]
    updateMany?: ReferenceDataUpdateManyWithWhereWithoutUsers_ReferenceData_createdByToUsersInput | ReferenceDataUpdateManyWithWhereWithoutUsers_ReferenceData_createdByToUsersInput[]
    deleteMany?: ReferenceDataScalarWhereInput | ReferenceDataScalarWhereInput[]
  }

  export type ReferenceDataUncheckedUpdateManyWithoutUsers_ReferenceData_lastUpdatedByToUsersNestedInput = {
    create?: XOR<ReferenceDataCreateWithoutUsers_ReferenceData_lastUpdatedByToUsersInput, ReferenceDataUncheckedCreateWithoutUsers_ReferenceData_lastUpdatedByToUsersInput> | ReferenceDataCreateWithoutUsers_ReferenceData_lastUpdatedByToUsersInput[] | ReferenceDataUncheckedCreateWithoutUsers_ReferenceData_lastUpdatedByToUsersInput[]
    connectOrCreate?: ReferenceDataCreateOrConnectWithoutUsers_ReferenceData_lastUpdatedByToUsersInput | ReferenceDataCreateOrConnectWithoutUsers_ReferenceData_lastUpdatedByToUsersInput[]
    upsert?: ReferenceDataUpsertWithWhereUniqueWithoutUsers_ReferenceData_lastUpdatedByToUsersInput | ReferenceDataUpsertWithWhereUniqueWithoutUsers_ReferenceData_lastUpdatedByToUsersInput[]
    createMany?: ReferenceDataCreateManyUsers_ReferenceData_lastUpdatedByToUsersInputEnvelope
    set?: ReferenceDataWhereUniqueInput | ReferenceDataWhereUniqueInput[]
    disconnect?: ReferenceDataWhereUniqueInput | ReferenceDataWhereUniqueInput[]
    delete?: ReferenceDataWhereUniqueInput | ReferenceDataWhereUniqueInput[]
    connect?: ReferenceDataWhereUniqueInput | ReferenceDataWhereUniqueInput[]
    update?: ReferenceDataUpdateWithWhereUniqueWithoutUsers_ReferenceData_lastUpdatedByToUsersInput | ReferenceDataUpdateWithWhereUniqueWithoutUsers_ReferenceData_lastUpdatedByToUsersInput[]
    updateMany?: ReferenceDataUpdateManyWithWhereWithoutUsers_ReferenceData_lastUpdatedByToUsersInput | ReferenceDataUpdateManyWithWhereWithoutUsers_ReferenceData_lastUpdatedByToUsersInput[]
    deleteMany?: ReferenceDataScalarWhereInput | ReferenceDataScalarWhereInput[]
  }

  export type ReleaseNotesUncheckedUpdateManyWithoutUsers_ReleaseNotes_approvedByToUsersNestedInput = {
    create?: XOR<ReleaseNotesCreateWithoutUsers_ReleaseNotes_approvedByToUsersInput, ReleaseNotesUncheckedCreateWithoutUsers_ReleaseNotes_approvedByToUsersInput> | ReleaseNotesCreateWithoutUsers_ReleaseNotes_approvedByToUsersInput[] | ReleaseNotesUncheckedCreateWithoutUsers_ReleaseNotes_approvedByToUsersInput[]
    connectOrCreate?: ReleaseNotesCreateOrConnectWithoutUsers_ReleaseNotes_approvedByToUsersInput | ReleaseNotesCreateOrConnectWithoutUsers_ReleaseNotes_approvedByToUsersInput[]
    upsert?: ReleaseNotesUpsertWithWhereUniqueWithoutUsers_ReleaseNotes_approvedByToUsersInput | ReleaseNotesUpsertWithWhereUniqueWithoutUsers_ReleaseNotes_approvedByToUsersInput[]
    createMany?: ReleaseNotesCreateManyUsers_ReleaseNotes_approvedByToUsersInputEnvelope
    set?: ReleaseNotesWhereUniqueInput | ReleaseNotesWhereUniqueInput[]
    disconnect?: ReleaseNotesWhereUniqueInput | ReleaseNotesWhereUniqueInput[]
    delete?: ReleaseNotesWhereUniqueInput | ReleaseNotesWhereUniqueInput[]
    connect?: ReleaseNotesWhereUniqueInput | ReleaseNotesWhereUniqueInput[]
    update?: ReleaseNotesUpdateWithWhereUniqueWithoutUsers_ReleaseNotes_approvedByToUsersInput | ReleaseNotesUpdateWithWhereUniqueWithoutUsers_ReleaseNotes_approvedByToUsersInput[]
    updateMany?: ReleaseNotesUpdateManyWithWhereWithoutUsers_ReleaseNotes_approvedByToUsersInput | ReleaseNotesUpdateManyWithWhereWithoutUsers_ReleaseNotes_approvedByToUsersInput[]
    deleteMany?: ReleaseNotesScalarWhereInput | ReleaseNotesScalarWhereInput[]
  }

  export type ReleaseNotesUncheckedUpdateManyWithoutUsers_ReleaseNotes_createdByToUsersNestedInput = {
    create?: XOR<ReleaseNotesCreateWithoutUsers_ReleaseNotes_createdByToUsersInput, ReleaseNotesUncheckedCreateWithoutUsers_ReleaseNotes_createdByToUsersInput> | ReleaseNotesCreateWithoutUsers_ReleaseNotes_createdByToUsersInput[] | ReleaseNotesUncheckedCreateWithoutUsers_ReleaseNotes_createdByToUsersInput[]
    connectOrCreate?: ReleaseNotesCreateOrConnectWithoutUsers_ReleaseNotes_createdByToUsersInput | ReleaseNotesCreateOrConnectWithoutUsers_ReleaseNotes_createdByToUsersInput[]
    upsert?: ReleaseNotesUpsertWithWhereUniqueWithoutUsers_ReleaseNotes_createdByToUsersInput | ReleaseNotesUpsertWithWhereUniqueWithoutUsers_ReleaseNotes_createdByToUsersInput[]
    createMany?: ReleaseNotesCreateManyUsers_ReleaseNotes_createdByToUsersInputEnvelope
    set?: ReleaseNotesWhereUniqueInput | ReleaseNotesWhereUniqueInput[]
    disconnect?: ReleaseNotesWhereUniqueInput | ReleaseNotesWhereUniqueInput[]
    delete?: ReleaseNotesWhereUniqueInput | ReleaseNotesWhereUniqueInput[]
    connect?: ReleaseNotesWhereUniqueInput | ReleaseNotesWhereUniqueInput[]
    update?: ReleaseNotesUpdateWithWhereUniqueWithoutUsers_ReleaseNotes_createdByToUsersInput | ReleaseNotesUpdateWithWhereUniqueWithoutUsers_ReleaseNotes_createdByToUsersInput[]
    updateMany?: ReleaseNotesUpdateManyWithWhereWithoutUsers_ReleaseNotes_createdByToUsersInput | ReleaseNotesUpdateManyWithWhereWithoutUsers_ReleaseNotes_createdByToUsersInput[]
    deleteMany?: ReleaseNotesScalarWhereInput | ReleaseNotesScalarWhereInput[]
  }

  export type NestedUuidFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedUuidFilter<$PrismaModel> | string
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedEnumenum_Bcrs_statusFilter<$PrismaModel = never> = {
    equals?: $Enums.enum_Bcrs_status | Enumenum_Bcrs_statusFieldRefInput<$PrismaModel>
    in?: $Enums.enum_Bcrs_status[] | ListEnumenum_Bcrs_statusFieldRefInput<$PrismaModel>
    notIn?: $Enums.enum_Bcrs_status[] | ListEnumenum_Bcrs_statusFieldRefInput<$PrismaModel>
    not?: NestedEnumenum_Bcrs_statusFilter<$PrismaModel> | $Enums.enum_Bcrs_status
  }

  export type NestedEnumenum_Bcrs_priorityFilter<$PrismaModel = never> = {
    equals?: $Enums.enum_Bcrs_priority | Enumenum_Bcrs_priorityFieldRefInput<$PrismaModel>
    in?: $Enums.enum_Bcrs_priority[] | ListEnumenum_Bcrs_priorityFieldRefInput<$PrismaModel>
    notIn?: $Enums.enum_Bcrs_priority[] | ListEnumenum_Bcrs_priorityFieldRefInput<$PrismaModel>
    not?: NestedEnumenum_Bcrs_priorityFilter<$PrismaModel> | $Enums.enum_Bcrs_priority
  }

  export type NestedUuidNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedUuidNullableFilter<$PrismaModel> | string | null
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedUuidWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedUuidWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedEnumenum_Bcrs_statusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.enum_Bcrs_status | Enumenum_Bcrs_statusFieldRefInput<$PrismaModel>
    in?: $Enums.enum_Bcrs_status[] | ListEnumenum_Bcrs_statusFieldRefInput<$PrismaModel>
    notIn?: $Enums.enum_Bcrs_status[] | ListEnumenum_Bcrs_statusFieldRefInput<$PrismaModel>
    not?: NestedEnumenum_Bcrs_statusWithAggregatesFilter<$PrismaModel> | $Enums.enum_Bcrs_status
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumenum_Bcrs_statusFilter<$PrismaModel>
    _max?: NestedEnumenum_Bcrs_statusFilter<$PrismaModel>
  }

  export type NestedEnumenum_Bcrs_priorityWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.enum_Bcrs_priority | Enumenum_Bcrs_priorityFieldRefInput<$PrismaModel>
    in?: $Enums.enum_Bcrs_priority[] | ListEnumenum_Bcrs_priorityFieldRefInput<$PrismaModel>
    notIn?: $Enums.enum_Bcrs_priority[] | ListEnumenum_Bcrs_priorityFieldRefInput<$PrismaModel>
    not?: NestedEnumenum_Bcrs_priorityWithAggregatesFilter<$PrismaModel> | $Enums.enum_Bcrs_priority
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumenum_Bcrs_priorityFilter<$PrismaModel>
    _max?: NestedEnumenum_Bcrs_priorityFilter<$PrismaModel>
  }

  export type NestedUuidNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedUuidNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedDecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedDecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }
  export type NestedJsonNullableFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<NestedJsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedEnumenum_ReleaseNotes_environmentFilter<$PrismaModel = never> = {
    equals?: $Enums.enum_ReleaseNotes_environment | Enumenum_ReleaseNotes_environmentFieldRefInput<$PrismaModel>
    in?: $Enums.enum_ReleaseNotes_environment[] | ListEnumenum_ReleaseNotes_environmentFieldRefInput<$PrismaModel>
    notIn?: $Enums.enum_ReleaseNotes_environment[] | ListEnumenum_ReleaseNotes_environmentFieldRefInput<$PrismaModel>
    not?: NestedEnumenum_ReleaseNotes_environmentFilter<$PrismaModel> | $Enums.enum_ReleaseNotes_environment
  }

  export type NestedEnumenum_ReleaseNotes_statusFilter<$PrismaModel = never> = {
    equals?: $Enums.enum_ReleaseNotes_status | Enumenum_ReleaseNotes_statusFieldRefInput<$PrismaModel>
    in?: $Enums.enum_ReleaseNotes_status[] | ListEnumenum_ReleaseNotes_statusFieldRefInput<$PrismaModel>
    notIn?: $Enums.enum_ReleaseNotes_status[] | ListEnumenum_ReleaseNotes_statusFieldRefInput<$PrismaModel>
    not?: NestedEnumenum_ReleaseNotes_statusFilter<$PrismaModel> | $Enums.enum_ReleaseNotes_status
  }

  export type NestedEnumenum_ReleaseNotes_environmentWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.enum_ReleaseNotes_environment | Enumenum_ReleaseNotes_environmentFieldRefInput<$PrismaModel>
    in?: $Enums.enum_ReleaseNotes_environment[] | ListEnumenum_ReleaseNotes_environmentFieldRefInput<$PrismaModel>
    notIn?: $Enums.enum_ReleaseNotes_environment[] | ListEnumenum_ReleaseNotes_environmentFieldRefInput<$PrismaModel>
    not?: NestedEnumenum_ReleaseNotes_environmentWithAggregatesFilter<$PrismaModel> | $Enums.enum_ReleaseNotes_environment
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumenum_ReleaseNotes_environmentFilter<$PrismaModel>
    _max?: NestedEnumenum_ReleaseNotes_environmentFilter<$PrismaModel>
  }

  export type NestedEnumenum_ReleaseNotes_statusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.enum_ReleaseNotes_status | Enumenum_ReleaseNotes_statusFieldRefInput<$PrismaModel>
    in?: $Enums.enum_ReleaseNotes_status[] | ListEnumenum_ReleaseNotes_statusFieldRefInput<$PrismaModel>
    notIn?: $Enums.enum_ReleaseNotes_status[] | ListEnumenum_ReleaseNotes_statusFieldRefInput<$PrismaModel>
    not?: NestedEnumenum_ReleaseNotes_statusWithAggregatesFilter<$PrismaModel> | $Enums.enum_ReleaseNotes_status
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumenum_ReleaseNotes_statusFilter<$PrismaModel>
    _max?: NestedEnumenum_ReleaseNotes_statusFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedEnumenum_Users_roleFilter<$PrismaModel = never> = {
    equals?: $Enums.enum_Users_role | Enumenum_Users_roleFieldRefInput<$PrismaModel>
    in?: $Enums.enum_Users_role[] | ListEnumenum_Users_roleFieldRefInput<$PrismaModel>
    notIn?: $Enums.enum_Users_role[] | ListEnumenum_Users_roleFieldRefInput<$PrismaModel>
    not?: NestedEnumenum_Users_roleFilter<$PrismaModel> | $Enums.enum_Users_role
  }

  export type NestedEnumenum_Users_roleWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.enum_Users_role | Enumenum_Users_roleFieldRefInput<$PrismaModel>
    in?: $Enums.enum_Users_role[] | ListEnumenum_Users_roleFieldRefInput<$PrismaModel>
    notIn?: $Enums.enum_Users_role[] | ListEnumenum_Users_roleFieldRefInput<$PrismaModel>
    not?: NestedEnumenum_Users_roleWithAggregatesFilter<$PrismaModel> | $Enums.enum_Users_role
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumenum_Users_roleFilter<$PrismaModel>
    _max?: NestedEnumenum_Users_roleFilter<$PrismaModel>
  }

  export type UsersCreateWithoutBcrs_Bcrs_assignedToToUsersInput = {
    id: string
    email: string
    password: string
    name: string
    role?: $Enums.enum_Users_role
    active?: boolean
    lastLogin?: Date | string | null
    createdAt: Date | string
    updatedAt: Date | string
    Bcrs_Bcrs_requestedByToUsers?: BcrsCreateNestedManyWithoutUsers_Bcrs_requestedByToUsersInput
    Fundings_Fundings_createdByToUsers?: FundingsCreateNestedManyWithoutUsers_Fundings_createdByToUsersInput
    Fundings_Fundings_lastUpdatedByToUsers?: FundingsCreateNestedManyWithoutUsers_Fundings_lastUpdatedByToUsersInput
    FundingRequirements_createdBy?: FundingRequirementsCreateNestedManyWithoutCreatorInput
    FundingRequirements_lastUpdatedBy?: FundingRequirementsCreateNestedManyWithoutUpdaterInput
    FundingHistories_createdBy?: FundingHistoriesCreateNestedManyWithoutCreatorInput
    ReferenceData_ReferenceData_createdByToUsers?: ReferenceDataCreateNestedManyWithoutUsers_ReferenceData_createdByToUsersInput
    ReferenceData_ReferenceData_lastUpdatedByToUsers?: ReferenceDataCreateNestedManyWithoutUsers_ReferenceData_lastUpdatedByToUsersInput
    ReleaseNotes_ReleaseNotes_approvedByToUsers?: ReleaseNotesCreateNestedManyWithoutUsers_ReleaseNotes_approvedByToUsersInput
    ReleaseNotes_ReleaseNotes_createdByToUsers?: ReleaseNotesCreateNestedManyWithoutUsers_ReleaseNotes_createdByToUsersInput
  }

  export type UsersUncheckedCreateWithoutBcrs_Bcrs_assignedToToUsersInput = {
    id: string
    email: string
    password: string
    name: string
    role?: $Enums.enum_Users_role
    active?: boolean
    lastLogin?: Date | string | null
    createdAt: Date | string
    updatedAt: Date | string
    Bcrs_Bcrs_requestedByToUsers?: BcrsUncheckedCreateNestedManyWithoutUsers_Bcrs_requestedByToUsersInput
    Fundings_Fundings_createdByToUsers?: FundingsUncheckedCreateNestedManyWithoutUsers_Fundings_createdByToUsersInput
    Fundings_Fundings_lastUpdatedByToUsers?: FundingsUncheckedCreateNestedManyWithoutUsers_Fundings_lastUpdatedByToUsersInput
    FundingRequirements_createdBy?: FundingRequirementsUncheckedCreateNestedManyWithoutCreatorInput
    FundingRequirements_lastUpdatedBy?: FundingRequirementsUncheckedCreateNestedManyWithoutUpdaterInput
    FundingHistories_createdBy?: FundingHistoriesUncheckedCreateNestedManyWithoutCreatorInput
    ReferenceData_ReferenceData_createdByToUsers?: ReferenceDataUncheckedCreateNestedManyWithoutUsers_ReferenceData_createdByToUsersInput
    ReferenceData_ReferenceData_lastUpdatedByToUsers?: ReferenceDataUncheckedCreateNestedManyWithoutUsers_ReferenceData_lastUpdatedByToUsersInput
    ReleaseNotes_ReleaseNotes_approvedByToUsers?: ReleaseNotesUncheckedCreateNestedManyWithoutUsers_ReleaseNotes_approvedByToUsersInput
    ReleaseNotes_ReleaseNotes_createdByToUsers?: ReleaseNotesUncheckedCreateNestedManyWithoutUsers_ReleaseNotes_createdByToUsersInput
  }

  export type UsersCreateOrConnectWithoutBcrs_Bcrs_assignedToToUsersInput = {
    where: UsersWhereUniqueInput
    create: XOR<UsersCreateWithoutBcrs_Bcrs_assignedToToUsersInput, UsersUncheckedCreateWithoutBcrs_Bcrs_assignedToToUsersInput>
  }

  export type UsersCreateWithoutBcrs_Bcrs_requestedByToUsersInput = {
    id: string
    email: string
    password: string
    name: string
    role?: $Enums.enum_Users_role
    active?: boolean
    lastLogin?: Date | string | null
    createdAt: Date | string
    updatedAt: Date | string
    Bcrs_Bcrs_assignedToToUsers?: BcrsCreateNestedManyWithoutUsers_Bcrs_assignedToToUsersInput
    Fundings_Fundings_createdByToUsers?: FundingsCreateNestedManyWithoutUsers_Fundings_createdByToUsersInput
    Fundings_Fundings_lastUpdatedByToUsers?: FundingsCreateNestedManyWithoutUsers_Fundings_lastUpdatedByToUsersInput
    FundingRequirements_createdBy?: FundingRequirementsCreateNestedManyWithoutCreatorInput
    FundingRequirements_lastUpdatedBy?: FundingRequirementsCreateNestedManyWithoutUpdaterInput
    FundingHistories_createdBy?: FundingHistoriesCreateNestedManyWithoutCreatorInput
    ReferenceData_ReferenceData_createdByToUsers?: ReferenceDataCreateNestedManyWithoutUsers_ReferenceData_createdByToUsersInput
    ReferenceData_ReferenceData_lastUpdatedByToUsers?: ReferenceDataCreateNestedManyWithoutUsers_ReferenceData_lastUpdatedByToUsersInput
    ReleaseNotes_ReleaseNotes_approvedByToUsers?: ReleaseNotesCreateNestedManyWithoutUsers_ReleaseNotes_approvedByToUsersInput
    ReleaseNotes_ReleaseNotes_createdByToUsers?: ReleaseNotesCreateNestedManyWithoutUsers_ReleaseNotes_createdByToUsersInput
  }

  export type UsersUncheckedCreateWithoutBcrs_Bcrs_requestedByToUsersInput = {
    id: string
    email: string
    password: string
    name: string
    role?: $Enums.enum_Users_role
    active?: boolean
    lastLogin?: Date | string | null
    createdAt: Date | string
    updatedAt: Date | string
    Bcrs_Bcrs_assignedToToUsers?: BcrsUncheckedCreateNestedManyWithoutUsers_Bcrs_assignedToToUsersInput
    Fundings_Fundings_createdByToUsers?: FundingsUncheckedCreateNestedManyWithoutUsers_Fundings_createdByToUsersInput
    Fundings_Fundings_lastUpdatedByToUsers?: FundingsUncheckedCreateNestedManyWithoutUsers_Fundings_lastUpdatedByToUsersInput
    FundingRequirements_createdBy?: FundingRequirementsUncheckedCreateNestedManyWithoutCreatorInput
    FundingRequirements_lastUpdatedBy?: FundingRequirementsUncheckedCreateNestedManyWithoutUpdaterInput
    FundingHistories_createdBy?: FundingHistoriesUncheckedCreateNestedManyWithoutCreatorInput
    ReferenceData_ReferenceData_createdByToUsers?: ReferenceDataUncheckedCreateNestedManyWithoutUsers_ReferenceData_createdByToUsersInput
    ReferenceData_ReferenceData_lastUpdatedByToUsers?: ReferenceDataUncheckedCreateNestedManyWithoutUsers_ReferenceData_lastUpdatedByToUsersInput
    ReleaseNotes_ReleaseNotes_approvedByToUsers?: ReleaseNotesUncheckedCreateNestedManyWithoutUsers_ReleaseNotes_approvedByToUsersInput
    ReleaseNotes_ReleaseNotes_createdByToUsers?: ReleaseNotesUncheckedCreateNestedManyWithoutUsers_ReleaseNotes_createdByToUsersInput
  }

  export type UsersCreateOrConnectWithoutBcrs_Bcrs_requestedByToUsersInput = {
    where: UsersWhereUniqueInput
    create: XOR<UsersCreateWithoutBcrs_Bcrs_requestedByToUsersInput, UsersUncheckedCreateWithoutBcrs_Bcrs_requestedByToUsersInput>
  }

  export type UsersUpsertWithoutBcrs_Bcrs_assignedToToUsersInput = {
    update: XOR<UsersUpdateWithoutBcrs_Bcrs_assignedToToUsersInput, UsersUncheckedUpdateWithoutBcrs_Bcrs_assignedToToUsersInput>
    create: XOR<UsersCreateWithoutBcrs_Bcrs_assignedToToUsersInput, UsersUncheckedCreateWithoutBcrs_Bcrs_assignedToToUsersInput>
    where?: UsersWhereInput
  }

  export type UsersUpdateToOneWithWhereWithoutBcrs_Bcrs_assignedToToUsersInput = {
    where?: UsersWhereInput
    data: XOR<UsersUpdateWithoutBcrs_Bcrs_assignedToToUsersInput, UsersUncheckedUpdateWithoutBcrs_Bcrs_assignedToToUsersInput>
  }

  export type UsersUpdateWithoutBcrs_Bcrs_assignedToToUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    role?: Enumenum_Users_roleFieldUpdateOperationsInput | $Enums.enum_Users_role
    active?: BoolFieldUpdateOperationsInput | boolean
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Bcrs_Bcrs_requestedByToUsers?: BcrsUpdateManyWithoutUsers_Bcrs_requestedByToUsersNestedInput
    Fundings_Fundings_createdByToUsers?: FundingsUpdateManyWithoutUsers_Fundings_createdByToUsersNestedInput
    Fundings_Fundings_lastUpdatedByToUsers?: FundingsUpdateManyWithoutUsers_Fundings_lastUpdatedByToUsersNestedInput
    FundingRequirements_createdBy?: FundingRequirementsUpdateManyWithoutCreatorNestedInput
    FundingRequirements_lastUpdatedBy?: FundingRequirementsUpdateManyWithoutUpdaterNestedInput
    FundingHistories_createdBy?: FundingHistoriesUpdateManyWithoutCreatorNestedInput
    ReferenceData_ReferenceData_createdByToUsers?: ReferenceDataUpdateManyWithoutUsers_ReferenceData_createdByToUsersNestedInput
    ReferenceData_ReferenceData_lastUpdatedByToUsers?: ReferenceDataUpdateManyWithoutUsers_ReferenceData_lastUpdatedByToUsersNestedInput
    ReleaseNotes_ReleaseNotes_approvedByToUsers?: ReleaseNotesUpdateManyWithoutUsers_ReleaseNotes_approvedByToUsersNestedInput
    ReleaseNotes_ReleaseNotes_createdByToUsers?: ReleaseNotesUpdateManyWithoutUsers_ReleaseNotes_createdByToUsersNestedInput
  }

  export type UsersUncheckedUpdateWithoutBcrs_Bcrs_assignedToToUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    role?: Enumenum_Users_roleFieldUpdateOperationsInput | $Enums.enum_Users_role
    active?: BoolFieldUpdateOperationsInput | boolean
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Bcrs_Bcrs_requestedByToUsers?: BcrsUncheckedUpdateManyWithoutUsers_Bcrs_requestedByToUsersNestedInput
    Fundings_Fundings_createdByToUsers?: FundingsUncheckedUpdateManyWithoutUsers_Fundings_createdByToUsersNestedInput
    Fundings_Fundings_lastUpdatedByToUsers?: FundingsUncheckedUpdateManyWithoutUsers_Fundings_lastUpdatedByToUsersNestedInput
    FundingRequirements_createdBy?: FundingRequirementsUncheckedUpdateManyWithoutCreatorNestedInput
    FundingRequirements_lastUpdatedBy?: FundingRequirementsUncheckedUpdateManyWithoutUpdaterNestedInput
    FundingHistories_createdBy?: FundingHistoriesUncheckedUpdateManyWithoutCreatorNestedInput
    ReferenceData_ReferenceData_createdByToUsers?: ReferenceDataUncheckedUpdateManyWithoutUsers_ReferenceData_createdByToUsersNestedInput
    ReferenceData_ReferenceData_lastUpdatedByToUsers?: ReferenceDataUncheckedUpdateManyWithoutUsers_ReferenceData_lastUpdatedByToUsersNestedInput
    ReleaseNotes_ReleaseNotes_approvedByToUsers?: ReleaseNotesUncheckedUpdateManyWithoutUsers_ReleaseNotes_approvedByToUsersNestedInput
    ReleaseNotes_ReleaseNotes_createdByToUsers?: ReleaseNotesUncheckedUpdateManyWithoutUsers_ReleaseNotes_createdByToUsersNestedInput
  }

  export type UsersUpsertWithoutBcrs_Bcrs_requestedByToUsersInput = {
    update: XOR<UsersUpdateWithoutBcrs_Bcrs_requestedByToUsersInput, UsersUncheckedUpdateWithoutBcrs_Bcrs_requestedByToUsersInput>
    create: XOR<UsersCreateWithoutBcrs_Bcrs_requestedByToUsersInput, UsersUncheckedCreateWithoutBcrs_Bcrs_requestedByToUsersInput>
    where?: UsersWhereInput
  }

  export type UsersUpdateToOneWithWhereWithoutBcrs_Bcrs_requestedByToUsersInput = {
    where?: UsersWhereInput
    data: XOR<UsersUpdateWithoutBcrs_Bcrs_requestedByToUsersInput, UsersUncheckedUpdateWithoutBcrs_Bcrs_requestedByToUsersInput>
  }

  export type UsersUpdateWithoutBcrs_Bcrs_requestedByToUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    role?: Enumenum_Users_roleFieldUpdateOperationsInput | $Enums.enum_Users_role
    active?: BoolFieldUpdateOperationsInput | boolean
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Bcrs_Bcrs_assignedToToUsers?: BcrsUpdateManyWithoutUsers_Bcrs_assignedToToUsersNestedInput
    Fundings_Fundings_createdByToUsers?: FundingsUpdateManyWithoutUsers_Fundings_createdByToUsersNestedInput
    Fundings_Fundings_lastUpdatedByToUsers?: FundingsUpdateManyWithoutUsers_Fundings_lastUpdatedByToUsersNestedInput
    FundingRequirements_createdBy?: FundingRequirementsUpdateManyWithoutCreatorNestedInput
    FundingRequirements_lastUpdatedBy?: FundingRequirementsUpdateManyWithoutUpdaterNestedInput
    FundingHistories_createdBy?: FundingHistoriesUpdateManyWithoutCreatorNestedInput
    ReferenceData_ReferenceData_createdByToUsers?: ReferenceDataUpdateManyWithoutUsers_ReferenceData_createdByToUsersNestedInput
    ReferenceData_ReferenceData_lastUpdatedByToUsers?: ReferenceDataUpdateManyWithoutUsers_ReferenceData_lastUpdatedByToUsersNestedInput
    ReleaseNotes_ReleaseNotes_approvedByToUsers?: ReleaseNotesUpdateManyWithoutUsers_ReleaseNotes_approvedByToUsersNestedInput
    ReleaseNotes_ReleaseNotes_createdByToUsers?: ReleaseNotesUpdateManyWithoutUsers_ReleaseNotes_createdByToUsersNestedInput
  }

  export type UsersUncheckedUpdateWithoutBcrs_Bcrs_requestedByToUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    role?: Enumenum_Users_roleFieldUpdateOperationsInput | $Enums.enum_Users_role
    active?: BoolFieldUpdateOperationsInput | boolean
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Bcrs_Bcrs_assignedToToUsers?: BcrsUncheckedUpdateManyWithoutUsers_Bcrs_assignedToToUsersNestedInput
    Fundings_Fundings_createdByToUsers?: FundingsUncheckedUpdateManyWithoutUsers_Fundings_createdByToUsersNestedInput
    Fundings_Fundings_lastUpdatedByToUsers?: FundingsUncheckedUpdateManyWithoutUsers_Fundings_lastUpdatedByToUsersNestedInput
    FundingRequirements_createdBy?: FundingRequirementsUncheckedUpdateManyWithoutCreatorNestedInput
    FundingRequirements_lastUpdatedBy?: FundingRequirementsUncheckedUpdateManyWithoutUpdaterNestedInput
    FundingHistories_createdBy?: FundingHistoriesUncheckedUpdateManyWithoutCreatorNestedInput
    ReferenceData_ReferenceData_createdByToUsers?: ReferenceDataUncheckedUpdateManyWithoutUsers_ReferenceData_createdByToUsersNestedInput
    ReferenceData_ReferenceData_lastUpdatedByToUsers?: ReferenceDataUncheckedUpdateManyWithoutUsers_ReferenceData_lastUpdatedByToUsersNestedInput
    ReleaseNotes_ReleaseNotes_approvedByToUsers?: ReleaseNotesUncheckedUpdateManyWithoutUsers_ReleaseNotes_approvedByToUsersNestedInput
    ReleaseNotes_ReleaseNotes_createdByToUsers?: ReleaseNotesUncheckedUpdateManyWithoutUsers_ReleaseNotes_createdByToUsersNestedInput
  }

  export type UsersCreateWithoutFundings_Fundings_createdByToUsersInput = {
    id: string
    email: string
    password: string
    name: string
    role?: $Enums.enum_Users_role
    active?: boolean
    lastLogin?: Date | string | null
    createdAt: Date | string
    updatedAt: Date | string
    Bcrs_Bcrs_assignedToToUsers?: BcrsCreateNestedManyWithoutUsers_Bcrs_assignedToToUsersInput
    Bcrs_Bcrs_requestedByToUsers?: BcrsCreateNestedManyWithoutUsers_Bcrs_requestedByToUsersInput
    Fundings_Fundings_lastUpdatedByToUsers?: FundingsCreateNestedManyWithoutUsers_Fundings_lastUpdatedByToUsersInput
    FundingRequirements_createdBy?: FundingRequirementsCreateNestedManyWithoutCreatorInput
    FundingRequirements_lastUpdatedBy?: FundingRequirementsCreateNestedManyWithoutUpdaterInput
    FundingHistories_createdBy?: FundingHistoriesCreateNestedManyWithoutCreatorInput
    ReferenceData_ReferenceData_createdByToUsers?: ReferenceDataCreateNestedManyWithoutUsers_ReferenceData_createdByToUsersInput
    ReferenceData_ReferenceData_lastUpdatedByToUsers?: ReferenceDataCreateNestedManyWithoutUsers_ReferenceData_lastUpdatedByToUsersInput
    ReleaseNotes_ReleaseNotes_approvedByToUsers?: ReleaseNotesCreateNestedManyWithoutUsers_ReleaseNotes_approvedByToUsersInput
    ReleaseNotes_ReleaseNotes_createdByToUsers?: ReleaseNotesCreateNestedManyWithoutUsers_ReleaseNotes_createdByToUsersInput
  }

  export type UsersUncheckedCreateWithoutFundings_Fundings_createdByToUsersInput = {
    id: string
    email: string
    password: string
    name: string
    role?: $Enums.enum_Users_role
    active?: boolean
    lastLogin?: Date | string | null
    createdAt: Date | string
    updatedAt: Date | string
    Bcrs_Bcrs_assignedToToUsers?: BcrsUncheckedCreateNestedManyWithoutUsers_Bcrs_assignedToToUsersInput
    Bcrs_Bcrs_requestedByToUsers?: BcrsUncheckedCreateNestedManyWithoutUsers_Bcrs_requestedByToUsersInput
    Fundings_Fundings_lastUpdatedByToUsers?: FundingsUncheckedCreateNestedManyWithoutUsers_Fundings_lastUpdatedByToUsersInput
    FundingRequirements_createdBy?: FundingRequirementsUncheckedCreateNestedManyWithoutCreatorInput
    FundingRequirements_lastUpdatedBy?: FundingRequirementsUncheckedCreateNestedManyWithoutUpdaterInput
    FundingHistories_createdBy?: FundingHistoriesUncheckedCreateNestedManyWithoutCreatorInput
    ReferenceData_ReferenceData_createdByToUsers?: ReferenceDataUncheckedCreateNestedManyWithoutUsers_ReferenceData_createdByToUsersInput
    ReferenceData_ReferenceData_lastUpdatedByToUsers?: ReferenceDataUncheckedCreateNestedManyWithoutUsers_ReferenceData_lastUpdatedByToUsersInput
    ReleaseNotes_ReleaseNotes_approvedByToUsers?: ReleaseNotesUncheckedCreateNestedManyWithoutUsers_ReleaseNotes_approvedByToUsersInput
    ReleaseNotes_ReleaseNotes_createdByToUsers?: ReleaseNotesUncheckedCreateNestedManyWithoutUsers_ReleaseNotes_createdByToUsersInput
  }

  export type UsersCreateOrConnectWithoutFundings_Fundings_createdByToUsersInput = {
    where: UsersWhereUniqueInput
    create: XOR<UsersCreateWithoutFundings_Fundings_createdByToUsersInput, UsersUncheckedCreateWithoutFundings_Fundings_createdByToUsersInput>
  }

  export type UsersCreateWithoutFundings_Fundings_lastUpdatedByToUsersInput = {
    id: string
    email: string
    password: string
    name: string
    role?: $Enums.enum_Users_role
    active?: boolean
    lastLogin?: Date | string | null
    createdAt: Date | string
    updatedAt: Date | string
    Bcrs_Bcrs_assignedToToUsers?: BcrsCreateNestedManyWithoutUsers_Bcrs_assignedToToUsersInput
    Bcrs_Bcrs_requestedByToUsers?: BcrsCreateNestedManyWithoutUsers_Bcrs_requestedByToUsersInput
    Fundings_Fundings_createdByToUsers?: FundingsCreateNestedManyWithoutUsers_Fundings_createdByToUsersInput
    FundingRequirements_createdBy?: FundingRequirementsCreateNestedManyWithoutCreatorInput
    FundingRequirements_lastUpdatedBy?: FundingRequirementsCreateNestedManyWithoutUpdaterInput
    FundingHistories_createdBy?: FundingHistoriesCreateNestedManyWithoutCreatorInput
    ReferenceData_ReferenceData_createdByToUsers?: ReferenceDataCreateNestedManyWithoutUsers_ReferenceData_createdByToUsersInput
    ReferenceData_ReferenceData_lastUpdatedByToUsers?: ReferenceDataCreateNestedManyWithoutUsers_ReferenceData_lastUpdatedByToUsersInput
    ReleaseNotes_ReleaseNotes_approvedByToUsers?: ReleaseNotesCreateNestedManyWithoutUsers_ReleaseNotes_approvedByToUsersInput
    ReleaseNotes_ReleaseNotes_createdByToUsers?: ReleaseNotesCreateNestedManyWithoutUsers_ReleaseNotes_createdByToUsersInput
  }

  export type UsersUncheckedCreateWithoutFundings_Fundings_lastUpdatedByToUsersInput = {
    id: string
    email: string
    password: string
    name: string
    role?: $Enums.enum_Users_role
    active?: boolean
    lastLogin?: Date | string | null
    createdAt: Date | string
    updatedAt: Date | string
    Bcrs_Bcrs_assignedToToUsers?: BcrsUncheckedCreateNestedManyWithoutUsers_Bcrs_assignedToToUsersInput
    Bcrs_Bcrs_requestedByToUsers?: BcrsUncheckedCreateNestedManyWithoutUsers_Bcrs_requestedByToUsersInput
    Fundings_Fundings_createdByToUsers?: FundingsUncheckedCreateNestedManyWithoutUsers_Fundings_createdByToUsersInput
    FundingRequirements_createdBy?: FundingRequirementsUncheckedCreateNestedManyWithoutCreatorInput
    FundingRequirements_lastUpdatedBy?: FundingRequirementsUncheckedCreateNestedManyWithoutUpdaterInput
    FundingHistories_createdBy?: FundingHistoriesUncheckedCreateNestedManyWithoutCreatorInput
    ReferenceData_ReferenceData_createdByToUsers?: ReferenceDataUncheckedCreateNestedManyWithoutUsers_ReferenceData_createdByToUsersInput
    ReferenceData_ReferenceData_lastUpdatedByToUsers?: ReferenceDataUncheckedCreateNestedManyWithoutUsers_ReferenceData_lastUpdatedByToUsersInput
    ReleaseNotes_ReleaseNotes_approvedByToUsers?: ReleaseNotesUncheckedCreateNestedManyWithoutUsers_ReleaseNotes_approvedByToUsersInput
    ReleaseNotes_ReleaseNotes_createdByToUsers?: ReleaseNotesUncheckedCreateNestedManyWithoutUsers_ReleaseNotes_createdByToUsersInput
  }

  export type UsersCreateOrConnectWithoutFundings_Fundings_lastUpdatedByToUsersInput = {
    where: UsersWhereUniqueInput
    create: XOR<UsersCreateWithoutFundings_Fundings_lastUpdatedByToUsersInput, UsersUncheckedCreateWithoutFundings_Fundings_lastUpdatedByToUsersInput>
  }

  export type UsersUpsertWithoutFundings_Fundings_createdByToUsersInput = {
    update: XOR<UsersUpdateWithoutFundings_Fundings_createdByToUsersInput, UsersUncheckedUpdateWithoutFundings_Fundings_createdByToUsersInput>
    create: XOR<UsersCreateWithoutFundings_Fundings_createdByToUsersInput, UsersUncheckedCreateWithoutFundings_Fundings_createdByToUsersInput>
    where?: UsersWhereInput
  }

  export type UsersUpdateToOneWithWhereWithoutFundings_Fundings_createdByToUsersInput = {
    where?: UsersWhereInput
    data: XOR<UsersUpdateWithoutFundings_Fundings_createdByToUsersInput, UsersUncheckedUpdateWithoutFundings_Fundings_createdByToUsersInput>
  }

  export type UsersUpdateWithoutFundings_Fundings_createdByToUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    role?: Enumenum_Users_roleFieldUpdateOperationsInput | $Enums.enum_Users_role
    active?: BoolFieldUpdateOperationsInput | boolean
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Bcrs_Bcrs_assignedToToUsers?: BcrsUpdateManyWithoutUsers_Bcrs_assignedToToUsersNestedInput
    Bcrs_Bcrs_requestedByToUsers?: BcrsUpdateManyWithoutUsers_Bcrs_requestedByToUsersNestedInput
    Fundings_Fundings_lastUpdatedByToUsers?: FundingsUpdateManyWithoutUsers_Fundings_lastUpdatedByToUsersNestedInput
    FundingRequirements_createdBy?: FundingRequirementsUpdateManyWithoutCreatorNestedInput
    FundingRequirements_lastUpdatedBy?: FundingRequirementsUpdateManyWithoutUpdaterNestedInput
    FundingHistories_createdBy?: FundingHistoriesUpdateManyWithoutCreatorNestedInput
    ReferenceData_ReferenceData_createdByToUsers?: ReferenceDataUpdateManyWithoutUsers_ReferenceData_createdByToUsersNestedInput
    ReferenceData_ReferenceData_lastUpdatedByToUsers?: ReferenceDataUpdateManyWithoutUsers_ReferenceData_lastUpdatedByToUsersNestedInput
    ReleaseNotes_ReleaseNotes_approvedByToUsers?: ReleaseNotesUpdateManyWithoutUsers_ReleaseNotes_approvedByToUsersNestedInput
    ReleaseNotes_ReleaseNotes_createdByToUsers?: ReleaseNotesUpdateManyWithoutUsers_ReleaseNotes_createdByToUsersNestedInput
  }

  export type UsersUncheckedUpdateWithoutFundings_Fundings_createdByToUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    role?: Enumenum_Users_roleFieldUpdateOperationsInput | $Enums.enum_Users_role
    active?: BoolFieldUpdateOperationsInput | boolean
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Bcrs_Bcrs_assignedToToUsers?: BcrsUncheckedUpdateManyWithoutUsers_Bcrs_assignedToToUsersNestedInput
    Bcrs_Bcrs_requestedByToUsers?: BcrsUncheckedUpdateManyWithoutUsers_Bcrs_requestedByToUsersNestedInput
    Fundings_Fundings_lastUpdatedByToUsers?: FundingsUncheckedUpdateManyWithoutUsers_Fundings_lastUpdatedByToUsersNestedInput
    FundingRequirements_createdBy?: FundingRequirementsUncheckedUpdateManyWithoutCreatorNestedInput
    FundingRequirements_lastUpdatedBy?: FundingRequirementsUncheckedUpdateManyWithoutUpdaterNestedInput
    FundingHistories_createdBy?: FundingHistoriesUncheckedUpdateManyWithoutCreatorNestedInput
    ReferenceData_ReferenceData_createdByToUsers?: ReferenceDataUncheckedUpdateManyWithoutUsers_ReferenceData_createdByToUsersNestedInput
    ReferenceData_ReferenceData_lastUpdatedByToUsers?: ReferenceDataUncheckedUpdateManyWithoutUsers_ReferenceData_lastUpdatedByToUsersNestedInput
    ReleaseNotes_ReleaseNotes_approvedByToUsers?: ReleaseNotesUncheckedUpdateManyWithoutUsers_ReleaseNotes_approvedByToUsersNestedInput
    ReleaseNotes_ReleaseNotes_createdByToUsers?: ReleaseNotesUncheckedUpdateManyWithoutUsers_ReleaseNotes_createdByToUsersNestedInput
  }

  export type UsersUpsertWithoutFundings_Fundings_lastUpdatedByToUsersInput = {
    update: XOR<UsersUpdateWithoutFundings_Fundings_lastUpdatedByToUsersInput, UsersUncheckedUpdateWithoutFundings_Fundings_lastUpdatedByToUsersInput>
    create: XOR<UsersCreateWithoutFundings_Fundings_lastUpdatedByToUsersInput, UsersUncheckedCreateWithoutFundings_Fundings_lastUpdatedByToUsersInput>
    where?: UsersWhereInput
  }

  export type UsersUpdateToOneWithWhereWithoutFundings_Fundings_lastUpdatedByToUsersInput = {
    where?: UsersWhereInput
    data: XOR<UsersUpdateWithoutFundings_Fundings_lastUpdatedByToUsersInput, UsersUncheckedUpdateWithoutFundings_Fundings_lastUpdatedByToUsersInput>
  }

  export type UsersUpdateWithoutFundings_Fundings_lastUpdatedByToUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    role?: Enumenum_Users_roleFieldUpdateOperationsInput | $Enums.enum_Users_role
    active?: BoolFieldUpdateOperationsInput | boolean
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Bcrs_Bcrs_assignedToToUsers?: BcrsUpdateManyWithoutUsers_Bcrs_assignedToToUsersNestedInput
    Bcrs_Bcrs_requestedByToUsers?: BcrsUpdateManyWithoutUsers_Bcrs_requestedByToUsersNestedInput
    Fundings_Fundings_createdByToUsers?: FundingsUpdateManyWithoutUsers_Fundings_createdByToUsersNestedInput
    FundingRequirements_createdBy?: FundingRequirementsUpdateManyWithoutCreatorNestedInput
    FundingRequirements_lastUpdatedBy?: FundingRequirementsUpdateManyWithoutUpdaterNestedInput
    FundingHistories_createdBy?: FundingHistoriesUpdateManyWithoutCreatorNestedInput
    ReferenceData_ReferenceData_createdByToUsers?: ReferenceDataUpdateManyWithoutUsers_ReferenceData_createdByToUsersNestedInput
    ReferenceData_ReferenceData_lastUpdatedByToUsers?: ReferenceDataUpdateManyWithoutUsers_ReferenceData_lastUpdatedByToUsersNestedInput
    ReleaseNotes_ReleaseNotes_approvedByToUsers?: ReleaseNotesUpdateManyWithoutUsers_ReleaseNotes_approvedByToUsersNestedInput
    ReleaseNotes_ReleaseNotes_createdByToUsers?: ReleaseNotesUpdateManyWithoutUsers_ReleaseNotes_createdByToUsersNestedInput
  }

  export type UsersUncheckedUpdateWithoutFundings_Fundings_lastUpdatedByToUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    role?: Enumenum_Users_roleFieldUpdateOperationsInput | $Enums.enum_Users_role
    active?: BoolFieldUpdateOperationsInput | boolean
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Bcrs_Bcrs_assignedToToUsers?: BcrsUncheckedUpdateManyWithoutUsers_Bcrs_assignedToToUsersNestedInput
    Bcrs_Bcrs_requestedByToUsers?: BcrsUncheckedUpdateManyWithoutUsers_Bcrs_requestedByToUsersNestedInput
    Fundings_Fundings_createdByToUsers?: FundingsUncheckedUpdateManyWithoutUsers_Fundings_createdByToUsersNestedInput
    FundingRequirements_createdBy?: FundingRequirementsUncheckedUpdateManyWithoutCreatorNestedInput
    FundingRequirements_lastUpdatedBy?: FundingRequirementsUncheckedUpdateManyWithoutUpdaterNestedInput
    FundingHistories_createdBy?: FundingHistoriesUncheckedUpdateManyWithoutCreatorNestedInput
    ReferenceData_ReferenceData_createdByToUsers?: ReferenceDataUncheckedUpdateManyWithoutUsers_ReferenceData_createdByToUsersNestedInput
    ReferenceData_ReferenceData_lastUpdatedByToUsers?: ReferenceDataUncheckedUpdateManyWithoutUsers_ReferenceData_lastUpdatedByToUsersNestedInput
    ReleaseNotes_ReleaseNotes_approvedByToUsers?: ReleaseNotesUncheckedUpdateManyWithoutUsers_ReleaseNotes_approvedByToUsersNestedInput
    ReleaseNotes_ReleaseNotes_createdByToUsers?: ReleaseNotesUncheckedUpdateManyWithoutUsers_ReleaseNotes_createdByToUsersNestedInput
  }

  export type UsersCreateWithoutFundingRequirements_createdByInput = {
    id: string
    email: string
    password: string
    name: string
    role?: $Enums.enum_Users_role
    active?: boolean
    lastLogin?: Date | string | null
    createdAt: Date | string
    updatedAt: Date | string
    Bcrs_Bcrs_assignedToToUsers?: BcrsCreateNestedManyWithoutUsers_Bcrs_assignedToToUsersInput
    Bcrs_Bcrs_requestedByToUsers?: BcrsCreateNestedManyWithoutUsers_Bcrs_requestedByToUsersInput
    Fundings_Fundings_createdByToUsers?: FundingsCreateNestedManyWithoutUsers_Fundings_createdByToUsersInput
    Fundings_Fundings_lastUpdatedByToUsers?: FundingsCreateNestedManyWithoutUsers_Fundings_lastUpdatedByToUsersInput
    FundingRequirements_lastUpdatedBy?: FundingRequirementsCreateNestedManyWithoutUpdaterInput
    FundingHistories_createdBy?: FundingHistoriesCreateNestedManyWithoutCreatorInput
    ReferenceData_ReferenceData_createdByToUsers?: ReferenceDataCreateNestedManyWithoutUsers_ReferenceData_createdByToUsersInput
    ReferenceData_ReferenceData_lastUpdatedByToUsers?: ReferenceDataCreateNestedManyWithoutUsers_ReferenceData_lastUpdatedByToUsersInput
    ReleaseNotes_ReleaseNotes_approvedByToUsers?: ReleaseNotesCreateNestedManyWithoutUsers_ReleaseNotes_approvedByToUsersInput
    ReleaseNotes_ReleaseNotes_createdByToUsers?: ReleaseNotesCreateNestedManyWithoutUsers_ReleaseNotes_createdByToUsersInput
  }

  export type UsersUncheckedCreateWithoutFundingRequirements_createdByInput = {
    id: string
    email: string
    password: string
    name: string
    role?: $Enums.enum_Users_role
    active?: boolean
    lastLogin?: Date | string | null
    createdAt: Date | string
    updatedAt: Date | string
    Bcrs_Bcrs_assignedToToUsers?: BcrsUncheckedCreateNestedManyWithoutUsers_Bcrs_assignedToToUsersInput
    Bcrs_Bcrs_requestedByToUsers?: BcrsUncheckedCreateNestedManyWithoutUsers_Bcrs_requestedByToUsersInput
    Fundings_Fundings_createdByToUsers?: FundingsUncheckedCreateNestedManyWithoutUsers_Fundings_createdByToUsersInput
    Fundings_Fundings_lastUpdatedByToUsers?: FundingsUncheckedCreateNestedManyWithoutUsers_Fundings_lastUpdatedByToUsersInput
    FundingRequirements_lastUpdatedBy?: FundingRequirementsUncheckedCreateNestedManyWithoutUpdaterInput
    FundingHistories_createdBy?: FundingHistoriesUncheckedCreateNestedManyWithoutCreatorInput
    ReferenceData_ReferenceData_createdByToUsers?: ReferenceDataUncheckedCreateNestedManyWithoutUsers_ReferenceData_createdByToUsersInput
    ReferenceData_ReferenceData_lastUpdatedByToUsers?: ReferenceDataUncheckedCreateNestedManyWithoutUsers_ReferenceData_lastUpdatedByToUsersInput
    ReleaseNotes_ReleaseNotes_approvedByToUsers?: ReleaseNotesUncheckedCreateNestedManyWithoutUsers_ReleaseNotes_approvedByToUsersInput
    ReleaseNotes_ReleaseNotes_createdByToUsers?: ReleaseNotesUncheckedCreateNestedManyWithoutUsers_ReleaseNotes_createdByToUsersInput
  }

  export type UsersCreateOrConnectWithoutFundingRequirements_createdByInput = {
    where: UsersWhereUniqueInput
    create: XOR<UsersCreateWithoutFundingRequirements_createdByInput, UsersUncheckedCreateWithoutFundingRequirements_createdByInput>
  }

  export type UsersCreateWithoutFundingRequirements_lastUpdatedByInput = {
    id: string
    email: string
    password: string
    name: string
    role?: $Enums.enum_Users_role
    active?: boolean
    lastLogin?: Date | string | null
    createdAt: Date | string
    updatedAt: Date | string
    Bcrs_Bcrs_assignedToToUsers?: BcrsCreateNestedManyWithoutUsers_Bcrs_assignedToToUsersInput
    Bcrs_Bcrs_requestedByToUsers?: BcrsCreateNestedManyWithoutUsers_Bcrs_requestedByToUsersInput
    Fundings_Fundings_createdByToUsers?: FundingsCreateNestedManyWithoutUsers_Fundings_createdByToUsersInput
    Fundings_Fundings_lastUpdatedByToUsers?: FundingsCreateNestedManyWithoutUsers_Fundings_lastUpdatedByToUsersInput
    FundingRequirements_createdBy?: FundingRequirementsCreateNestedManyWithoutCreatorInput
    FundingHistories_createdBy?: FundingHistoriesCreateNestedManyWithoutCreatorInput
    ReferenceData_ReferenceData_createdByToUsers?: ReferenceDataCreateNestedManyWithoutUsers_ReferenceData_createdByToUsersInput
    ReferenceData_ReferenceData_lastUpdatedByToUsers?: ReferenceDataCreateNestedManyWithoutUsers_ReferenceData_lastUpdatedByToUsersInput
    ReleaseNotes_ReleaseNotes_approvedByToUsers?: ReleaseNotesCreateNestedManyWithoutUsers_ReleaseNotes_approvedByToUsersInput
    ReleaseNotes_ReleaseNotes_createdByToUsers?: ReleaseNotesCreateNestedManyWithoutUsers_ReleaseNotes_createdByToUsersInput
  }

  export type UsersUncheckedCreateWithoutFundingRequirements_lastUpdatedByInput = {
    id: string
    email: string
    password: string
    name: string
    role?: $Enums.enum_Users_role
    active?: boolean
    lastLogin?: Date | string | null
    createdAt: Date | string
    updatedAt: Date | string
    Bcrs_Bcrs_assignedToToUsers?: BcrsUncheckedCreateNestedManyWithoutUsers_Bcrs_assignedToToUsersInput
    Bcrs_Bcrs_requestedByToUsers?: BcrsUncheckedCreateNestedManyWithoutUsers_Bcrs_requestedByToUsersInput
    Fundings_Fundings_createdByToUsers?: FundingsUncheckedCreateNestedManyWithoutUsers_Fundings_createdByToUsersInput
    Fundings_Fundings_lastUpdatedByToUsers?: FundingsUncheckedCreateNestedManyWithoutUsers_Fundings_lastUpdatedByToUsersInput
    FundingRequirements_createdBy?: FundingRequirementsUncheckedCreateNestedManyWithoutCreatorInput
    FundingHistories_createdBy?: FundingHistoriesUncheckedCreateNestedManyWithoutCreatorInput
    ReferenceData_ReferenceData_createdByToUsers?: ReferenceDataUncheckedCreateNestedManyWithoutUsers_ReferenceData_createdByToUsersInput
    ReferenceData_ReferenceData_lastUpdatedByToUsers?: ReferenceDataUncheckedCreateNestedManyWithoutUsers_ReferenceData_lastUpdatedByToUsersInput
    ReleaseNotes_ReleaseNotes_approvedByToUsers?: ReleaseNotesUncheckedCreateNestedManyWithoutUsers_ReleaseNotes_approvedByToUsersInput
    ReleaseNotes_ReleaseNotes_createdByToUsers?: ReleaseNotesUncheckedCreateNestedManyWithoutUsers_ReleaseNotes_createdByToUsersInput
  }

  export type UsersCreateOrConnectWithoutFundingRequirements_lastUpdatedByInput = {
    where: UsersWhereUniqueInput
    create: XOR<UsersCreateWithoutFundingRequirements_lastUpdatedByInput, UsersUncheckedCreateWithoutFundingRequirements_lastUpdatedByInput>
  }

  export type UsersUpsertWithoutFundingRequirements_createdByInput = {
    update: XOR<UsersUpdateWithoutFundingRequirements_createdByInput, UsersUncheckedUpdateWithoutFundingRequirements_createdByInput>
    create: XOR<UsersCreateWithoutFundingRequirements_createdByInput, UsersUncheckedCreateWithoutFundingRequirements_createdByInput>
    where?: UsersWhereInput
  }

  export type UsersUpdateToOneWithWhereWithoutFundingRequirements_createdByInput = {
    where?: UsersWhereInput
    data: XOR<UsersUpdateWithoutFundingRequirements_createdByInput, UsersUncheckedUpdateWithoutFundingRequirements_createdByInput>
  }

  export type UsersUpdateWithoutFundingRequirements_createdByInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    role?: Enumenum_Users_roleFieldUpdateOperationsInput | $Enums.enum_Users_role
    active?: BoolFieldUpdateOperationsInput | boolean
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Bcrs_Bcrs_assignedToToUsers?: BcrsUpdateManyWithoutUsers_Bcrs_assignedToToUsersNestedInput
    Bcrs_Bcrs_requestedByToUsers?: BcrsUpdateManyWithoutUsers_Bcrs_requestedByToUsersNestedInput
    Fundings_Fundings_createdByToUsers?: FundingsUpdateManyWithoutUsers_Fundings_createdByToUsersNestedInput
    Fundings_Fundings_lastUpdatedByToUsers?: FundingsUpdateManyWithoutUsers_Fundings_lastUpdatedByToUsersNestedInput
    FundingRequirements_lastUpdatedBy?: FundingRequirementsUpdateManyWithoutUpdaterNestedInput
    FundingHistories_createdBy?: FundingHistoriesUpdateManyWithoutCreatorNestedInput
    ReferenceData_ReferenceData_createdByToUsers?: ReferenceDataUpdateManyWithoutUsers_ReferenceData_createdByToUsersNestedInput
    ReferenceData_ReferenceData_lastUpdatedByToUsers?: ReferenceDataUpdateManyWithoutUsers_ReferenceData_lastUpdatedByToUsersNestedInput
    ReleaseNotes_ReleaseNotes_approvedByToUsers?: ReleaseNotesUpdateManyWithoutUsers_ReleaseNotes_approvedByToUsersNestedInput
    ReleaseNotes_ReleaseNotes_createdByToUsers?: ReleaseNotesUpdateManyWithoutUsers_ReleaseNotes_createdByToUsersNestedInput
  }

  export type UsersUncheckedUpdateWithoutFundingRequirements_createdByInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    role?: Enumenum_Users_roleFieldUpdateOperationsInput | $Enums.enum_Users_role
    active?: BoolFieldUpdateOperationsInput | boolean
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Bcrs_Bcrs_assignedToToUsers?: BcrsUncheckedUpdateManyWithoutUsers_Bcrs_assignedToToUsersNestedInput
    Bcrs_Bcrs_requestedByToUsers?: BcrsUncheckedUpdateManyWithoutUsers_Bcrs_requestedByToUsersNestedInput
    Fundings_Fundings_createdByToUsers?: FundingsUncheckedUpdateManyWithoutUsers_Fundings_createdByToUsersNestedInput
    Fundings_Fundings_lastUpdatedByToUsers?: FundingsUncheckedUpdateManyWithoutUsers_Fundings_lastUpdatedByToUsersNestedInput
    FundingRequirements_lastUpdatedBy?: FundingRequirementsUncheckedUpdateManyWithoutUpdaterNestedInput
    FundingHistories_createdBy?: FundingHistoriesUncheckedUpdateManyWithoutCreatorNestedInput
    ReferenceData_ReferenceData_createdByToUsers?: ReferenceDataUncheckedUpdateManyWithoutUsers_ReferenceData_createdByToUsersNestedInput
    ReferenceData_ReferenceData_lastUpdatedByToUsers?: ReferenceDataUncheckedUpdateManyWithoutUsers_ReferenceData_lastUpdatedByToUsersNestedInput
    ReleaseNotes_ReleaseNotes_approvedByToUsers?: ReleaseNotesUncheckedUpdateManyWithoutUsers_ReleaseNotes_approvedByToUsersNestedInput
    ReleaseNotes_ReleaseNotes_createdByToUsers?: ReleaseNotesUncheckedUpdateManyWithoutUsers_ReleaseNotes_createdByToUsersNestedInput
  }

  export type UsersUpsertWithoutFundingRequirements_lastUpdatedByInput = {
    update: XOR<UsersUpdateWithoutFundingRequirements_lastUpdatedByInput, UsersUncheckedUpdateWithoutFundingRequirements_lastUpdatedByInput>
    create: XOR<UsersCreateWithoutFundingRequirements_lastUpdatedByInput, UsersUncheckedCreateWithoutFundingRequirements_lastUpdatedByInput>
    where?: UsersWhereInput
  }

  export type UsersUpdateToOneWithWhereWithoutFundingRequirements_lastUpdatedByInput = {
    where?: UsersWhereInput
    data: XOR<UsersUpdateWithoutFundingRequirements_lastUpdatedByInput, UsersUncheckedUpdateWithoutFundingRequirements_lastUpdatedByInput>
  }

  export type UsersUpdateWithoutFundingRequirements_lastUpdatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    role?: Enumenum_Users_roleFieldUpdateOperationsInput | $Enums.enum_Users_role
    active?: BoolFieldUpdateOperationsInput | boolean
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Bcrs_Bcrs_assignedToToUsers?: BcrsUpdateManyWithoutUsers_Bcrs_assignedToToUsersNestedInput
    Bcrs_Bcrs_requestedByToUsers?: BcrsUpdateManyWithoutUsers_Bcrs_requestedByToUsersNestedInput
    Fundings_Fundings_createdByToUsers?: FundingsUpdateManyWithoutUsers_Fundings_createdByToUsersNestedInput
    Fundings_Fundings_lastUpdatedByToUsers?: FundingsUpdateManyWithoutUsers_Fundings_lastUpdatedByToUsersNestedInput
    FundingRequirements_createdBy?: FundingRequirementsUpdateManyWithoutCreatorNestedInput
    FundingHistories_createdBy?: FundingHistoriesUpdateManyWithoutCreatorNestedInput
    ReferenceData_ReferenceData_createdByToUsers?: ReferenceDataUpdateManyWithoutUsers_ReferenceData_createdByToUsersNestedInput
    ReferenceData_ReferenceData_lastUpdatedByToUsers?: ReferenceDataUpdateManyWithoutUsers_ReferenceData_lastUpdatedByToUsersNestedInput
    ReleaseNotes_ReleaseNotes_approvedByToUsers?: ReleaseNotesUpdateManyWithoutUsers_ReleaseNotes_approvedByToUsersNestedInput
    ReleaseNotes_ReleaseNotes_createdByToUsers?: ReleaseNotesUpdateManyWithoutUsers_ReleaseNotes_createdByToUsersNestedInput
  }

  export type UsersUncheckedUpdateWithoutFundingRequirements_lastUpdatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    role?: Enumenum_Users_roleFieldUpdateOperationsInput | $Enums.enum_Users_role
    active?: BoolFieldUpdateOperationsInput | boolean
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Bcrs_Bcrs_assignedToToUsers?: BcrsUncheckedUpdateManyWithoutUsers_Bcrs_assignedToToUsersNestedInput
    Bcrs_Bcrs_requestedByToUsers?: BcrsUncheckedUpdateManyWithoutUsers_Bcrs_requestedByToUsersNestedInput
    Fundings_Fundings_createdByToUsers?: FundingsUncheckedUpdateManyWithoutUsers_Fundings_createdByToUsersNestedInput
    Fundings_Fundings_lastUpdatedByToUsers?: FundingsUncheckedUpdateManyWithoutUsers_Fundings_lastUpdatedByToUsersNestedInput
    FundingRequirements_createdBy?: FundingRequirementsUncheckedUpdateManyWithoutCreatorNestedInput
    FundingHistories_createdBy?: FundingHistoriesUncheckedUpdateManyWithoutCreatorNestedInput
    ReferenceData_ReferenceData_createdByToUsers?: ReferenceDataUncheckedUpdateManyWithoutUsers_ReferenceData_createdByToUsersNestedInput
    ReferenceData_ReferenceData_lastUpdatedByToUsers?: ReferenceDataUncheckedUpdateManyWithoutUsers_ReferenceData_lastUpdatedByToUsersNestedInput
    ReleaseNotes_ReleaseNotes_approvedByToUsers?: ReleaseNotesUncheckedUpdateManyWithoutUsers_ReleaseNotes_approvedByToUsersNestedInput
    ReleaseNotes_ReleaseNotes_createdByToUsers?: ReleaseNotesUncheckedUpdateManyWithoutUsers_ReleaseNotes_createdByToUsersNestedInput
  }

  export type UsersCreateWithoutFundingHistories_createdByInput = {
    id: string
    email: string
    password: string
    name: string
    role?: $Enums.enum_Users_role
    active?: boolean
    lastLogin?: Date | string | null
    createdAt: Date | string
    updatedAt: Date | string
    Bcrs_Bcrs_assignedToToUsers?: BcrsCreateNestedManyWithoutUsers_Bcrs_assignedToToUsersInput
    Bcrs_Bcrs_requestedByToUsers?: BcrsCreateNestedManyWithoutUsers_Bcrs_requestedByToUsersInput
    Fundings_Fundings_createdByToUsers?: FundingsCreateNestedManyWithoutUsers_Fundings_createdByToUsersInput
    Fundings_Fundings_lastUpdatedByToUsers?: FundingsCreateNestedManyWithoutUsers_Fundings_lastUpdatedByToUsersInput
    FundingRequirements_createdBy?: FundingRequirementsCreateNestedManyWithoutCreatorInput
    FundingRequirements_lastUpdatedBy?: FundingRequirementsCreateNestedManyWithoutUpdaterInput
    ReferenceData_ReferenceData_createdByToUsers?: ReferenceDataCreateNestedManyWithoutUsers_ReferenceData_createdByToUsersInput
    ReferenceData_ReferenceData_lastUpdatedByToUsers?: ReferenceDataCreateNestedManyWithoutUsers_ReferenceData_lastUpdatedByToUsersInput
    ReleaseNotes_ReleaseNotes_approvedByToUsers?: ReleaseNotesCreateNestedManyWithoutUsers_ReleaseNotes_approvedByToUsersInput
    ReleaseNotes_ReleaseNotes_createdByToUsers?: ReleaseNotesCreateNestedManyWithoutUsers_ReleaseNotes_createdByToUsersInput
  }

  export type UsersUncheckedCreateWithoutFundingHistories_createdByInput = {
    id: string
    email: string
    password: string
    name: string
    role?: $Enums.enum_Users_role
    active?: boolean
    lastLogin?: Date | string | null
    createdAt: Date | string
    updatedAt: Date | string
    Bcrs_Bcrs_assignedToToUsers?: BcrsUncheckedCreateNestedManyWithoutUsers_Bcrs_assignedToToUsersInput
    Bcrs_Bcrs_requestedByToUsers?: BcrsUncheckedCreateNestedManyWithoutUsers_Bcrs_requestedByToUsersInput
    Fundings_Fundings_createdByToUsers?: FundingsUncheckedCreateNestedManyWithoutUsers_Fundings_createdByToUsersInput
    Fundings_Fundings_lastUpdatedByToUsers?: FundingsUncheckedCreateNestedManyWithoutUsers_Fundings_lastUpdatedByToUsersInput
    FundingRequirements_createdBy?: FundingRequirementsUncheckedCreateNestedManyWithoutCreatorInput
    FundingRequirements_lastUpdatedBy?: FundingRequirementsUncheckedCreateNestedManyWithoutUpdaterInput
    ReferenceData_ReferenceData_createdByToUsers?: ReferenceDataUncheckedCreateNestedManyWithoutUsers_ReferenceData_createdByToUsersInput
    ReferenceData_ReferenceData_lastUpdatedByToUsers?: ReferenceDataUncheckedCreateNestedManyWithoutUsers_ReferenceData_lastUpdatedByToUsersInput
    ReleaseNotes_ReleaseNotes_approvedByToUsers?: ReleaseNotesUncheckedCreateNestedManyWithoutUsers_ReleaseNotes_approvedByToUsersInput
    ReleaseNotes_ReleaseNotes_createdByToUsers?: ReleaseNotesUncheckedCreateNestedManyWithoutUsers_ReleaseNotes_createdByToUsersInput
  }

  export type UsersCreateOrConnectWithoutFundingHistories_createdByInput = {
    where: UsersWhereUniqueInput
    create: XOR<UsersCreateWithoutFundingHistories_createdByInput, UsersUncheckedCreateWithoutFundingHistories_createdByInput>
  }

  export type UsersUpsertWithoutFundingHistories_createdByInput = {
    update: XOR<UsersUpdateWithoutFundingHistories_createdByInput, UsersUncheckedUpdateWithoutFundingHistories_createdByInput>
    create: XOR<UsersCreateWithoutFundingHistories_createdByInput, UsersUncheckedCreateWithoutFundingHistories_createdByInput>
    where?: UsersWhereInput
  }

  export type UsersUpdateToOneWithWhereWithoutFundingHistories_createdByInput = {
    where?: UsersWhereInput
    data: XOR<UsersUpdateWithoutFundingHistories_createdByInput, UsersUncheckedUpdateWithoutFundingHistories_createdByInput>
  }

  export type UsersUpdateWithoutFundingHistories_createdByInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    role?: Enumenum_Users_roleFieldUpdateOperationsInput | $Enums.enum_Users_role
    active?: BoolFieldUpdateOperationsInput | boolean
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Bcrs_Bcrs_assignedToToUsers?: BcrsUpdateManyWithoutUsers_Bcrs_assignedToToUsersNestedInput
    Bcrs_Bcrs_requestedByToUsers?: BcrsUpdateManyWithoutUsers_Bcrs_requestedByToUsersNestedInput
    Fundings_Fundings_createdByToUsers?: FundingsUpdateManyWithoutUsers_Fundings_createdByToUsersNestedInput
    Fundings_Fundings_lastUpdatedByToUsers?: FundingsUpdateManyWithoutUsers_Fundings_lastUpdatedByToUsersNestedInput
    FundingRequirements_createdBy?: FundingRequirementsUpdateManyWithoutCreatorNestedInput
    FundingRequirements_lastUpdatedBy?: FundingRequirementsUpdateManyWithoutUpdaterNestedInput
    ReferenceData_ReferenceData_createdByToUsers?: ReferenceDataUpdateManyWithoutUsers_ReferenceData_createdByToUsersNestedInput
    ReferenceData_ReferenceData_lastUpdatedByToUsers?: ReferenceDataUpdateManyWithoutUsers_ReferenceData_lastUpdatedByToUsersNestedInput
    ReleaseNotes_ReleaseNotes_approvedByToUsers?: ReleaseNotesUpdateManyWithoutUsers_ReleaseNotes_approvedByToUsersNestedInput
    ReleaseNotes_ReleaseNotes_createdByToUsers?: ReleaseNotesUpdateManyWithoutUsers_ReleaseNotes_createdByToUsersNestedInput
  }

  export type UsersUncheckedUpdateWithoutFundingHistories_createdByInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    role?: Enumenum_Users_roleFieldUpdateOperationsInput | $Enums.enum_Users_role
    active?: BoolFieldUpdateOperationsInput | boolean
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Bcrs_Bcrs_assignedToToUsers?: BcrsUncheckedUpdateManyWithoutUsers_Bcrs_assignedToToUsersNestedInput
    Bcrs_Bcrs_requestedByToUsers?: BcrsUncheckedUpdateManyWithoutUsers_Bcrs_requestedByToUsersNestedInput
    Fundings_Fundings_createdByToUsers?: FundingsUncheckedUpdateManyWithoutUsers_Fundings_createdByToUsersNestedInput
    Fundings_Fundings_lastUpdatedByToUsers?: FundingsUncheckedUpdateManyWithoutUsers_Fundings_lastUpdatedByToUsersNestedInput
    FundingRequirements_createdBy?: FundingRequirementsUncheckedUpdateManyWithoutCreatorNestedInput
    FundingRequirements_lastUpdatedBy?: FundingRequirementsUncheckedUpdateManyWithoutUpdaterNestedInput
    ReferenceData_ReferenceData_createdByToUsers?: ReferenceDataUncheckedUpdateManyWithoutUsers_ReferenceData_createdByToUsersNestedInput
    ReferenceData_ReferenceData_lastUpdatedByToUsers?: ReferenceDataUncheckedUpdateManyWithoutUsers_ReferenceData_lastUpdatedByToUsersNestedInput
    ReleaseNotes_ReleaseNotes_approvedByToUsers?: ReleaseNotesUncheckedUpdateManyWithoutUsers_ReleaseNotes_approvedByToUsersNestedInput
    ReleaseNotes_ReleaseNotes_createdByToUsers?: ReleaseNotesUncheckedUpdateManyWithoutUsers_ReleaseNotes_createdByToUsersNestedInput
  }

  export type UsersCreateWithoutReferenceData_ReferenceData_createdByToUsersInput = {
    id: string
    email: string
    password: string
    name: string
    role?: $Enums.enum_Users_role
    active?: boolean
    lastLogin?: Date | string | null
    createdAt: Date | string
    updatedAt: Date | string
    Bcrs_Bcrs_assignedToToUsers?: BcrsCreateNestedManyWithoutUsers_Bcrs_assignedToToUsersInput
    Bcrs_Bcrs_requestedByToUsers?: BcrsCreateNestedManyWithoutUsers_Bcrs_requestedByToUsersInput
    Fundings_Fundings_createdByToUsers?: FundingsCreateNestedManyWithoutUsers_Fundings_createdByToUsersInput
    Fundings_Fundings_lastUpdatedByToUsers?: FundingsCreateNestedManyWithoutUsers_Fundings_lastUpdatedByToUsersInput
    FundingRequirements_createdBy?: FundingRequirementsCreateNestedManyWithoutCreatorInput
    FundingRequirements_lastUpdatedBy?: FundingRequirementsCreateNestedManyWithoutUpdaterInput
    FundingHistories_createdBy?: FundingHistoriesCreateNestedManyWithoutCreatorInput
    ReferenceData_ReferenceData_lastUpdatedByToUsers?: ReferenceDataCreateNestedManyWithoutUsers_ReferenceData_lastUpdatedByToUsersInput
    ReleaseNotes_ReleaseNotes_approvedByToUsers?: ReleaseNotesCreateNestedManyWithoutUsers_ReleaseNotes_approvedByToUsersInput
    ReleaseNotes_ReleaseNotes_createdByToUsers?: ReleaseNotesCreateNestedManyWithoutUsers_ReleaseNotes_createdByToUsersInput
  }

  export type UsersUncheckedCreateWithoutReferenceData_ReferenceData_createdByToUsersInput = {
    id: string
    email: string
    password: string
    name: string
    role?: $Enums.enum_Users_role
    active?: boolean
    lastLogin?: Date | string | null
    createdAt: Date | string
    updatedAt: Date | string
    Bcrs_Bcrs_assignedToToUsers?: BcrsUncheckedCreateNestedManyWithoutUsers_Bcrs_assignedToToUsersInput
    Bcrs_Bcrs_requestedByToUsers?: BcrsUncheckedCreateNestedManyWithoutUsers_Bcrs_requestedByToUsersInput
    Fundings_Fundings_createdByToUsers?: FundingsUncheckedCreateNestedManyWithoutUsers_Fundings_createdByToUsersInput
    Fundings_Fundings_lastUpdatedByToUsers?: FundingsUncheckedCreateNestedManyWithoutUsers_Fundings_lastUpdatedByToUsersInput
    FundingRequirements_createdBy?: FundingRequirementsUncheckedCreateNestedManyWithoutCreatorInput
    FundingRequirements_lastUpdatedBy?: FundingRequirementsUncheckedCreateNestedManyWithoutUpdaterInput
    FundingHistories_createdBy?: FundingHistoriesUncheckedCreateNestedManyWithoutCreatorInput
    ReferenceData_ReferenceData_lastUpdatedByToUsers?: ReferenceDataUncheckedCreateNestedManyWithoutUsers_ReferenceData_lastUpdatedByToUsersInput
    ReleaseNotes_ReleaseNotes_approvedByToUsers?: ReleaseNotesUncheckedCreateNestedManyWithoutUsers_ReleaseNotes_approvedByToUsersInput
    ReleaseNotes_ReleaseNotes_createdByToUsers?: ReleaseNotesUncheckedCreateNestedManyWithoutUsers_ReleaseNotes_createdByToUsersInput
  }

  export type UsersCreateOrConnectWithoutReferenceData_ReferenceData_createdByToUsersInput = {
    where: UsersWhereUniqueInput
    create: XOR<UsersCreateWithoutReferenceData_ReferenceData_createdByToUsersInput, UsersUncheckedCreateWithoutReferenceData_ReferenceData_createdByToUsersInput>
  }

  export type UsersCreateWithoutReferenceData_ReferenceData_lastUpdatedByToUsersInput = {
    id: string
    email: string
    password: string
    name: string
    role?: $Enums.enum_Users_role
    active?: boolean
    lastLogin?: Date | string | null
    createdAt: Date | string
    updatedAt: Date | string
    Bcrs_Bcrs_assignedToToUsers?: BcrsCreateNestedManyWithoutUsers_Bcrs_assignedToToUsersInput
    Bcrs_Bcrs_requestedByToUsers?: BcrsCreateNestedManyWithoutUsers_Bcrs_requestedByToUsersInput
    Fundings_Fundings_createdByToUsers?: FundingsCreateNestedManyWithoutUsers_Fundings_createdByToUsersInput
    Fundings_Fundings_lastUpdatedByToUsers?: FundingsCreateNestedManyWithoutUsers_Fundings_lastUpdatedByToUsersInput
    FundingRequirements_createdBy?: FundingRequirementsCreateNestedManyWithoutCreatorInput
    FundingRequirements_lastUpdatedBy?: FundingRequirementsCreateNestedManyWithoutUpdaterInput
    FundingHistories_createdBy?: FundingHistoriesCreateNestedManyWithoutCreatorInput
    ReferenceData_ReferenceData_createdByToUsers?: ReferenceDataCreateNestedManyWithoutUsers_ReferenceData_createdByToUsersInput
    ReleaseNotes_ReleaseNotes_approvedByToUsers?: ReleaseNotesCreateNestedManyWithoutUsers_ReleaseNotes_approvedByToUsersInput
    ReleaseNotes_ReleaseNotes_createdByToUsers?: ReleaseNotesCreateNestedManyWithoutUsers_ReleaseNotes_createdByToUsersInput
  }

  export type UsersUncheckedCreateWithoutReferenceData_ReferenceData_lastUpdatedByToUsersInput = {
    id: string
    email: string
    password: string
    name: string
    role?: $Enums.enum_Users_role
    active?: boolean
    lastLogin?: Date | string | null
    createdAt: Date | string
    updatedAt: Date | string
    Bcrs_Bcrs_assignedToToUsers?: BcrsUncheckedCreateNestedManyWithoutUsers_Bcrs_assignedToToUsersInput
    Bcrs_Bcrs_requestedByToUsers?: BcrsUncheckedCreateNestedManyWithoutUsers_Bcrs_requestedByToUsersInput
    Fundings_Fundings_createdByToUsers?: FundingsUncheckedCreateNestedManyWithoutUsers_Fundings_createdByToUsersInput
    Fundings_Fundings_lastUpdatedByToUsers?: FundingsUncheckedCreateNestedManyWithoutUsers_Fundings_lastUpdatedByToUsersInput
    FundingRequirements_createdBy?: FundingRequirementsUncheckedCreateNestedManyWithoutCreatorInput
    FundingRequirements_lastUpdatedBy?: FundingRequirementsUncheckedCreateNestedManyWithoutUpdaterInput
    FundingHistories_createdBy?: FundingHistoriesUncheckedCreateNestedManyWithoutCreatorInput
    ReferenceData_ReferenceData_createdByToUsers?: ReferenceDataUncheckedCreateNestedManyWithoutUsers_ReferenceData_createdByToUsersInput
    ReleaseNotes_ReleaseNotes_approvedByToUsers?: ReleaseNotesUncheckedCreateNestedManyWithoutUsers_ReleaseNotes_approvedByToUsersInput
    ReleaseNotes_ReleaseNotes_createdByToUsers?: ReleaseNotesUncheckedCreateNestedManyWithoutUsers_ReleaseNotes_createdByToUsersInput
  }

  export type UsersCreateOrConnectWithoutReferenceData_ReferenceData_lastUpdatedByToUsersInput = {
    where: UsersWhereUniqueInput
    create: XOR<UsersCreateWithoutReferenceData_ReferenceData_lastUpdatedByToUsersInput, UsersUncheckedCreateWithoutReferenceData_ReferenceData_lastUpdatedByToUsersInput>
  }

  export type UsersUpsertWithoutReferenceData_ReferenceData_createdByToUsersInput = {
    update: XOR<UsersUpdateWithoutReferenceData_ReferenceData_createdByToUsersInput, UsersUncheckedUpdateWithoutReferenceData_ReferenceData_createdByToUsersInput>
    create: XOR<UsersCreateWithoutReferenceData_ReferenceData_createdByToUsersInput, UsersUncheckedCreateWithoutReferenceData_ReferenceData_createdByToUsersInput>
    where?: UsersWhereInput
  }

  export type UsersUpdateToOneWithWhereWithoutReferenceData_ReferenceData_createdByToUsersInput = {
    where?: UsersWhereInput
    data: XOR<UsersUpdateWithoutReferenceData_ReferenceData_createdByToUsersInput, UsersUncheckedUpdateWithoutReferenceData_ReferenceData_createdByToUsersInput>
  }

  export type UsersUpdateWithoutReferenceData_ReferenceData_createdByToUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    role?: Enumenum_Users_roleFieldUpdateOperationsInput | $Enums.enum_Users_role
    active?: BoolFieldUpdateOperationsInput | boolean
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Bcrs_Bcrs_assignedToToUsers?: BcrsUpdateManyWithoutUsers_Bcrs_assignedToToUsersNestedInput
    Bcrs_Bcrs_requestedByToUsers?: BcrsUpdateManyWithoutUsers_Bcrs_requestedByToUsersNestedInput
    Fundings_Fundings_createdByToUsers?: FundingsUpdateManyWithoutUsers_Fundings_createdByToUsersNestedInput
    Fundings_Fundings_lastUpdatedByToUsers?: FundingsUpdateManyWithoutUsers_Fundings_lastUpdatedByToUsersNestedInput
    FundingRequirements_createdBy?: FundingRequirementsUpdateManyWithoutCreatorNestedInput
    FundingRequirements_lastUpdatedBy?: FundingRequirementsUpdateManyWithoutUpdaterNestedInput
    FundingHistories_createdBy?: FundingHistoriesUpdateManyWithoutCreatorNestedInput
    ReferenceData_ReferenceData_lastUpdatedByToUsers?: ReferenceDataUpdateManyWithoutUsers_ReferenceData_lastUpdatedByToUsersNestedInput
    ReleaseNotes_ReleaseNotes_approvedByToUsers?: ReleaseNotesUpdateManyWithoutUsers_ReleaseNotes_approvedByToUsersNestedInput
    ReleaseNotes_ReleaseNotes_createdByToUsers?: ReleaseNotesUpdateManyWithoutUsers_ReleaseNotes_createdByToUsersNestedInput
  }

  export type UsersUncheckedUpdateWithoutReferenceData_ReferenceData_createdByToUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    role?: Enumenum_Users_roleFieldUpdateOperationsInput | $Enums.enum_Users_role
    active?: BoolFieldUpdateOperationsInput | boolean
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Bcrs_Bcrs_assignedToToUsers?: BcrsUncheckedUpdateManyWithoutUsers_Bcrs_assignedToToUsersNestedInput
    Bcrs_Bcrs_requestedByToUsers?: BcrsUncheckedUpdateManyWithoutUsers_Bcrs_requestedByToUsersNestedInput
    Fundings_Fundings_createdByToUsers?: FundingsUncheckedUpdateManyWithoutUsers_Fundings_createdByToUsersNestedInput
    Fundings_Fundings_lastUpdatedByToUsers?: FundingsUncheckedUpdateManyWithoutUsers_Fundings_lastUpdatedByToUsersNestedInput
    FundingRequirements_createdBy?: FundingRequirementsUncheckedUpdateManyWithoutCreatorNestedInput
    FundingRequirements_lastUpdatedBy?: FundingRequirementsUncheckedUpdateManyWithoutUpdaterNestedInput
    FundingHistories_createdBy?: FundingHistoriesUncheckedUpdateManyWithoutCreatorNestedInput
    ReferenceData_ReferenceData_lastUpdatedByToUsers?: ReferenceDataUncheckedUpdateManyWithoutUsers_ReferenceData_lastUpdatedByToUsersNestedInput
    ReleaseNotes_ReleaseNotes_approvedByToUsers?: ReleaseNotesUncheckedUpdateManyWithoutUsers_ReleaseNotes_approvedByToUsersNestedInput
    ReleaseNotes_ReleaseNotes_createdByToUsers?: ReleaseNotesUncheckedUpdateManyWithoutUsers_ReleaseNotes_createdByToUsersNestedInput
  }

  export type UsersUpsertWithoutReferenceData_ReferenceData_lastUpdatedByToUsersInput = {
    update: XOR<UsersUpdateWithoutReferenceData_ReferenceData_lastUpdatedByToUsersInput, UsersUncheckedUpdateWithoutReferenceData_ReferenceData_lastUpdatedByToUsersInput>
    create: XOR<UsersCreateWithoutReferenceData_ReferenceData_lastUpdatedByToUsersInput, UsersUncheckedCreateWithoutReferenceData_ReferenceData_lastUpdatedByToUsersInput>
    where?: UsersWhereInput
  }

  export type UsersUpdateToOneWithWhereWithoutReferenceData_ReferenceData_lastUpdatedByToUsersInput = {
    where?: UsersWhereInput
    data: XOR<UsersUpdateWithoutReferenceData_ReferenceData_lastUpdatedByToUsersInput, UsersUncheckedUpdateWithoutReferenceData_ReferenceData_lastUpdatedByToUsersInput>
  }

  export type UsersUpdateWithoutReferenceData_ReferenceData_lastUpdatedByToUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    role?: Enumenum_Users_roleFieldUpdateOperationsInput | $Enums.enum_Users_role
    active?: BoolFieldUpdateOperationsInput | boolean
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Bcrs_Bcrs_assignedToToUsers?: BcrsUpdateManyWithoutUsers_Bcrs_assignedToToUsersNestedInput
    Bcrs_Bcrs_requestedByToUsers?: BcrsUpdateManyWithoutUsers_Bcrs_requestedByToUsersNestedInput
    Fundings_Fundings_createdByToUsers?: FundingsUpdateManyWithoutUsers_Fundings_createdByToUsersNestedInput
    Fundings_Fundings_lastUpdatedByToUsers?: FundingsUpdateManyWithoutUsers_Fundings_lastUpdatedByToUsersNestedInput
    FundingRequirements_createdBy?: FundingRequirementsUpdateManyWithoutCreatorNestedInput
    FundingRequirements_lastUpdatedBy?: FundingRequirementsUpdateManyWithoutUpdaterNestedInput
    FundingHistories_createdBy?: FundingHistoriesUpdateManyWithoutCreatorNestedInput
    ReferenceData_ReferenceData_createdByToUsers?: ReferenceDataUpdateManyWithoutUsers_ReferenceData_createdByToUsersNestedInput
    ReleaseNotes_ReleaseNotes_approvedByToUsers?: ReleaseNotesUpdateManyWithoutUsers_ReleaseNotes_approvedByToUsersNestedInput
    ReleaseNotes_ReleaseNotes_createdByToUsers?: ReleaseNotesUpdateManyWithoutUsers_ReleaseNotes_createdByToUsersNestedInput
  }

  export type UsersUncheckedUpdateWithoutReferenceData_ReferenceData_lastUpdatedByToUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    role?: Enumenum_Users_roleFieldUpdateOperationsInput | $Enums.enum_Users_role
    active?: BoolFieldUpdateOperationsInput | boolean
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Bcrs_Bcrs_assignedToToUsers?: BcrsUncheckedUpdateManyWithoutUsers_Bcrs_assignedToToUsersNestedInput
    Bcrs_Bcrs_requestedByToUsers?: BcrsUncheckedUpdateManyWithoutUsers_Bcrs_requestedByToUsersNestedInput
    Fundings_Fundings_createdByToUsers?: FundingsUncheckedUpdateManyWithoutUsers_Fundings_createdByToUsersNestedInput
    Fundings_Fundings_lastUpdatedByToUsers?: FundingsUncheckedUpdateManyWithoutUsers_Fundings_lastUpdatedByToUsersNestedInput
    FundingRequirements_createdBy?: FundingRequirementsUncheckedUpdateManyWithoutCreatorNestedInput
    FundingRequirements_lastUpdatedBy?: FundingRequirementsUncheckedUpdateManyWithoutUpdaterNestedInput
    FundingHistories_createdBy?: FundingHistoriesUncheckedUpdateManyWithoutCreatorNestedInput
    ReferenceData_ReferenceData_createdByToUsers?: ReferenceDataUncheckedUpdateManyWithoutUsers_ReferenceData_createdByToUsersNestedInput
    ReleaseNotes_ReleaseNotes_approvedByToUsers?: ReleaseNotesUncheckedUpdateManyWithoutUsers_ReleaseNotes_approvedByToUsersNestedInput
    ReleaseNotes_ReleaseNotes_createdByToUsers?: ReleaseNotesUncheckedUpdateManyWithoutUsers_ReleaseNotes_createdByToUsersNestedInput
  }

  export type UsersCreateWithoutReleaseNotes_ReleaseNotes_approvedByToUsersInput = {
    id: string
    email: string
    password: string
    name: string
    role?: $Enums.enum_Users_role
    active?: boolean
    lastLogin?: Date | string | null
    createdAt: Date | string
    updatedAt: Date | string
    Bcrs_Bcrs_assignedToToUsers?: BcrsCreateNestedManyWithoutUsers_Bcrs_assignedToToUsersInput
    Bcrs_Bcrs_requestedByToUsers?: BcrsCreateNestedManyWithoutUsers_Bcrs_requestedByToUsersInput
    Fundings_Fundings_createdByToUsers?: FundingsCreateNestedManyWithoutUsers_Fundings_createdByToUsersInput
    Fundings_Fundings_lastUpdatedByToUsers?: FundingsCreateNestedManyWithoutUsers_Fundings_lastUpdatedByToUsersInput
    FundingRequirements_createdBy?: FundingRequirementsCreateNestedManyWithoutCreatorInput
    FundingRequirements_lastUpdatedBy?: FundingRequirementsCreateNestedManyWithoutUpdaterInput
    FundingHistories_createdBy?: FundingHistoriesCreateNestedManyWithoutCreatorInput
    ReferenceData_ReferenceData_createdByToUsers?: ReferenceDataCreateNestedManyWithoutUsers_ReferenceData_createdByToUsersInput
    ReferenceData_ReferenceData_lastUpdatedByToUsers?: ReferenceDataCreateNestedManyWithoutUsers_ReferenceData_lastUpdatedByToUsersInput
    ReleaseNotes_ReleaseNotes_createdByToUsers?: ReleaseNotesCreateNestedManyWithoutUsers_ReleaseNotes_createdByToUsersInput
  }

  export type UsersUncheckedCreateWithoutReleaseNotes_ReleaseNotes_approvedByToUsersInput = {
    id: string
    email: string
    password: string
    name: string
    role?: $Enums.enum_Users_role
    active?: boolean
    lastLogin?: Date | string | null
    createdAt: Date | string
    updatedAt: Date | string
    Bcrs_Bcrs_assignedToToUsers?: BcrsUncheckedCreateNestedManyWithoutUsers_Bcrs_assignedToToUsersInput
    Bcrs_Bcrs_requestedByToUsers?: BcrsUncheckedCreateNestedManyWithoutUsers_Bcrs_requestedByToUsersInput
    Fundings_Fundings_createdByToUsers?: FundingsUncheckedCreateNestedManyWithoutUsers_Fundings_createdByToUsersInput
    Fundings_Fundings_lastUpdatedByToUsers?: FundingsUncheckedCreateNestedManyWithoutUsers_Fundings_lastUpdatedByToUsersInput
    FundingRequirements_createdBy?: FundingRequirementsUncheckedCreateNestedManyWithoutCreatorInput
    FundingRequirements_lastUpdatedBy?: FundingRequirementsUncheckedCreateNestedManyWithoutUpdaterInput
    FundingHistories_createdBy?: FundingHistoriesUncheckedCreateNestedManyWithoutCreatorInput
    ReferenceData_ReferenceData_createdByToUsers?: ReferenceDataUncheckedCreateNestedManyWithoutUsers_ReferenceData_createdByToUsersInput
    ReferenceData_ReferenceData_lastUpdatedByToUsers?: ReferenceDataUncheckedCreateNestedManyWithoutUsers_ReferenceData_lastUpdatedByToUsersInput
    ReleaseNotes_ReleaseNotes_createdByToUsers?: ReleaseNotesUncheckedCreateNestedManyWithoutUsers_ReleaseNotes_createdByToUsersInput
  }

  export type UsersCreateOrConnectWithoutReleaseNotes_ReleaseNotes_approvedByToUsersInput = {
    where: UsersWhereUniqueInput
    create: XOR<UsersCreateWithoutReleaseNotes_ReleaseNotes_approvedByToUsersInput, UsersUncheckedCreateWithoutReleaseNotes_ReleaseNotes_approvedByToUsersInput>
  }

  export type UsersCreateWithoutReleaseNotes_ReleaseNotes_createdByToUsersInput = {
    id: string
    email: string
    password: string
    name: string
    role?: $Enums.enum_Users_role
    active?: boolean
    lastLogin?: Date | string | null
    createdAt: Date | string
    updatedAt: Date | string
    Bcrs_Bcrs_assignedToToUsers?: BcrsCreateNestedManyWithoutUsers_Bcrs_assignedToToUsersInput
    Bcrs_Bcrs_requestedByToUsers?: BcrsCreateNestedManyWithoutUsers_Bcrs_requestedByToUsersInput
    Fundings_Fundings_createdByToUsers?: FundingsCreateNestedManyWithoutUsers_Fundings_createdByToUsersInput
    Fundings_Fundings_lastUpdatedByToUsers?: FundingsCreateNestedManyWithoutUsers_Fundings_lastUpdatedByToUsersInput
    FundingRequirements_createdBy?: FundingRequirementsCreateNestedManyWithoutCreatorInput
    FundingRequirements_lastUpdatedBy?: FundingRequirementsCreateNestedManyWithoutUpdaterInput
    FundingHistories_createdBy?: FundingHistoriesCreateNestedManyWithoutCreatorInput
    ReferenceData_ReferenceData_createdByToUsers?: ReferenceDataCreateNestedManyWithoutUsers_ReferenceData_createdByToUsersInput
    ReferenceData_ReferenceData_lastUpdatedByToUsers?: ReferenceDataCreateNestedManyWithoutUsers_ReferenceData_lastUpdatedByToUsersInput
    ReleaseNotes_ReleaseNotes_approvedByToUsers?: ReleaseNotesCreateNestedManyWithoutUsers_ReleaseNotes_approvedByToUsersInput
  }

  export type UsersUncheckedCreateWithoutReleaseNotes_ReleaseNotes_createdByToUsersInput = {
    id: string
    email: string
    password: string
    name: string
    role?: $Enums.enum_Users_role
    active?: boolean
    lastLogin?: Date | string | null
    createdAt: Date | string
    updatedAt: Date | string
    Bcrs_Bcrs_assignedToToUsers?: BcrsUncheckedCreateNestedManyWithoutUsers_Bcrs_assignedToToUsersInput
    Bcrs_Bcrs_requestedByToUsers?: BcrsUncheckedCreateNestedManyWithoutUsers_Bcrs_requestedByToUsersInput
    Fundings_Fundings_createdByToUsers?: FundingsUncheckedCreateNestedManyWithoutUsers_Fundings_createdByToUsersInput
    Fundings_Fundings_lastUpdatedByToUsers?: FundingsUncheckedCreateNestedManyWithoutUsers_Fundings_lastUpdatedByToUsersInput
    FundingRequirements_createdBy?: FundingRequirementsUncheckedCreateNestedManyWithoutCreatorInput
    FundingRequirements_lastUpdatedBy?: FundingRequirementsUncheckedCreateNestedManyWithoutUpdaterInput
    FundingHistories_createdBy?: FundingHistoriesUncheckedCreateNestedManyWithoutCreatorInput
    ReferenceData_ReferenceData_createdByToUsers?: ReferenceDataUncheckedCreateNestedManyWithoutUsers_ReferenceData_createdByToUsersInput
    ReferenceData_ReferenceData_lastUpdatedByToUsers?: ReferenceDataUncheckedCreateNestedManyWithoutUsers_ReferenceData_lastUpdatedByToUsersInput
    ReleaseNotes_ReleaseNotes_approvedByToUsers?: ReleaseNotesUncheckedCreateNestedManyWithoutUsers_ReleaseNotes_approvedByToUsersInput
  }

  export type UsersCreateOrConnectWithoutReleaseNotes_ReleaseNotes_createdByToUsersInput = {
    where: UsersWhereUniqueInput
    create: XOR<UsersCreateWithoutReleaseNotes_ReleaseNotes_createdByToUsersInput, UsersUncheckedCreateWithoutReleaseNotes_ReleaseNotes_createdByToUsersInput>
  }

  export type UsersUpsertWithoutReleaseNotes_ReleaseNotes_approvedByToUsersInput = {
    update: XOR<UsersUpdateWithoutReleaseNotes_ReleaseNotes_approvedByToUsersInput, UsersUncheckedUpdateWithoutReleaseNotes_ReleaseNotes_approvedByToUsersInput>
    create: XOR<UsersCreateWithoutReleaseNotes_ReleaseNotes_approvedByToUsersInput, UsersUncheckedCreateWithoutReleaseNotes_ReleaseNotes_approvedByToUsersInput>
    where?: UsersWhereInput
  }

  export type UsersUpdateToOneWithWhereWithoutReleaseNotes_ReleaseNotes_approvedByToUsersInput = {
    where?: UsersWhereInput
    data: XOR<UsersUpdateWithoutReleaseNotes_ReleaseNotes_approvedByToUsersInput, UsersUncheckedUpdateWithoutReleaseNotes_ReleaseNotes_approvedByToUsersInput>
  }

  export type UsersUpdateWithoutReleaseNotes_ReleaseNotes_approvedByToUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    role?: Enumenum_Users_roleFieldUpdateOperationsInput | $Enums.enum_Users_role
    active?: BoolFieldUpdateOperationsInput | boolean
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Bcrs_Bcrs_assignedToToUsers?: BcrsUpdateManyWithoutUsers_Bcrs_assignedToToUsersNestedInput
    Bcrs_Bcrs_requestedByToUsers?: BcrsUpdateManyWithoutUsers_Bcrs_requestedByToUsersNestedInput
    Fundings_Fundings_createdByToUsers?: FundingsUpdateManyWithoutUsers_Fundings_createdByToUsersNestedInput
    Fundings_Fundings_lastUpdatedByToUsers?: FundingsUpdateManyWithoutUsers_Fundings_lastUpdatedByToUsersNestedInput
    FundingRequirements_createdBy?: FundingRequirementsUpdateManyWithoutCreatorNestedInput
    FundingRequirements_lastUpdatedBy?: FundingRequirementsUpdateManyWithoutUpdaterNestedInput
    FundingHistories_createdBy?: FundingHistoriesUpdateManyWithoutCreatorNestedInput
    ReferenceData_ReferenceData_createdByToUsers?: ReferenceDataUpdateManyWithoutUsers_ReferenceData_createdByToUsersNestedInput
    ReferenceData_ReferenceData_lastUpdatedByToUsers?: ReferenceDataUpdateManyWithoutUsers_ReferenceData_lastUpdatedByToUsersNestedInput
    ReleaseNotes_ReleaseNotes_createdByToUsers?: ReleaseNotesUpdateManyWithoutUsers_ReleaseNotes_createdByToUsersNestedInput
  }

  export type UsersUncheckedUpdateWithoutReleaseNotes_ReleaseNotes_approvedByToUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    role?: Enumenum_Users_roleFieldUpdateOperationsInput | $Enums.enum_Users_role
    active?: BoolFieldUpdateOperationsInput | boolean
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Bcrs_Bcrs_assignedToToUsers?: BcrsUncheckedUpdateManyWithoutUsers_Bcrs_assignedToToUsersNestedInput
    Bcrs_Bcrs_requestedByToUsers?: BcrsUncheckedUpdateManyWithoutUsers_Bcrs_requestedByToUsersNestedInput
    Fundings_Fundings_createdByToUsers?: FundingsUncheckedUpdateManyWithoutUsers_Fundings_createdByToUsersNestedInput
    Fundings_Fundings_lastUpdatedByToUsers?: FundingsUncheckedUpdateManyWithoutUsers_Fundings_lastUpdatedByToUsersNestedInput
    FundingRequirements_createdBy?: FundingRequirementsUncheckedUpdateManyWithoutCreatorNestedInput
    FundingRequirements_lastUpdatedBy?: FundingRequirementsUncheckedUpdateManyWithoutUpdaterNestedInput
    FundingHistories_createdBy?: FundingHistoriesUncheckedUpdateManyWithoutCreatorNestedInput
    ReferenceData_ReferenceData_createdByToUsers?: ReferenceDataUncheckedUpdateManyWithoutUsers_ReferenceData_createdByToUsersNestedInput
    ReferenceData_ReferenceData_lastUpdatedByToUsers?: ReferenceDataUncheckedUpdateManyWithoutUsers_ReferenceData_lastUpdatedByToUsersNestedInput
    ReleaseNotes_ReleaseNotes_createdByToUsers?: ReleaseNotesUncheckedUpdateManyWithoutUsers_ReleaseNotes_createdByToUsersNestedInput
  }

  export type UsersUpsertWithoutReleaseNotes_ReleaseNotes_createdByToUsersInput = {
    update: XOR<UsersUpdateWithoutReleaseNotes_ReleaseNotes_createdByToUsersInput, UsersUncheckedUpdateWithoutReleaseNotes_ReleaseNotes_createdByToUsersInput>
    create: XOR<UsersCreateWithoutReleaseNotes_ReleaseNotes_createdByToUsersInput, UsersUncheckedCreateWithoutReleaseNotes_ReleaseNotes_createdByToUsersInput>
    where?: UsersWhereInput
  }

  export type UsersUpdateToOneWithWhereWithoutReleaseNotes_ReleaseNotes_createdByToUsersInput = {
    where?: UsersWhereInput
    data: XOR<UsersUpdateWithoutReleaseNotes_ReleaseNotes_createdByToUsersInput, UsersUncheckedUpdateWithoutReleaseNotes_ReleaseNotes_createdByToUsersInput>
  }

  export type UsersUpdateWithoutReleaseNotes_ReleaseNotes_createdByToUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    role?: Enumenum_Users_roleFieldUpdateOperationsInput | $Enums.enum_Users_role
    active?: BoolFieldUpdateOperationsInput | boolean
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Bcrs_Bcrs_assignedToToUsers?: BcrsUpdateManyWithoutUsers_Bcrs_assignedToToUsersNestedInput
    Bcrs_Bcrs_requestedByToUsers?: BcrsUpdateManyWithoutUsers_Bcrs_requestedByToUsersNestedInput
    Fundings_Fundings_createdByToUsers?: FundingsUpdateManyWithoutUsers_Fundings_createdByToUsersNestedInput
    Fundings_Fundings_lastUpdatedByToUsers?: FundingsUpdateManyWithoutUsers_Fundings_lastUpdatedByToUsersNestedInput
    FundingRequirements_createdBy?: FundingRequirementsUpdateManyWithoutCreatorNestedInput
    FundingRequirements_lastUpdatedBy?: FundingRequirementsUpdateManyWithoutUpdaterNestedInput
    FundingHistories_createdBy?: FundingHistoriesUpdateManyWithoutCreatorNestedInput
    ReferenceData_ReferenceData_createdByToUsers?: ReferenceDataUpdateManyWithoutUsers_ReferenceData_createdByToUsersNestedInput
    ReferenceData_ReferenceData_lastUpdatedByToUsers?: ReferenceDataUpdateManyWithoutUsers_ReferenceData_lastUpdatedByToUsersNestedInput
    ReleaseNotes_ReleaseNotes_approvedByToUsers?: ReleaseNotesUpdateManyWithoutUsers_ReleaseNotes_approvedByToUsersNestedInput
  }

  export type UsersUncheckedUpdateWithoutReleaseNotes_ReleaseNotes_createdByToUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    role?: Enumenum_Users_roleFieldUpdateOperationsInput | $Enums.enum_Users_role
    active?: BoolFieldUpdateOperationsInput | boolean
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Bcrs_Bcrs_assignedToToUsers?: BcrsUncheckedUpdateManyWithoutUsers_Bcrs_assignedToToUsersNestedInput
    Bcrs_Bcrs_requestedByToUsers?: BcrsUncheckedUpdateManyWithoutUsers_Bcrs_requestedByToUsersNestedInput
    Fundings_Fundings_createdByToUsers?: FundingsUncheckedUpdateManyWithoutUsers_Fundings_createdByToUsersNestedInput
    Fundings_Fundings_lastUpdatedByToUsers?: FundingsUncheckedUpdateManyWithoutUsers_Fundings_lastUpdatedByToUsersNestedInput
    FundingRequirements_createdBy?: FundingRequirementsUncheckedUpdateManyWithoutCreatorNestedInput
    FundingRequirements_lastUpdatedBy?: FundingRequirementsUncheckedUpdateManyWithoutUpdaterNestedInput
    FundingHistories_createdBy?: FundingHistoriesUncheckedUpdateManyWithoutCreatorNestedInput
    ReferenceData_ReferenceData_createdByToUsers?: ReferenceDataUncheckedUpdateManyWithoutUsers_ReferenceData_createdByToUsersNestedInput
    ReferenceData_ReferenceData_lastUpdatedByToUsers?: ReferenceDataUncheckedUpdateManyWithoutUsers_ReferenceData_lastUpdatedByToUsersNestedInput
    ReleaseNotes_ReleaseNotes_approvedByToUsers?: ReleaseNotesUncheckedUpdateManyWithoutUsers_ReleaseNotes_approvedByToUsersNestedInput
  }

  export type BcrsCreateWithoutUsers_Bcrs_assignedToToUsersInput = {
    id: string
    bcrNumber?: string | null
    title: string
    description: string
    status?: $Enums.enum_Bcrs_status
    priority?: $Enums.enum_Bcrs_priority
    impact?: string | null
    targetDate?: Date | string | null
    implementationDate?: Date | string | null
    notes?: string | null
    createdAt: Date | string
    updatedAt: Date | string
    Users_Bcrs_requestedByToUsers: UsersCreateNestedOneWithoutBcrs_Bcrs_requestedByToUsersInput
  }

  export type BcrsUncheckedCreateWithoutUsers_Bcrs_assignedToToUsersInput = {
    id: string
    bcrNumber?: string | null
    title: string
    description: string
    status?: $Enums.enum_Bcrs_status
    priority?: $Enums.enum_Bcrs_priority
    impact?: string | null
    requestedBy: string
    targetDate?: Date | string | null
    implementationDate?: Date | string | null
    notes?: string | null
    createdAt: Date | string
    updatedAt: Date | string
  }

  export type BcrsCreateOrConnectWithoutUsers_Bcrs_assignedToToUsersInput = {
    where: BcrsWhereUniqueInput
    create: XOR<BcrsCreateWithoutUsers_Bcrs_assignedToToUsersInput, BcrsUncheckedCreateWithoutUsers_Bcrs_assignedToToUsersInput>
  }

  export type BcrsCreateManyUsers_Bcrs_assignedToToUsersInputEnvelope = {
    data: BcrsCreateManyUsers_Bcrs_assignedToToUsersInput | BcrsCreateManyUsers_Bcrs_assignedToToUsersInput[]
    skipDuplicates?: boolean
  }

  export type BcrsCreateWithoutUsers_Bcrs_requestedByToUsersInput = {
    id: string
    bcrNumber?: string | null
    title: string
    description: string
    status?: $Enums.enum_Bcrs_status
    priority?: $Enums.enum_Bcrs_priority
    impact?: string | null
    targetDate?: Date | string | null
    implementationDate?: Date | string | null
    notes?: string | null
    createdAt: Date | string
    updatedAt: Date | string
    Users_Bcrs_assignedToToUsers?: UsersCreateNestedOneWithoutBcrs_Bcrs_assignedToToUsersInput
  }

  export type BcrsUncheckedCreateWithoutUsers_Bcrs_requestedByToUsersInput = {
    id: string
    bcrNumber?: string | null
    title: string
    description: string
    status?: $Enums.enum_Bcrs_status
    priority?: $Enums.enum_Bcrs_priority
    impact?: string | null
    assignedTo?: string | null
    targetDate?: Date | string | null
    implementationDate?: Date | string | null
    notes?: string | null
    createdAt: Date | string
    updatedAt: Date | string
  }

  export type BcrsCreateOrConnectWithoutUsers_Bcrs_requestedByToUsersInput = {
    where: BcrsWhereUniqueInput
    create: XOR<BcrsCreateWithoutUsers_Bcrs_requestedByToUsersInput, BcrsUncheckedCreateWithoutUsers_Bcrs_requestedByToUsersInput>
  }

  export type BcrsCreateManyUsers_Bcrs_requestedByToUsersInputEnvelope = {
    data: BcrsCreateManyUsers_Bcrs_requestedByToUsersInput | BcrsCreateManyUsers_Bcrs_requestedByToUsersInput[]
    skipDuplicates?: boolean
  }

  export type FundingsCreateWithoutUsers_Fundings_createdByToUsersInput = {
    id: string
    trainingRoute: string
    academicYear: string
    fundingAmount: Decimal | DecimalJsLike | number | string
    fundingType: string
    description?: string | null
    isActive?: boolean
    effectiveDate: Date | string
    expiryDate?: Date | string | null
    notes?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
    Users_Fundings_lastUpdatedByToUsers?: UsersCreateNestedOneWithoutFundings_Fundings_lastUpdatedByToUsersInput
  }

  export type FundingsUncheckedCreateWithoutUsers_Fundings_createdByToUsersInput = {
    id: string
    trainingRoute: string
    academicYear: string
    fundingAmount: Decimal | DecimalJsLike | number | string
    fundingType: string
    description?: string | null
    isActive?: boolean
    effectiveDate: Date | string
    expiryDate?: Date | string | null
    lastUpdatedBy?: string | null
    notes?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
  }

  export type FundingsCreateOrConnectWithoutUsers_Fundings_createdByToUsersInput = {
    where: FundingsWhereUniqueInput
    create: XOR<FundingsCreateWithoutUsers_Fundings_createdByToUsersInput, FundingsUncheckedCreateWithoutUsers_Fundings_createdByToUsersInput>
  }

  export type FundingsCreateManyUsers_Fundings_createdByToUsersInputEnvelope = {
    data: FundingsCreateManyUsers_Fundings_createdByToUsersInput | FundingsCreateManyUsers_Fundings_createdByToUsersInput[]
    skipDuplicates?: boolean
  }

  export type FundingsCreateWithoutUsers_Fundings_lastUpdatedByToUsersInput = {
    id: string
    trainingRoute: string
    academicYear: string
    fundingAmount: Decimal | DecimalJsLike | number | string
    fundingType: string
    description?: string | null
    isActive?: boolean
    effectiveDate: Date | string
    expiryDate?: Date | string | null
    notes?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
    Users_Fundings_createdByToUsers: UsersCreateNestedOneWithoutFundings_Fundings_createdByToUsersInput
  }

  export type FundingsUncheckedCreateWithoutUsers_Fundings_lastUpdatedByToUsersInput = {
    id: string
    trainingRoute: string
    academicYear: string
    fundingAmount: Decimal | DecimalJsLike | number | string
    fundingType: string
    description?: string | null
    isActive?: boolean
    effectiveDate: Date | string
    expiryDate?: Date | string | null
    createdBy: string
    notes?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
  }

  export type FundingsCreateOrConnectWithoutUsers_Fundings_lastUpdatedByToUsersInput = {
    where: FundingsWhereUniqueInput
    create: XOR<FundingsCreateWithoutUsers_Fundings_lastUpdatedByToUsersInput, FundingsUncheckedCreateWithoutUsers_Fundings_lastUpdatedByToUsersInput>
  }

  export type FundingsCreateManyUsers_Fundings_lastUpdatedByToUsersInputEnvelope = {
    data: FundingsCreateManyUsers_Fundings_lastUpdatedByToUsersInput | FundingsCreateManyUsers_Fundings_lastUpdatedByToUsersInput[]
    skipDuplicates?: boolean
  }

  export type FundingRequirementsCreateWithoutCreatorInput = {
    id?: string
    route: string
    year: number
    amount: Decimal | DecimalJsLike | number | string
    description?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    updater?: UsersCreateNestedOneWithoutFundingRequirements_lastUpdatedByInput
  }

  export type FundingRequirementsUncheckedCreateWithoutCreatorInput = {
    id?: string
    route: string
    year: number
    amount: Decimal | DecimalJsLike | number | string
    description?: string | null
    lastUpdatedBy?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type FundingRequirementsCreateOrConnectWithoutCreatorInput = {
    where: FundingRequirementsWhereUniqueInput
    create: XOR<FundingRequirementsCreateWithoutCreatorInput, FundingRequirementsUncheckedCreateWithoutCreatorInput>
  }

  export type FundingRequirementsCreateManyCreatorInputEnvelope = {
    data: FundingRequirementsCreateManyCreatorInput | FundingRequirementsCreateManyCreatorInput[]
    skipDuplicates?: boolean
  }

  export type FundingRequirementsCreateWithoutUpdaterInput = {
    id?: string
    route: string
    year: number
    amount: Decimal | DecimalJsLike | number | string
    description?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    creator: UsersCreateNestedOneWithoutFundingRequirements_createdByInput
  }

  export type FundingRequirementsUncheckedCreateWithoutUpdaterInput = {
    id?: string
    route: string
    year: number
    amount: Decimal | DecimalJsLike | number | string
    description?: string | null
    createdBy: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type FundingRequirementsCreateOrConnectWithoutUpdaterInput = {
    where: FundingRequirementsWhereUniqueInput
    create: XOR<FundingRequirementsCreateWithoutUpdaterInput, FundingRequirementsUncheckedCreateWithoutUpdaterInput>
  }

  export type FundingRequirementsCreateManyUpdaterInputEnvelope = {
    data: FundingRequirementsCreateManyUpdaterInput | FundingRequirementsCreateManyUpdaterInput[]
    skipDuplicates?: boolean
  }

  export type FundingHistoriesCreateWithoutCreatorInput = {
    id?: string
    year: number
    route: string
    change: string
    amount: Decimal | DecimalJsLike | number | string
    reason?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type FundingHistoriesUncheckedCreateWithoutCreatorInput = {
    id?: string
    year: number
    route: string
    change: string
    amount: Decimal | DecimalJsLike | number | string
    reason?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type FundingHistoriesCreateOrConnectWithoutCreatorInput = {
    where: FundingHistoriesWhereUniqueInput
    create: XOR<FundingHistoriesCreateWithoutCreatorInput, FundingHistoriesUncheckedCreateWithoutCreatorInput>
  }

  export type FundingHistoriesCreateManyCreatorInputEnvelope = {
    data: FundingHistoriesCreateManyCreatorInput | FundingHistoriesCreateManyCreatorInput[]
    skipDuplicates?: boolean
  }

  export type ReferenceDataCreateWithoutUsers_ReferenceData_createdByToUsersInput = {
    id: string
    name: string
    code: string
    category: string
    description?: string | null
    isActive?: boolean
    validFrom?: Date | string | null
    validTo?: Date | string | null
    version?: number
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
    Users_ReferenceData_lastUpdatedByToUsers?: UsersCreateNestedOneWithoutReferenceData_ReferenceData_lastUpdatedByToUsersInput
  }

  export type ReferenceDataUncheckedCreateWithoutUsers_ReferenceData_createdByToUsersInput = {
    id: string
    name: string
    code: string
    category: string
    description?: string | null
    isActive?: boolean
    validFrom?: Date | string | null
    validTo?: Date | string | null
    lastUpdatedBy?: string | null
    version?: number
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
  }

  export type ReferenceDataCreateOrConnectWithoutUsers_ReferenceData_createdByToUsersInput = {
    where: ReferenceDataWhereUniqueInput
    create: XOR<ReferenceDataCreateWithoutUsers_ReferenceData_createdByToUsersInput, ReferenceDataUncheckedCreateWithoutUsers_ReferenceData_createdByToUsersInput>
  }

  export type ReferenceDataCreateManyUsers_ReferenceData_createdByToUsersInputEnvelope = {
    data: ReferenceDataCreateManyUsers_ReferenceData_createdByToUsersInput | ReferenceDataCreateManyUsers_ReferenceData_createdByToUsersInput[]
    skipDuplicates?: boolean
  }

  export type ReferenceDataCreateWithoutUsers_ReferenceData_lastUpdatedByToUsersInput = {
    id: string
    name: string
    code: string
    category: string
    description?: string | null
    isActive?: boolean
    validFrom?: Date | string | null
    validTo?: Date | string | null
    version?: number
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
    Users_ReferenceData_createdByToUsers: UsersCreateNestedOneWithoutReferenceData_ReferenceData_createdByToUsersInput
  }

  export type ReferenceDataUncheckedCreateWithoutUsers_ReferenceData_lastUpdatedByToUsersInput = {
    id: string
    name: string
    code: string
    category: string
    description?: string | null
    isActive?: boolean
    validFrom?: Date | string | null
    validTo?: Date | string | null
    createdBy: string
    version?: number
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
  }

  export type ReferenceDataCreateOrConnectWithoutUsers_ReferenceData_lastUpdatedByToUsersInput = {
    where: ReferenceDataWhereUniqueInput
    create: XOR<ReferenceDataCreateWithoutUsers_ReferenceData_lastUpdatedByToUsersInput, ReferenceDataUncheckedCreateWithoutUsers_ReferenceData_lastUpdatedByToUsersInput>
  }

  export type ReferenceDataCreateManyUsers_ReferenceData_lastUpdatedByToUsersInputEnvelope = {
    data: ReferenceDataCreateManyUsers_ReferenceData_lastUpdatedByToUsersInput | ReferenceDataCreateManyUsers_ReferenceData_lastUpdatedByToUsersInput[]
    skipDuplicates?: boolean
  }

  export type ReleaseNotesCreateWithoutUsers_ReleaseNotes_approvedByToUsersInput = {
    id: string
    version: string
    title: string
    description: string
    environment: $Enums.enum_ReleaseNotes_environment
    status?: $Enums.enum_ReleaseNotes_status
    releaseDate: Date | string
    completedDate?: Date | string | null
    changeLog?: string | null
    impactedSystems?: ReleaseNotesCreateimpactedSystemsInput | string[]
    notes?: string | null
    createdAt: Date | string
    updatedAt: Date | string
    Users_ReleaseNotes_createdByToUsers: UsersCreateNestedOneWithoutReleaseNotes_ReleaseNotes_createdByToUsersInput
  }

  export type ReleaseNotesUncheckedCreateWithoutUsers_ReleaseNotes_approvedByToUsersInput = {
    id: string
    version: string
    title: string
    description: string
    environment: $Enums.enum_ReleaseNotes_environment
    status?: $Enums.enum_ReleaseNotes_status
    releaseDate: Date | string
    completedDate?: Date | string | null
    createdBy: string
    changeLog?: string | null
    impactedSystems?: ReleaseNotesCreateimpactedSystemsInput | string[]
    notes?: string | null
    createdAt: Date | string
    updatedAt: Date | string
  }

  export type ReleaseNotesCreateOrConnectWithoutUsers_ReleaseNotes_approvedByToUsersInput = {
    where: ReleaseNotesWhereUniqueInput
    create: XOR<ReleaseNotesCreateWithoutUsers_ReleaseNotes_approvedByToUsersInput, ReleaseNotesUncheckedCreateWithoutUsers_ReleaseNotes_approvedByToUsersInput>
  }

  export type ReleaseNotesCreateManyUsers_ReleaseNotes_approvedByToUsersInputEnvelope = {
    data: ReleaseNotesCreateManyUsers_ReleaseNotes_approvedByToUsersInput | ReleaseNotesCreateManyUsers_ReleaseNotes_approvedByToUsersInput[]
    skipDuplicates?: boolean
  }

  export type ReleaseNotesCreateWithoutUsers_ReleaseNotes_createdByToUsersInput = {
    id: string
    version: string
    title: string
    description: string
    environment: $Enums.enum_ReleaseNotes_environment
    status?: $Enums.enum_ReleaseNotes_status
    releaseDate: Date | string
    completedDate?: Date | string | null
    changeLog?: string | null
    impactedSystems?: ReleaseNotesCreateimpactedSystemsInput | string[]
    notes?: string | null
    createdAt: Date | string
    updatedAt: Date | string
    Users_ReleaseNotes_approvedByToUsers?: UsersCreateNestedOneWithoutReleaseNotes_ReleaseNotes_approvedByToUsersInput
  }

  export type ReleaseNotesUncheckedCreateWithoutUsers_ReleaseNotes_createdByToUsersInput = {
    id: string
    version: string
    title: string
    description: string
    environment: $Enums.enum_ReleaseNotes_environment
    status?: $Enums.enum_ReleaseNotes_status
    releaseDate: Date | string
    completedDate?: Date | string | null
    approvedBy?: string | null
    changeLog?: string | null
    impactedSystems?: ReleaseNotesCreateimpactedSystemsInput | string[]
    notes?: string | null
    createdAt: Date | string
    updatedAt: Date | string
  }

  export type ReleaseNotesCreateOrConnectWithoutUsers_ReleaseNotes_createdByToUsersInput = {
    where: ReleaseNotesWhereUniqueInput
    create: XOR<ReleaseNotesCreateWithoutUsers_ReleaseNotes_createdByToUsersInput, ReleaseNotesUncheckedCreateWithoutUsers_ReleaseNotes_createdByToUsersInput>
  }

  export type ReleaseNotesCreateManyUsers_ReleaseNotes_createdByToUsersInputEnvelope = {
    data: ReleaseNotesCreateManyUsers_ReleaseNotes_createdByToUsersInput | ReleaseNotesCreateManyUsers_ReleaseNotes_createdByToUsersInput[]
    skipDuplicates?: boolean
  }

  export type BcrsUpsertWithWhereUniqueWithoutUsers_Bcrs_assignedToToUsersInput = {
    where: BcrsWhereUniqueInput
    update: XOR<BcrsUpdateWithoutUsers_Bcrs_assignedToToUsersInput, BcrsUncheckedUpdateWithoutUsers_Bcrs_assignedToToUsersInput>
    create: XOR<BcrsCreateWithoutUsers_Bcrs_assignedToToUsersInput, BcrsUncheckedCreateWithoutUsers_Bcrs_assignedToToUsersInput>
  }

  export type BcrsUpdateWithWhereUniqueWithoutUsers_Bcrs_assignedToToUsersInput = {
    where: BcrsWhereUniqueInput
    data: XOR<BcrsUpdateWithoutUsers_Bcrs_assignedToToUsersInput, BcrsUncheckedUpdateWithoutUsers_Bcrs_assignedToToUsersInput>
  }

  export type BcrsUpdateManyWithWhereWithoutUsers_Bcrs_assignedToToUsersInput = {
    where: BcrsScalarWhereInput
    data: XOR<BcrsUpdateManyMutationInput, BcrsUncheckedUpdateManyWithoutUsers_Bcrs_assignedToToUsersInput>
  }

  export type BcrsScalarWhereInput = {
    AND?: BcrsScalarWhereInput | BcrsScalarWhereInput[]
    OR?: BcrsScalarWhereInput[]
    NOT?: BcrsScalarWhereInput | BcrsScalarWhereInput[]
    id?: UuidFilter<"Bcrs"> | string
    bcrNumber?: StringNullableFilter<"Bcrs"> | string | null
    title?: StringFilter<"Bcrs"> | string
    description?: StringFilter<"Bcrs"> | string
    status?: Enumenum_Bcrs_statusFilter<"Bcrs"> | $Enums.enum_Bcrs_status
    priority?: Enumenum_Bcrs_priorityFilter<"Bcrs"> | $Enums.enum_Bcrs_priority
    impact?: StringNullableFilter<"Bcrs"> | string | null
    requestedBy?: UuidFilter<"Bcrs"> | string
    assignedTo?: UuidNullableFilter<"Bcrs"> | string | null
    targetDate?: DateTimeNullableFilter<"Bcrs"> | Date | string | null
    implementationDate?: DateTimeNullableFilter<"Bcrs"> | Date | string | null
    notes?: StringNullableFilter<"Bcrs"> | string | null
    createdAt?: DateTimeFilter<"Bcrs"> | Date | string
    updatedAt?: DateTimeFilter<"Bcrs"> | Date | string
  }

  export type BcrsUpsertWithWhereUniqueWithoutUsers_Bcrs_requestedByToUsersInput = {
    where: BcrsWhereUniqueInput
    update: XOR<BcrsUpdateWithoutUsers_Bcrs_requestedByToUsersInput, BcrsUncheckedUpdateWithoutUsers_Bcrs_requestedByToUsersInput>
    create: XOR<BcrsCreateWithoutUsers_Bcrs_requestedByToUsersInput, BcrsUncheckedCreateWithoutUsers_Bcrs_requestedByToUsersInput>
  }

  export type BcrsUpdateWithWhereUniqueWithoutUsers_Bcrs_requestedByToUsersInput = {
    where: BcrsWhereUniqueInput
    data: XOR<BcrsUpdateWithoutUsers_Bcrs_requestedByToUsersInput, BcrsUncheckedUpdateWithoutUsers_Bcrs_requestedByToUsersInput>
  }

  export type BcrsUpdateManyWithWhereWithoutUsers_Bcrs_requestedByToUsersInput = {
    where: BcrsScalarWhereInput
    data: XOR<BcrsUpdateManyMutationInput, BcrsUncheckedUpdateManyWithoutUsers_Bcrs_requestedByToUsersInput>
  }

  export type FundingsUpsertWithWhereUniqueWithoutUsers_Fundings_createdByToUsersInput = {
    where: FundingsWhereUniqueInput
    update: XOR<FundingsUpdateWithoutUsers_Fundings_createdByToUsersInput, FundingsUncheckedUpdateWithoutUsers_Fundings_createdByToUsersInput>
    create: XOR<FundingsCreateWithoutUsers_Fundings_createdByToUsersInput, FundingsUncheckedCreateWithoutUsers_Fundings_createdByToUsersInput>
  }

  export type FundingsUpdateWithWhereUniqueWithoutUsers_Fundings_createdByToUsersInput = {
    where: FundingsWhereUniqueInput
    data: XOR<FundingsUpdateWithoutUsers_Fundings_createdByToUsersInput, FundingsUncheckedUpdateWithoutUsers_Fundings_createdByToUsersInput>
  }

  export type FundingsUpdateManyWithWhereWithoutUsers_Fundings_createdByToUsersInput = {
    where: FundingsScalarWhereInput
    data: XOR<FundingsUpdateManyMutationInput, FundingsUncheckedUpdateManyWithoutUsers_Fundings_createdByToUsersInput>
  }

  export type FundingsScalarWhereInput = {
    AND?: FundingsScalarWhereInput | FundingsScalarWhereInput[]
    OR?: FundingsScalarWhereInput[]
    NOT?: FundingsScalarWhereInput | FundingsScalarWhereInput[]
    id?: UuidFilter<"Fundings"> | string
    trainingRoute?: StringFilter<"Fundings"> | string
    academicYear?: StringFilter<"Fundings"> | string
    fundingAmount?: DecimalFilter<"Fundings"> | Decimal | DecimalJsLike | number | string
    fundingType?: StringFilter<"Fundings"> | string
    description?: StringNullableFilter<"Fundings"> | string | null
    isActive?: BoolFilter<"Fundings"> | boolean
    effectiveDate?: DateTimeFilter<"Fundings"> | Date | string
    expiryDate?: DateTimeNullableFilter<"Fundings"> | Date | string | null
    createdBy?: UuidFilter<"Fundings"> | string
    lastUpdatedBy?: UuidNullableFilter<"Fundings"> | string | null
    notes?: StringNullableFilter<"Fundings"> | string | null
    metadata?: JsonNullableFilter<"Fundings">
    createdAt?: DateTimeFilter<"Fundings"> | Date | string
    updatedAt?: DateTimeFilter<"Fundings"> | Date | string
  }

  export type FundingsUpsertWithWhereUniqueWithoutUsers_Fundings_lastUpdatedByToUsersInput = {
    where: FundingsWhereUniqueInput
    update: XOR<FundingsUpdateWithoutUsers_Fundings_lastUpdatedByToUsersInput, FundingsUncheckedUpdateWithoutUsers_Fundings_lastUpdatedByToUsersInput>
    create: XOR<FundingsCreateWithoutUsers_Fundings_lastUpdatedByToUsersInput, FundingsUncheckedCreateWithoutUsers_Fundings_lastUpdatedByToUsersInput>
  }

  export type FundingsUpdateWithWhereUniqueWithoutUsers_Fundings_lastUpdatedByToUsersInput = {
    where: FundingsWhereUniqueInput
    data: XOR<FundingsUpdateWithoutUsers_Fundings_lastUpdatedByToUsersInput, FundingsUncheckedUpdateWithoutUsers_Fundings_lastUpdatedByToUsersInput>
  }

  export type FundingsUpdateManyWithWhereWithoutUsers_Fundings_lastUpdatedByToUsersInput = {
    where: FundingsScalarWhereInput
    data: XOR<FundingsUpdateManyMutationInput, FundingsUncheckedUpdateManyWithoutUsers_Fundings_lastUpdatedByToUsersInput>
  }

  export type FundingRequirementsUpsertWithWhereUniqueWithoutCreatorInput = {
    where: FundingRequirementsWhereUniqueInput
    update: XOR<FundingRequirementsUpdateWithoutCreatorInput, FundingRequirementsUncheckedUpdateWithoutCreatorInput>
    create: XOR<FundingRequirementsCreateWithoutCreatorInput, FundingRequirementsUncheckedCreateWithoutCreatorInput>
  }

  export type FundingRequirementsUpdateWithWhereUniqueWithoutCreatorInput = {
    where: FundingRequirementsWhereUniqueInput
    data: XOR<FundingRequirementsUpdateWithoutCreatorInput, FundingRequirementsUncheckedUpdateWithoutCreatorInput>
  }

  export type FundingRequirementsUpdateManyWithWhereWithoutCreatorInput = {
    where: FundingRequirementsScalarWhereInput
    data: XOR<FundingRequirementsUpdateManyMutationInput, FundingRequirementsUncheckedUpdateManyWithoutCreatorInput>
  }

  export type FundingRequirementsScalarWhereInput = {
    AND?: FundingRequirementsScalarWhereInput | FundingRequirementsScalarWhereInput[]
    OR?: FundingRequirementsScalarWhereInput[]
    NOT?: FundingRequirementsScalarWhereInput | FundingRequirementsScalarWhereInput[]
    id?: UuidFilter<"FundingRequirements"> | string
    route?: StringFilter<"FundingRequirements"> | string
    year?: IntFilter<"FundingRequirements"> | number
    amount?: DecimalFilter<"FundingRequirements"> | Decimal | DecimalJsLike | number | string
    description?: StringNullableFilter<"FundingRequirements"> | string | null
    createdBy?: UuidFilter<"FundingRequirements"> | string
    lastUpdatedBy?: UuidNullableFilter<"FundingRequirements"> | string | null
    createdAt?: DateTimeFilter<"FundingRequirements"> | Date | string
    updatedAt?: DateTimeFilter<"FundingRequirements"> | Date | string
  }

  export type FundingRequirementsUpsertWithWhereUniqueWithoutUpdaterInput = {
    where: FundingRequirementsWhereUniqueInput
    update: XOR<FundingRequirementsUpdateWithoutUpdaterInput, FundingRequirementsUncheckedUpdateWithoutUpdaterInput>
    create: XOR<FundingRequirementsCreateWithoutUpdaterInput, FundingRequirementsUncheckedCreateWithoutUpdaterInput>
  }

  export type FundingRequirementsUpdateWithWhereUniqueWithoutUpdaterInput = {
    where: FundingRequirementsWhereUniqueInput
    data: XOR<FundingRequirementsUpdateWithoutUpdaterInput, FundingRequirementsUncheckedUpdateWithoutUpdaterInput>
  }

  export type FundingRequirementsUpdateManyWithWhereWithoutUpdaterInput = {
    where: FundingRequirementsScalarWhereInput
    data: XOR<FundingRequirementsUpdateManyMutationInput, FundingRequirementsUncheckedUpdateManyWithoutUpdaterInput>
  }

  export type FundingHistoriesUpsertWithWhereUniqueWithoutCreatorInput = {
    where: FundingHistoriesWhereUniqueInput
    update: XOR<FundingHistoriesUpdateWithoutCreatorInput, FundingHistoriesUncheckedUpdateWithoutCreatorInput>
    create: XOR<FundingHistoriesCreateWithoutCreatorInput, FundingHistoriesUncheckedCreateWithoutCreatorInput>
  }

  export type FundingHistoriesUpdateWithWhereUniqueWithoutCreatorInput = {
    where: FundingHistoriesWhereUniqueInput
    data: XOR<FundingHistoriesUpdateWithoutCreatorInput, FundingHistoriesUncheckedUpdateWithoutCreatorInput>
  }

  export type FundingHistoriesUpdateManyWithWhereWithoutCreatorInput = {
    where: FundingHistoriesScalarWhereInput
    data: XOR<FundingHistoriesUpdateManyMutationInput, FundingHistoriesUncheckedUpdateManyWithoutCreatorInput>
  }

  export type FundingHistoriesScalarWhereInput = {
    AND?: FundingHistoriesScalarWhereInput | FundingHistoriesScalarWhereInput[]
    OR?: FundingHistoriesScalarWhereInput[]
    NOT?: FundingHistoriesScalarWhereInput | FundingHistoriesScalarWhereInput[]
    id?: UuidFilter<"FundingHistories"> | string
    year?: IntFilter<"FundingHistories"> | number
    route?: StringFilter<"FundingHistories"> | string
    change?: StringFilter<"FundingHistories"> | string
    amount?: DecimalFilter<"FundingHistories"> | Decimal | DecimalJsLike | number | string
    reason?: StringNullableFilter<"FundingHistories"> | string | null
    createdBy?: UuidFilter<"FundingHistories"> | string
    createdAt?: DateTimeFilter<"FundingHistories"> | Date | string
    updatedAt?: DateTimeFilter<"FundingHistories"> | Date | string
  }

  export type ReferenceDataUpsertWithWhereUniqueWithoutUsers_ReferenceData_createdByToUsersInput = {
    where: ReferenceDataWhereUniqueInput
    update: XOR<ReferenceDataUpdateWithoutUsers_ReferenceData_createdByToUsersInput, ReferenceDataUncheckedUpdateWithoutUsers_ReferenceData_createdByToUsersInput>
    create: XOR<ReferenceDataCreateWithoutUsers_ReferenceData_createdByToUsersInput, ReferenceDataUncheckedCreateWithoutUsers_ReferenceData_createdByToUsersInput>
  }

  export type ReferenceDataUpdateWithWhereUniqueWithoutUsers_ReferenceData_createdByToUsersInput = {
    where: ReferenceDataWhereUniqueInput
    data: XOR<ReferenceDataUpdateWithoutUsers_ReferenceData_createdByToUsersInput, ReferenceDataUncheckedUpdateWithoutUsers_ReferenceData_createdByToUsersInput>
  }

  export type ReferenceDataUpdateManyWithWhereWithoutUsers_ReferenceData_createdByToUsersInput = {
    where: ReferenceDataScalarWhereInput
    data: XOR<ReferenceDataUpdateManyMutationInput, ReferenceDataUncheckedUpdateManyWithoutUsers_ReferenceData_createdByToUsersInput>
  }

  export type ReferenceDataScalarWhereInput = {
    AND?: ReferenceDataScalarWhereInput | ReferenceDataScalarWhereInput[]
    OR?: ReferenceDataScalarWhereInput[]
    NOT?: ReferenceDataScalarWhereInput | ReferenceDataScalarWhereInput[]
    id?: UuidFilter<"ReferenceData"> | string
    name?: StringFilter<"ReferenceData"> | string
    code?: StringFilter<"ReferenceData"> | string
    category?: StringFilter<"ReferenceData"> | string
    description?: StringNullableFilter<"ReferenceData"> | string | null
    isActive?: BoolFilter<"ReferenceData"> | boolean
    validFrom?: DateTimeNullableFilter<"ReferenceData"> | Date | string | null
    validTo?: DateTimeNullableFilter<"ReferenceData"> | Date | string | null
    createdBy?: UuidFilter<"ReferenceData"> | string
    lastUpdatedBy?: UuidNullableFilter<"ReferenceData"> | string | null
    version?: IntFilter<"ReferenceData"> | number
    metadata?: JsonNullableFilter<"ReferenceData">
    createdAt?: DateTimeFilter<"ReferenceData"> | Date | string
    updatedAt?: DateTimeFilter<"ReferenceData"> | Date | string
  }

  export type ReferenceDataUpsertWithWhereUniqueWithoutUsers_ReferenceData_lastUpdatedByToUsersInput = {
    where: ReferenceDataWhereUniqueInput
    update: XOR<ReferenceDataUpdateWithoutUsers_ReferenceData_lastUpdatedByToUsersInput, ReferenceDataUncheckedUpdateWithoutUsers_ReferenceData_lastUpdatedByToUsersInput>
    create: XOR<ReferenceDataCreateWithoutUsers_ReferenceData_lastUpdatedByToUsersInput, ReferenceDataUncheckedCreateWithoutUsers_ReferenceData_lastUpdatedByToUsersInput>
  }

  export type ReferenceDataUpdateWithWhereUniqueWithoutUsers_ReferenceData_lastUpdatedByToUsersInput = {
    where: ReferenceDataWhereUniqueInput
    data: XOR<ReferenceDataUpdateWithoutUsers_ReferenceData_lastUpdatedByToUsersInput, ReferenceDataUncheckedUpdateWithoutUsers_ReferenceData_lastUpdatedByToUsersInput>
  }

  export type ReferenceDataUpdateManyWithWhereWithoutUsers_ReferenceData_lastUpdatedByToUsersInput = {
    where: ReferenceDataScalarWhereInput
    data: XOR<ReferenceDataUpdateManyMutationInput, ReferenceDataUncheckedUpdateManyWithoutUsers_ReferenceData_lastUpdatedByToUsersInput>
  }

  export type ReleaseNotesUpsertWithWhereUniqueWithoutUsers_ReleaseNotes_approvedByToUsersInput = {
    where: ReleaseNotesWhereUniqueInput
    update: XOR<ReleaseNotesUpdateWithoutUsers_ReleaseNotes_approvedByToUsersInput, ReleaseNotesUncheckedUpdateWithoutUsers_ReleaseNotes_approvedByToUsersInput>
    create: XOR<ReleaseNotesCreateWithoutUsers_ReleaseNotes_approvedByToUsersInput, ReleaseNotesUncheckedCreateWithoutUsers_ReleaseNotes_approvedByToUsersInput>
  }

  export type ReleaseNotesUpdateWithWhereUniqueWithoutUsers_ReleaseNotes_approvedByToUsersInput = {
    where: ReleaseNotesWhereUniqueInput
    data: XOR<ReleaseNotesUpdateWithoutUsers_ReleaseNotes_approvedByToUsersInput, ReleaseNotesUncheckedUpdateWithoutUsers_ReleaseNotes_approvedByToUsersInput>
  }

  export type ReleaseNotesUpdateManyWithWhereWithoutUsers_ReleaseNotes_approvedByToUsersInput = {
    where: ReleaseNotesScalarWhereInput
    data: XOR<ReleaseNotesUpdateManyMutationInput, ReleaseNotesUncheckedUpdateManyWithoutUsers_ReleaseNotes_approvedByToUsersInput>
  }

  export type ReleaseNotesScalarWhereInput = {
    AND?: ReleaseNotesScalarWhereInput | ReleaseNotesScalarWhereInput[]
    OR?: ReleaseNotesScalarWhereInput[]
    NOT?: ReleaseNotesScalarWhereInput | ReleaseNotesScalarWhereInput[]
    id?: UuidFilter<"ReleaseNotes"> | string
    version?: StringFilter<"ReleaseNotes"> | string
    title?: StringFilter<"ReleaseNotes"> | string
    description?: StringFilter<"ReleaseNotes"> | string
    environment?: Enumenum_ReleaseNotes_environmentFilter<"ReleaseNotes"> | $Enums.enum_ReleaseNotes_environment
    status?: Enumenum_ReleaseNotes_statusFilter<"ReleaseNotes"> | $Enums.enum_ReleaseNotes_status
    releaseDate?: DateTimeFilter<"ReleaseNotes"> | Date | string
    completedDate?: DateTimeNullableFilter<"ReleaseNotes"> | Date | string | null
    createdBy?: UuidFilter<"ReleaseNotes"> | string
    approvedBy?: UuidNullableFilter<"ReleaseNotes"> | string | null
    changeLog?: StringNullableFilter<"ReleaseNotes"> | string | null
    impactedSystems?: StringNullableListFilter<"ReleaseNotes">
    notes?: StringNullableFilter<"ReleaseNotes"> | string | null
    createdAt?: DateTimeFilter<"ReleaseNotes"> | Date | string
    updatedAt?: DateTimeFilter<"ReleaseNotes"> | Date | string
  }

  export type ReleaseNotesUpsertWithWhereUniqueWithoutUsers_ReleaseNotes_createdByToUsersInput = {
    where: ReleaseNotesWhereUniqueInput
    update: XOR<ReleaseNotesUpdateWithoutUsers_ReleaseNotes_createdByToUsersInput, ReleaseNotesUncheckedUpdateWithoutUsers_ReleaseNotes_createdByToUsersInput>
    create: XOR<ReleaseNotesCreateWithoutUsers_ReleaseNotes_createdByToUsersInput, ReleaseNotesUncheckedCreateWithoutUsers_ReleaseNotes_createdByToUsersInput>
  }

  export type ReleaseNotesUpdateWithWhereUniqueWithoutUsers_ReleaseNotes_createdByToUsersInput = {
    where: ReleaseNotesWhereUniqueInput
    data: XOR<ReleaseNotesUpdateWithoutUsers_ReleaseNotes_createdByToUsersInput, ReleaseNotesUncheckedUpdateWithoutUsers_ReleaseNotes_createdByToUsersInput>
  }

  export type ReleaseNotesUpdateManyWithWhereWithoutUsers_ReleaseNotes_createdByToUsersInput = {
    where: ReleaseNotesScalarWhereInput
    data: XOR<ReleaseNotesUpdateManyMutationInput, ReleaseNotesUncheckedUpdateManyWithoutUsers_ReleaseNotes_createdByToUsersInput>
  }

  export type BcrsCreateManyUsers_Bcrs_assignedToToUsersInput = {
    id: string
    bcrNumber?: string | null
    title: string
    description: string
    status?: $Enums.enum_Bcrs_status
    priority?: $Enums.enum_Bcrs_priority
    impact?: string | null
    requestedBy: string
    targetDate?: Date | string | null
    implementationDate?: Date | string | null
    notes?: string | null
    createdAt: Date | string
    updatedAt: Date | string
  }

  export type BcrsCreateManyUsers_Bcrs_requestedByToUsersInput = {
    id: string
    bcrNumber?: string | null
    title: string
    description: string
    status?: $Enums.enum_Bcrs_status
    priority?: $Enums.enum_Bcrs_priority
    impact?: string | null
    assignedTo?: string | null
    targetDate?: Date | string | null
    implementationDate?: Date | string | null
    notes?: string | null
    createdAt: Date | string
    updatedAt: Date | string
  }

  export type FundingsCreateManyUsers_Fundings_createdByToUsersInput = {
    id: string
    trainingRoute: string
    academicYear: string
    fundingAmount: Decimal | DecimalJsLike | number | string
    fundingType: string
    description?: string | null
    isActive?: boolean
    effectiveDate: Date | string
    expiryDate?: Date | string | null
    lastUpdatedBy?: string | null
    notes?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
  }

  export type FundingsCreateManyUsers_Fundings_lastUpdatedByToUsersInput = {
    id: string
    trainingRoute: string
    academicYear: string
    fundingAmount: Decimal | DecimalJsLike | number | string
    fundingType: string
    description?: string | null
    isActive?: boolean
    effectiveDate: Date | string
    expiryDate?: Date | string | null
    createdBy: string
    notes?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
  }

  export type FundingRequirementsCreateManyCreatorInput = {
    id?: string
    route: string
    year: number
    amount: Decimal | DecimalJsLike | number | string
    description?: string | null
    lastUpdatedBy?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type FundingRequirementsCreateManyUpdaterInput = {
    id?: string
    route: string
    year: number
    amount: Decimal | DecimalJsLike | number | string
    description?: string | null
    createdBy: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type FundingHistoriesCreateManyCreatorInput = {
    id?: string
    year: number
    route: string
    change: string
    amount: Decimal | DecimalJsLike | number | string
    reason?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ReferenceDataCreateManyUsers_ReferenceData_createdByToUsersInput = {
    id: string
    name: string
    code: string
    category: string
    description?: string | null
    isActive?: boolean
    validFrom?: Date | string | null
    validTo?: Date | string | null
    lastUpdatedBy?: string | null
    version?: number
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
  }

  export type ReferenceDataCreateManyUsers_ReferenceData_lastUpdatedByToUsersInput = {
    id: string
    name: string
    code: string
    category: string
    description?: string | null
    isActive?: boolean
    validFrom?: Date | string | null
    validTo?: Date | string | null
    createdBy: string
    version?: number
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
  }

  export type ReleaseNotesCreateManyUsers_ReleaseNotes_approvedByToUsersInput = {
    id: string
    version: string
    title: string
    description: string
    environment: $Enums.enum_ReleaseNotes_environment
    status?: $Enums.enum_ReleaseNotes_status
    releaseDate: Date | string
    completedDate?: Date | string | null
    createdBy: string
    changeLog?: string | null
    impactedSystems?: ReleaseNotesCreateimpactedSystemsInput | string[]
    notes?: string | null
    createdAt: Date | string
    updatedAt: Date | string
  }

  export type ReleaseNotesCreateManyUsers_ReleaseNotes_createdByToUsersInput = {
    id: string
    version: string
    title: string
    description: string
    environment: $Enums.enum_ReleaseNotes_environment
    status?: $Enums.enum_ReleaseNotes_status
    releaseDate: Date | string
    completedDate?: Date | string | null
    approvedBy?: string | null
    changeLog?: string | null
    impactedSystems?: ReleaseNotesCreateimpactedSystemsInput | string[]
    notes?: string | null
    createdAt: Date | string
    updatedAt: Date | string
  }

  export type BcrsUpdateWithoutUsers_Bcrs_assignedToToUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    bcrNumber?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    status?: Enumenum_Bcrs_statusFieldUpdateOperationsInput | $Enums.enum_Bcrs_status
    priority?: Enumenum_Bcrs_priorityFieldUpdateOperationsInput | $Enums.enum_Bcrs_priority
    impact?: NullableStringFieldUpdateOperationsInput | string | null
    targetDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    implementationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Users_Bcrs_requestedByToUsers?: UsersUpdateOneRequiredWithoutBcrs_Bcrs_requestedByToUsersNestedInput
  }

  export type BcrsUncheckedUpdateWithoutUsers_Bcrs_assignedToToUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    bcrNumber?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    status?: Enumenum_Bcrs_statusFieldUpdateOperationsInput | $Enums.enum_Bcrs_status
    priority?: Enumenum_Bcrs_priorityFieldUpdateOperationsInput | $Enums.enum_Bcrs_priority
    impact?: NullableStringFieldUpdateOperationsInput | string | null
    requestedBy?: StringFieldUpdateOperationsInput | string
    targetDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    implementationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BcrsUncheckedUpdateManyWithoutUsers_Bcrs_assignedToToUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    bcrNumber?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    status?: Enumenum_Bcrs_statusFieldUpdateOperationsInput | $Enums.enum_Bcrs_status
    priority?: Enumenum_Bcrs_priorityFieldUpdateOperationsInput | $Enums.enum_Bcrs_priority
    impact?: NullableStringFieldUpdateOperationsInput | string | null
    requestedBy?: StringFieldUpdateOperationsInput | string
    targetDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    implementationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BcrsUpdateWithoutUsers_Bcrs_requestedByToUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    bcrNumber?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    status?: Enumenum_Bcrs_statusFieldUpdateOperationsInput | $Enums.enum_Bcrs_status
    priority?: Enumenum_Bcrs_priorityFieldUpdateOperationsInput | $Enums.enum_Bcrs_priority
    impact?: NullableStringFieldUpdateOperationsInput | string | null
    targetDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    implementationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Users_Bcrs_assignedToToUsers?: UsersUpdateOneWithoutBcrs_Bcrs_assignedToToUsersNestedInput
  }

  export type BcrsUncheckedUpdateWithoutUsers_Bcrs_requestedByToUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    bcrNumber?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    status?: Enumenum_Bcrs_statusFieldUpdateOperationsInput | $Enums.enum_Bcrs_status
    priority?: Enumenum_Bcrs_priorityFieldUpdateOperationsInput | $Enums.enum_Bcrs_priority
    impact?: NullableStringFieldUpdateOperationsInput | string | null
    assignedTo?: NullableStringFieldUpdateOperationsInput | string | null
    targetDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    implementationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BcrsUncheckedUpdateManyWithoutUsers_Bcrs_requestedByToUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    bcrNumber?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    status?: Enumenum_Bcrs_statusFieldUpdateOperationsInput | $Enums.enum_Bcrs_status
    priority?: Enumenum_Bcrs_priorityFieldUpdateOperationsInput | $Enums.enum_Bcrs_priority
    impact?: NullableStringFieldUpdateOperationsInput | string | null
    assignedTo?: NullableStringFieldUpdateOperationsInput | string | null
    targetDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    implementationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FundingsUpdateWithoutUsers_Fundings_createdByToUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    trainingRoute?: StringFieldUpdateOperationsInput | string
    academicYear?: StringFieldUpdateOperationsInput | string
    fundingAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fundingType?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    effectiveDate?: DateTimeFieldUpdateOperationsInput | Date | string
    expiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Users_Fundings_lastUpdatedByToUsers?: UsersUpdateOneWithoutFundings_Fundings_lastUpdatedByToUsersNestedInput
  }

  export type FundingsUncheckedUpdateWithoutUsers_Fundings_createdByToUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    trainingRoute?: StringFieldUpdateOperationsInput | string
    academicYear?: StringFieldUpdateOperationsInput | string
    fundingAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fundingType?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    effectiveDate?: DateTimeFieldUpdateOperationsInput | Date | string
    expiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastUpdatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FundingsUncheckedUpdateManyWithoutUsers_Fundings_createdByToUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    trainingRoute?: StringFieldUpdateOperationsInput | string
    academicYear?: StringFieldUpdateOperationsInput | string
    fundingAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fundingType?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    effectiveDate?: DateTimeFieldUpdateOperationsInput | Date | string
    expiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastUpdatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FundingsUpdateWithoutUsers_Fundings_lastUpdatedByToUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    trainingRoute?: StringFieldUpdateOperationsInput | string
    academicYear?: StringFieldUpdateOperationsInput | string
    fundingAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fundingType?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    effectiveDate?: DateTimeFieldUpdateOperationsInput | Date | string
    expiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Users_Fundings_createdByToUsers?: UsersUpdateOneRequiredWithoutFundings_Fundings_createdByToUsersNestedInput
  }

  export type FundingsUncheckedUpdateWithoutUsers_Fundings_lastUpdatedByToUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    trainingRoute?: StringFieldUpdateOperationsInput | string
    academicYear?: StringFieldUpdateOperationsInput | string
    fundingAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fundingType?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    effectiveDate?: DateTimeFieldUpdateOperationsInput | Date | string
    expiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FundingsUncheckedUpdateManyWithoutUsers_Fundings_lastUpdatedByToUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    trainingRoute?: StringFieldUpdateOperationsInput | string
    academicYear?: StringFieldUpdateOperationsInput | string
    fundingAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fundingType?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    effectiveDate?: DateTimeFieldUpdateOperationsInput | Date | string
    expiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FundingRequirementsUpdateWithoutCreatorInput = {
    id?: StringFieldUpdateOperationsInput | string
    route?: StringFieldUpdateOperationsInput | string
    year?: IntFieldUpdateOperationsInput | number
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updater?: UsersUpdateOneWithoutFundingRequirements_lastUpdatedByNestedInput
  }

  export type FundingRequirementsUncheckedUpdateWithoutCreatorInput = {
    id?: StringFieldUpdateOperationsInput | string
    route?: StringFieldUpdateOperationsInput | string
    year?: IntFieldUpdateOperationsInput | number
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    lastUpdatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FundingRequirementsUncheckedUpdateManyWithoutCreatorInput = {
    id?: StringFieldUpdateOperationsInput | string
    route?: StringFieldUpdateOperationsInput | string
    year?: IntFieldUpdateOperationsInput | number
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    lastUpdatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FundingRequirementsUpdateWithoutUpdaterInput = {
    id?: StringFieldUpdateOperationsInput | string
    route?: StringFieldUpdateOperationsInput | string
    year?: IntFieldUpdateOperationsInput | number
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    creator?: UsersUpdateOneRequiredWithoutFundingRequirements_createdByNestedInput
  }

  export type FundingRequirementsUncheckedUpdateWithoutUpdaterInput = {
    id?: StringFieldUpdateOperationsInput | string
    route?: StringFieldUpdateOperationsInput | string
    year?: IntFieldUpdateOperationsInput | number
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdBy?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FundingRequirementsUncheckedUpdateManyWithoutUpdaterInput = {
    id?: StringFieldUpdateOperationsInput | string
    route?: StringFieldUpdateOperationsInput | string
    year?: IntFieldUpdateOperationsInput | number
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdBy?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FundingHistoriesUpdateWithoutCreatorInput = {
    id?: StringFieldUpdateOperationsInput | string
    year?: IntFieldUpdateOperationsInput | number
    route?: StringFieldUpdateOperationsInput | string
    change?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FundingHistoriesUncheckedUpdateWithoutCreatorInput = {
    id?: StringFieldUpdateOperationsInput | string
    year?: IntFieldUpdateOperationsInput | number
    route?: StringFieldUpdateOperationsInput | string
    change?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FundingHistoriesUncheckedUpdateManyWithoutCreatorInput = {
    id?: StringFieldUpdateOperationsInput | string
    year?: IntFieldUpdateOperationsInput | number
    route?: StringFieldUpdateOperationsInput | string
    change?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReferenceDataUpdateWithoutUsers_ReferenceData_createdByToUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    validFrom?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    validTo?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: IntFieldUpdateOperationsInput | number
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Users_ReferenceData_lastUpdatedByToUsers?: UsersUpdateOneWithoutReferenceData_ReferenceData_lastUpdatedByToUsersNestedInput
  }

  export type ReferenceDataUncheckedUpdateWithoutUsers_ReferenceData_createdByToUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    validFrom?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    validTo?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastUpdatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    version?: IntFieldUpdateOperationsInput | number
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReferenceDataUncheckedUpdateManyWithoutUsers_ReferenceData_createdByToUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    validFrom?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    validTo?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastUpdatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    version?: IntFieldUpdateOperationsInput | number
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReferenceDataUpdateWithoutUsers_ReferenceData_lastUpdatedByToUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    validFrom?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    validTo?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: IntFieldUpdateOperationsInput | number
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Users_ReferenceData_createdByToUsers?: UsersUpdateOneRequiredWithoutReferenceData_ReferenceData_createdByToUsersNestedInput
  }

  export type ReferenceDataUncheckedUpdateWithoutUsers_ReferenceData_lastUpdatedByToUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    validFrom?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    validTo?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: StringFieldUpdateOperationsInput | string
    version?: IntFieldUpdateOperationsInput | number
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReferenceDataUncheckedUpdateManyWithoutUsers_ReferenceData_lastUpdatedByToUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    validFrom?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    validTo?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: StringFieldUpdateOperationsInput | string
    version?: IntFieldUpdateOperationsInput | number
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReleaseNotesUpdateWithoutUsers_ReleaseNotes_approvedByToUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    version?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    environment?: Enumenum_ReleaseNotes_environmentFieldUpdateOperationsInput | $Enums.enum_ReleaseNotes_environment
    status?: Enumenum_ReleaseNotes_statusFieldUpdateOperationsInput | $Enums.enum_ReleaseNotes_status
    releaseDate?: DateTimeFieldUpdateOperationsInput | Date | string
    completedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    changeLog?: NullableStringFieldUpdateOperationsInput | string | null
    impactedSystems?: ReleaseNotesUpdateimpactedSystemsInput | string[]
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Users_ReleaseNotes_createdByToUsers?: UsersUpdateOneRequiredWithoutReleaseNotes_ReleaseNotes_createdByToUsersNestedInput
  }

  export type ReleaseNotesUncheckedUpdateWithoutUsers_ReleaseNotes_approvedByToUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    version?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    environment?: Enumenum_ReleaseNotes_environmentFieldUpdateOperationsInput | $Enums.enum_ReleaseNotes_environment
    status?: Enumenum_ReleaseNotes_statusFieldUpdateOperationsInput | $Enums.enum_ReleaseNotes_status
    releaseDate?: DateTimeFieldUpdateOperationsInput | Date | string
    completedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: StringFieldUpdateOperationsInput | string
    changeLog?: NullableStringFieldUpdateOperationsInput | string | null
    impactedSystems?: ReleaseNotesUpdateimpactedSystemsInput | string[]
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReleaseNotesUncheckedUpdateManyWithoutUsers_ReleaseNotes_approvedByToUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    version?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    environment?: Enumenum_ReleaseNotes_environmentFieldUpdateOperationsInput | $Enums.enum_ReleaseNotes_environment
    status?: Enumenum_ReleaseNotes_statusFieldUpdateOperationsInput | $Enums.enum_ReleaseNotes_status
    releaseDate?: DateTimeFieldUpdateOperationsInput | Date | string
    completedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: StringFieldUpdateOperationsInput | string
    changeLog?: NullableStringFieldUpdateOperationsInput | string | null
    impactedSystems?: ReleaseNotesUpdateimpactedSystemsInput | string[]
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReleaseNotesUpdateWithoutUsers_ReleaseNotes_createdByToUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    version?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    environment?: Enumenum_ReleaseNotes_environmentFieldUpdateOperationsInput | $Enums.enum_ReleaseNotes_environment
    status?: Enumenum_ReleaseNotes_statusFieldUpdateOperationsInput | $Enums.enum_ReleaseNotes_status
    releaseDate?: DateTimeFieldUpdateOperationsInput | Date | string
    completedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    changeLog?: NullableStringFieldUpdateOperationsInput | string | null
    impactedSystems?: ReleaseNotesUpdateimpactedSystemsInput | string[]
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Users_ReleaseNotes_approvedByToUsers?: UsersUpdateOneWithoutReleaseNotes_ReleaseNotes_approvedByToUsersNestedInput
  }

  export type ReleaseNotesUncheckedUpdateWithoutUsers_ReleaseNotes_createdByToUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    version?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    environment?: Enumenum_ReleaseNotes_environmentFieldUpdateOperationsInput | $Enums.enum_ReleaseNotes_environment
    status?: Enumenum_ReleaseNotes_statusFieldUpdateOperationsInput | $Enums.enum_ReleaseNotes_status
    releaseDate?: DateTimeFieldUpdateOperationsInput | Date | string
    completedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvedBy?: NullableStringFieldUpdateOperationsInput | string | null
    changeLog?: NullableStringFieldUpdateOperationsInput | string | null
    impactedSystems?: ReleaseNotesUpdateimpactedSystemsInput | string[]
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReleaseNotesUncheckedUpdateManyWithoutUsers_ReleaseNotes_createdByToUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    version?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    environment?: Enumenum_ReleaseNotes_environmentFieldUpdateOperationsInput | $Enums.enum_ReleaseNotes_environment
    status?: Enumenum_ReleaseNotes_statusFieldUpdateOperationsInput | $Enums.enum_ReleaseNotes_status
    releaseDate?: DateTimeFieldUpdateOperationsInput | Date | string
    completedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvedBy?: NullableStringFieldUpdateOperationsInput | string | null
    changeLog?: NullableStringFieldUpdateOperationsInput | string | null
    impactedSystems?: ReleaseNotesUpdateimpactedSystemsInput | string[]
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}