{% extends "layouts/base-with-nav.njk" %}

{% block title %}Edit Status | BCR Phase-Status Mapping | Register Team Internal Services{% endblock %}

{% block navigation %}
  {% include "partials/bcr-navigation.njk" %}
{% endblock %}

{% block content %}
  <div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">
      <a href="/bcr/phase-status-mapping" class="govuk-back-link">Back to Phase-Status Mapping</a>
      
      <h1 class="govuk-heading-xl">Edit Status</h1>
      
      {% if error %}
        <div class="govuk-error-summary" aria-labelledby="error-summary-title" role="alert" data-module="govuk-error-summary">
          <h2 class="govuk-error-summary__title" id="error-summary-title">
            There is a problem
          </h2>
          <div class="govuk-error-summary__body">
            <ul class="govuk-list govuk-error-summary__list">
              <li>{{ error }}</li>
            </ul>
          </div>
        </div>
      {% endif %}
      
      <form method="post" action="/bcr/phase-status-mapping/edit-status/{{ status.id }}" novalidate>
        <div class="govuk-form-group {% if error and not status.name %}govuk-form-group--error{% endif %}">
          <label class="govuk-label" for="name">
            <strong>Status Name</strong>
          </label>
          <div id="name-hint" class="govuk-hint">
            The name of the status (e.g., "Submission", "completed:submission")
          </div>
          {% if error and not status.name %}
            <p id="name-error" class="govuk-error-message">
              <span class="govuk-visually-hidden">Error:</span> Enter a status name
            </p>
          {% endif %}
          <input class="govuk-input {% if error and not status.name %}govuk-input--error{% endif %}" id="name" name="name" type="text" value="{{ status.name }}" aria-describedby="name-hint">
        </div>
        
        <div class="govuk-form-group {% if error and not status.phaseValue %}govuk-form-group--error{% endif %}">
          <label class="govuk-label" for="phaseValue">
            <strong>Associated Phase</strong>
          </label>
          <div id="phaseValue-hint" class="govuk-hint">
            The phase this status belongs to
          </div>
          {% if error and not status.phaseValue %}
            <p id="phaseValue-error" class="govuk-error-message">
              <span class="govuk-visually-hidden">Error:</span> Select a phase
            </p>
          {% endif %}
          <select class="govuk-select {% if error and not status.phaseValue %}govuk-select--error{% endif %}" id="phaseValue" name="phaseValue" aria-describedby="phaseValue-hint">
            <option value="">Select a phase</option>
            {% for phase in phases %}
              <option value="{{ phase.id }}" {% if status.phaseId == phase.id %}selected{% endif %}>
                {{ phase.name }} (ID: {{ phase.id }})
              </option>
            {% endfor %}
          </select>
        </div>
        
        <input type="hidden" id="displayOrder" name="displayOrder" value="{{ status.displayOrder }}">
        
        <div class="govuk-form-group">
          <label class="govuk-label" for="description">
            <strong>Description</strong>
          </label>
          <div id="description-hint" class="govuk-hint">
            A brief description of the status and its purpose
          </div>
          <textarea class="govuk-textarea" id="description" name="description" rows="3" aria-describedby="description-hint">{{ status.description }}</textarea>
        </div>
        
        <div class="govuk-form-group">
          <fieldset class="govuk-fieldset">
            <legend class="govuk-fieldset__legend">
              <strong>Status Type</strong>
            </legend>
            <div id="status-type-hint" class="govuk-hint">
              Choose whether this is a current status or a completed status
            </div>
            <div class="govuk-radios" data-module="govuk-radios">
              <div class="govuk-radios__item">
                <input class="govuk-radios__input" id="status-type-current" name="status-type" type="radio" value="current" {% if not status.name.startsWith('completed:') %}checked{% endif %}>
                <label class="govuk-label govuk-radios__label" for="status-type-current">
                  In Progress Status
                </label>
                <div id="status-type-current-hint" class="govuk-hint govuk-radios__hint">
                  A status that indicates the BCR is currently in progress in this phase
                </div>
              </div>
              <div class="govuk-radios__item">
                <input class="govuk-radios__input" id="status-type-completed" name="status-type" type="radio" value="completed" {% if status.name.startsWith('completed:') %}checked{% endif %}>
                <label class="govuk-label govuk-radios__label" for="status-type-completed">
                  Completed Status
                </label>
                <div id="status-type-completed-hint" class="govuk-hint govuk-radios__hint">
                  A status that indicates the BCR has completed this phase (will be prefixed with "completed:")
                </div>
              </div>
            </div>
          </fieldset>
        </div>
        
        <div class="govuk-button-group">
          <button type="submit" class="govuk-button" data-module="govuk-button">Save Changes</button>
          <a href="/bcr/phase-status-mapping" class="govuk-button govuk-button--secondary">Cancel</a>
        </div>
      </form>
    </div>
  </div>
{% endblock %}

{% block pageScripts %}
<script>
  // Handle status type selection to update the name field
  document.addEventListener('DOMContentLoaded', function() {
    const nameInput = document.getElementById('name');
    const statusTypeCurrentRadio = document.getElementById('status-type-current');
    const statusTypeCompletedRadio = document.getElementById('status-type-completed');
    
    // Function to update the name field based on status type
    function updateNameField() {
      const currentName = nameInput.value;
      
      // If the completed status type is selected and the name doesn't start with "completed:"
      if (statusTypeCompletedRadio.checked && !currentName.startsWith('completed:')) {
        // If there's a name, add the prefix
        if (currentName) {
          nameInput.value = 'completed:' + currentName.replace('completed:', '');
        }
      } 
      // If the current status type is selected and the name starts with "completed:"
      else if (statusTypeCurrentRadio.checked && currentName.startsWith('completed:')) {
        // Remove the prefix
        nameInput.value = currentName.replace('completed:', '');
      }
    }
    
    // Add event listeners to the radio buttons
    statusTypeCurrentRadio.addEventListener('change', updateNameField);
    statusTypeCompletedRadio.addEventListener('change', updateNameField);
  });
</script>
{% endblock %}
